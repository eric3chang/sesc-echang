%!PS-Adobe-2.0
%%Creator: dvipsk 5.55a Copyright 1986, 1994 Radical Eye Software
%%Title: SKEWED.dvi
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /usr/local/lib/texmf/bin/sunos4.1/dvips -o SKEWED.ps
%+ SKEWED
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.03.28:1154
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (SKEWED.dvi)
@start /Fa 1 47 df<EA03E0EA0FF8EA3FFE487EA2B51280A76C1300A26C5AEA0FF8EA
03E011116F9034>46 D E /Fb 8 104 df<007FB81280B912C0A26C17803204799641>0
D<EB0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE039
03FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387
F8397F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BA62A>3
D<EC03FF023F13F09138FC30FCD903C0130FD90F00EB03C0013CEC00F001701538498148
488148488148C7EC038000061601000E17C048EE00E0001817600038177000301730A200
70173800601718A200E0171C48170CA4B912FCA200C0C70030C7120CA46C171C00601718
A20070173800301730A20038177000181760001C17E06CEE01C000061780000716036C6C
ED07006C6C150E6C6C5D01705D013C15F0010FEC03C0D903C0010FC7FCD900FC13FC9138
3FFFF0020390C8FC36367BAF41>8 D<EB0FE0EB7FFC497E0003EBFF804814C04814E048
14F04814F8A24814FCA3B612FEA86C14FCA36C14F8A26C14F06C14E06C14C06C1480C6EB
FE006D5AEB0FE01F207BA42A>15 D<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3F
E0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9
FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA
03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0
ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FC
AD007FB81280B912C0A26C1780324279B441>20 D<181EA4181F84A285180785727EA272
7E727E85197E85F11F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F
80F13F00197E61614E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>33
D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03
F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D
7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F
80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C13
0F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>I
E /Fc 21 118 df<1403A21406A45CA45CA4903807FF80011F13E090387C30F0D801F013
3C3803C060D80780131ED80F00131F48140F003E13C0A25AA239F801801FA3151E903803
003E153C157C1578D8780613F0EC01E0003CEB03C0001EEB0F80390F0C3E003807FFF800
0113E0D8000CC7FC5BA45BA45BA220347CA728>30 D<1238127C12FE12FFA2127F123B12
03A31206A3120C121812381270122008127A8614>59 D<013FB512FC16FF903A01FC001F
C04AEB03E0EE01F801031400177C4A80A2010781A25CA2130F18805CA2011F1600A24A5C
A2133F173E91C8127E177C4915FC5F017E14015F01FE4A5AA2494A5A4C5A00014BC7FC16
7C495CED03E00003EC1FC0B600FEC8FC15F031287DA736>68 D<90383FFFF0A2903801FC
005CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7FCA25BA2137EA213
FEA25BA21201A25BA21203B512C0A21C287DA71D>73 D<D93FFCED3FFC187F0101EEFF00
02BE5DEF01BE0103ED037E187C023E1406170C496C15FC4D5A01061530A2010E1561EFC1
F090380C0F80EE0181011CEC03036001181406160C01381507912607C0185B01301430A2
0170EC600F04C05B1360913803E18001E09038E3001F95C7FC01C013E615EC00015EDA01
F8133E01805BEA03C000074A137ED8FFFC9039C01FFFF014003E287CA73F>77
D<D93FFC903801FFF88001019138001F006E141E170C902603BF80131C1718EC1FC0A249
6C6C1338173090380607F0A290260E03F81370176090380C01FCA290261C00FE13E05F01
18137FA20138EB3F81031F5B013014C1150F017014E3030790C7FC016014F3150301E014
FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235287DA735>I<000FB712E05A
9039800FE007D81E009038C001C05A0038011F1300123000705C00601501023F148012E0
481400A2C74890C7FCA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CA2131F001FB57EA22B287DA727>84 D<EB1F80EB7FC0EBF0E73803C03FEA078048487E
A2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA7803010E13C0393C1C
F980381FF07F3907C01E001C1B7C9924>97 D<EA01F0123FA2EA03E0A21207A25BA2120F
A25BA2121F139FEB3FC0EBE0E0383FC0F0EB0078A2123E007E137CA2127CA212FC14F85A
A338F001F0A214E0130314C0EB078038700F00EA781E6C5AEA1FF0EA07C016297CA71D>
I<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C123E003C130012
7CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03F8171B7C991E>
I<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E1338481370EB07E0387FFF
8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13E0381E07C0380FFF00
EA03F8161B7C991F>101 D<EC03E0EC0FF0EC1E38EC3C3C157CEC7CFC1478ECF8F81570
1500A2495AA590B512E0A2903803E000A4495AA5495AA649C7FCA5133EA4133C137C123C
EA7C78127EEAFC7013F0EA78E0EA71C0EA3F80001EC8FC1E357CA820>I<133EEA07FEA2
EA007CA213FCA25BA21201A25BA2120314FCEBE3FF9038EF0780D807FC13C0EBF00313E0
A2EA0FC014071380A2121FEC0F801300A248EB1F00A2003E1406143E127EEC7C0C127C15
1800FCEB3C30157048EB1FE00070EB0F801F297CA727>104 D<130E131F5BA2133E131C
90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA01F0A3485AA2485AA2EBC1
80EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA617>I<3B07801FC007E03B
0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B4913
3E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218
C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D993B>109
D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1147C5B
1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300D81F00
13C7EC01FE000EEB00F8231B7D9929>I<EB0FE0EB3FF8EBF83C3801E00E3803C00F3907
800780EA0F00121E123E003C14C0127C158048130FA31500485BA2143E143C5C12785C38
3C03C0381E0F80D80FFEC7FCEA03F81A1B7C9921>I<3807803E390FE0FF803818F3C139
30F703C0EBFE073860FC0F13F8158039C1F0070091C7FC1201A2485AA4485AA4485AA448
C8FCA2120E1A1B7D991F>114 D<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2
143C000F1318EBE0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A248
13F05A387001E0EB03C0383C0F80381FFE00EA07F8171B7C991F>I<131C133EA25BA45B
A4485AB512E0A23801F000485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300
EA1E06EA1F1CEA0FF8EA03E013267EA419>I<EA03E0486C1338D80C78137CEA187C0030
5CA212605B00C0495AA2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A20003
131F9038E037863901F0E7CE3900FFC3FC90383F00F0211B7D9927>I
E /Fd 8 57 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E>I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513
FE381BFF80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A2147848
13F8006013F0387001E01238381E07803807FF00EA01F816227CA01E>I<EB0FC0EB7FF0
3801F0383803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9
FFE038FB80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C
1370380781E03801FFC038007F0018227DA01E>I<1230123C003FB5FCA24813FE14FC38
60001C143814704813E014C0EA0001EB0380EB07001306130E5BA25BA21378A35BA41201
A76C5A18237CA11E>I<137F3803FFC0380781E0380E00704813380018131C1238A3123C
003F1338381FC078EBE0F0380FF9E03807FF80120114C0000713F0380F0FF8381C03FC38
3801FE3870007E141F48130F1407A314060070130E0078130C6C1338001F13F03807FFC0
C6130018227DA01E>I E /Fe 40 122 df<913803FFC0027F13F00103B512FC010FEB00
FED93FF8133FD97FE0EBFF8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA5
92383FFFC0B8FCA4000390C7FCB3ABB5D8FC3F13FFA4303A7EB935>12
D<B61280A819087F9620>45 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F
800D0D798C1B>I<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A421
3779B630>49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F
000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216
E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A49
5A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>
I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001
FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC0
92C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC048
7E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806C
B61200000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F153F157F15
FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207
485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A429377DB630>I<00
1C15C0D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB
07FE90383FFFE090B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E015
7F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C
5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB6
30>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0
EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58 D<ED03E04B7EA24B7EA34B
7EA24B7EA34B7EA292B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F
80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0
C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F801
07B61280A4413A7DB948>65 D<B912F0A426007FF8C7FCEF1FF8170717031701A21700A2
1878A3043C137C183CA41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3
181EA293C7FCA2183EA2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338
397DB83F>69 D<B612FCA439007FF800B3B3ADB612FCA41E397DB824>73
D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FC
A431397DB839>76 D<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717E
A2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFC
EE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F1303
94390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82 D<D907FF130E013FEBE01E
90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F1400
90C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C81
6C15F06C816C81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157F
A3163FA27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512
E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<B600FC011FB512C0A426007FF8
C8381FC000725AB3B3181F013F94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A
6D6DEB07F06D01F0EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0030F1380423A7D
B849>85 D<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFCC8EA7E006C71153C171F
6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA26E18036D4B6D5CA26D6D
496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C131E816D02016E5BEFE01F
03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE021F010FEDC1E04D7E03
FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95C8FC4C80A26E5F4C143F
6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F5E5E3A7EB863>87
D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5A
EA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF
5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE003
2A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF000
13804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F0
6E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9
C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C0
48485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01
E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023
257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F00
03EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B00
0F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>
I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC
1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F
6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025
257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A248
1381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D
>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C13
8F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907
FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E0
6C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C
6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<
13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A
14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487E
A56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5
FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07
E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E8215
0F82B5D8F83F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7D
B91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F8190
3983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A
5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FF
F8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3
B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003F
E048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F
5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC0101
13C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003
496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F0
6E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91
C9FCACB512FCA42F357EA435>I<49B4EB0780010FEBE00F013FEBF81F9039FFC07C3F00
03EB803E3A07FE000F7F4848EB07FF121F497F123F497F127FA25B12FFAA6C7EA36C7E5D
6C7E000F5C6C6C5B6C6C133F6CEBC0FD39007FFFF1011F13C10101130190C7FCAC037F13
FEA42F357DA432>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C
6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>I<90383F
F0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D1300
13FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0
130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF8
1F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578
A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>I<01FFEC
3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC
011F13F00103138030257DA435>I<B500F1B538803FFFA43D07FE000FF80003E06C6C01
0715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E
7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF1
0107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E14
7C023C143C40257EA445>119 D<B539F01FFFF0A4000390398003F8006C01C013E06C14
07D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E
6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D
7E49130F00016E7EB590383FFFF8A42D257EA432>I<B539F001FFF8A4000390C7EA3F00
161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07
010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E
5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D
1F80D83FFFC9FCEA1FFCEA07F02D357EA432>I E /Ff 27 122 df<1503A35DA21506A2
150EA2150CA2151CA21518A21538A21530A21570A2EC07FE91383FFFC0903901FCE3F090
3907E0E0F890391F80C03ED93E007FEB7C01D801F8EC0F80D803F0018013C0D807E01407
1403D80FC015E0D81F801300A248485AA2007E1306A2020E130F12FE48010C14C0A2021C
EB1F80A20218EB3F00A20238137E007C5D1430007E4A5A003E90387003F06CEC07C09138
600F80D80F80013FC7FC3903E0E0FC3901F8E7F039007FFF80D90FFCC8FCEB01C0A25CA2
1303A291C9FCA25BA21306A2130EA2130CA22B4B7CB931>30 D<121C127FEAFF80A5EA7F
00121C0909798817>58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A21203
13005A1206120E5A5A5A12600A19798817>I<EF0180EF07C0171F177F933801FF00EE07
FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9
FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED
1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0171F1707EF01803232
79AD41>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407
A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA2
5C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A2
5B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<1760
177017F01601A21603A21607160FA24C7EA216331673166316C3A2ED0183A2ED03031506
83150C160115181530A21560A215C014011580DA03007FA202061300140E140C5C021FB5
FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F01680487E000716FFB56C
013F13FF5EA2383C7DBB3E>65 D<9339FF8001C0030F13E0037F9038F80380913A01FF80
7E07913A07F8000F0FDA1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC80495A49
48157E495A495A4948153E017F163C49C9FC5B1201484816385B1207485A1830121F4993
C7FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A26C160E170C171C5F6C7E5F001F
5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010FB5
C9FC010313FC9038007FC03A3D7CBA3B>67 D<0103B7FC4916E018F8903B0007F80007FE
4BEB00FFF03F80020FED1FC0180F4B15E0F007F0021F1503A24B15F81801143F19FC5DA2
147FA292C8FCA25C18035CA2130119F84A1507A2130319F04A150FA2010717E0181F4A16
C0A2010FEE3F80A24AED7F00187E011F16FE4D5A4A5D4D5A013F4B5A4D5A4A4A5A057FC7
FC017F15FEEE03FC91C7EA0FF049EC7FC0B8C8FC16FC16C03E397DB845>I<0103B812E0
5BA290260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143FA25D1760027F
14E095C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA2903903FC001F82
4A130EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25CA2137FA291CB
FC497EB612C0A33B397DB835>70 D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA214
1FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA2130718404A15
C0A2010F150118804A1403A2011F16005F4A1406170E013F151E171C4A143C177C017F5D
160391C7120F49EC7FF0B8FCA25F32397DB839>76 D<92391FE00380DBFFFC130002036D
5A91390FE01F8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495A
A2011F153891C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F0
6D806D80021F7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7
FCA3003C153EA25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC
39E03FFFF8010F13E0D8C00190C9FC313D7CBA33>83 D<0003B812FEA25A903AF8003FC0
0101C0913880007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C00701718
0060130112E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2
147FA292C9FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>I<
49B500F890387FFFF095B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7FC
6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F9
6FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15
C04A486C7EEC0300020613034A805C4A6D7E14704A1300494880495A49C86C7E130E011E
153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC6144397EB845>88
D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB1F801207
5B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D48150CA21403
EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83C0F9C0
3A03FF007F80D800FCEB1F0026267DA42C>97 D<EC3FC0903801FFF0903807E03C90380F
800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F143848481300A2
127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E0390F8007
C03907C03F003801FFF838003FC020267DA424>99 D<EC3FC0903801FFF0903807E07890
381F801C90387E001E49130E485A485A1207485A49131E001F141C153C484813F8EC03E0
007FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E153C6C14706C
6C13E0EC07C03903E03F003801FFF838003FC020267DA427>101
D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7FCA414035D
A414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C147EA514FE
5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12FEEA7C3CEA
7878EA1FF0EA07C0294C7CBA29>I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA
03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012C05BEA007EA213
FE5B1201A25B12035BA20007131813E01438000F133013C01470EB806014E014C01381EB
838038078700EA03FEEA00F815397EB71D>105 D<150FED3F80A2157FA31600151C92C7
FCABEC0F80EC3FE0ECF0F0903801C0F849487E14005B130E130C131CEB1801133801305B
A2EB0003A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FE
A25CA21301001E5B123F387F83F0A238FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA
0FC0214981B722>I<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
A2EA7E03A2EAFE07130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA0780123B7D
B919>108 D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00
F83C01F026383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991C7FCA2
00E090C700FE1301485A017E5CA200000201140301FE5F495CA203031407000160495C18
0F03075D1203494A011F13601980030F023F13E00007F000C0495C1901031F023E138000
0F1803494A150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449
>I<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C
00705B00605BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E
120349010F133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE0700
001FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<02FC13C0903803FF0190380F8383
90383F01C790397E00EF8049137F485A4848133F000715005B485A001F5C157E485AA200
7F14FE90C75AA3481301485CA31403485CA314075D140F127C141F007E495A003E137F38
1F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190387FFF
F0A322357DA425>113 D<14FF010313C090380F80F090383E00380178131C153C4913FC
0001130113E0A33903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E01303
9038003FF014071403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F00
6C133E001E13F83807FFE0000190C7FC1E267CA427>115 D<EB01C0497E1307A4130F5C
A3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA3
12075BA3120FEBC006A2140E001F130CEB801C141814385C146014E0380F81C038078780
D803FEC7FCEA00F819357EB31E>I<01F8EB03C0D803FEEB07E0D8070F130F000E018013
F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E
16C013FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C
6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>118 D<13F8D803FE1470D807
0F14F8000EEB8001121C121800381403003015F0EA701F1260013F130700E0010013E012
C05BD8007E130F16C013FE5B151F000115805BA2153F000315005BA25D157EA315FE5D14
01000113033800F80790387C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B007F49
5AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C06CB4C8FCEA01FC25367EA429>
121 D E /Fg 11 58 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C
0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC38
0001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F
01F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301A2130313071306130C13
1C131813301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7
EAF800A7497E90383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C5C1480D819
FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A2
1230127C12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19
277DA521>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E
91C7FC5AA21304EB3FC038FCFFF038FDC078B4C67E143E48131E141FA2481480A4127CA4
003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>
I<1230123C003FB512E0A215C0481480A239700007000060130E140C48131C5C5CC75A5C
1301495AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B287DA621>I<137F
3803FFE0380781F8380E007C48131E5A801278A3127C007E131EEA3F80EBE03C6C6C5A38
0FFCF03807FFC06C5BC613E0487F38079FFC380F07FEEA1E0348C67E48133FEC1F804813
0FA21407A315001278140E6C5B6C5B380F80F03803FFE0C66CC7FC19277DA521>I<137F
3801FFC03807C1E0380F0070001E1378003E7F003C133E007C131EA200FC131FA41580A4
007C133FA2123C003E137F121E380F01DF3807FF9F3801FE1FD8001013001300A2143E12
3C007E133CA25C5C007C5B383003C0381C0780D80FFFC7FCEA03F819277DA521>I
E /Fh 39 122 df<04FFEB03F003039038E00FFC923A0FC0F01F1E923A3F00783E0F923A
7E01F87C3FDB7C03EBFC7F03FC14F8DA01F813F905F1137EDC01E1133C913B03F00003F0
00A314074B130760A3140F4B130F60A3010FB812C0A3903C001F80001F8000A3023F143F
92C790C7FCA44A5C027E147EA402FE14FE4A5CA413014A13015FA313034A13035FA31307
4A495AA44948495AA44948495AA3001CD9038090C8FC007E90380FC03F013E143E00FE01
1F5B133C017C5C3AF8780F01E0D878F0EB07C0273FE003FFC9FC390F8000FC404C82BA33
>11 D<387FFFF8A2B5FCA214F0150579941E>45 D<120EEA3F80127F12FFA31300127E12
3C0909778819>I<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED
038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A214
0EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA2
5B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67
D<0103B512F8A390390007F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FC
A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA213
7FA291C8FC497EB6FCA25C25397CB820>73 D<0107B512FCA25E9026000FF8C7FC5D5D14
1FA25DA2143FA25DA2147FA292C8FCA25CA25CA21301A25CA21303A25CA21307A25CA213
0F170C4A141CA2011F153C17384A1478A2013F157017F04A14E01601017F140317C091C7
1207160F49EC1F80163F4914FF000102071300B8FCA25E2E397BB834>76
D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2021F167FF1EFC0141DDA1CFC
EC01CF023C16DF9538039F800238ED071FA20278ED0E3F97C7FC0270151CA202F04B5AF0
707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED0701610280140EA20107ED1C
0305385B14006F137049160705E05B010EEC01C0A2011E913803800F61011CEC0700A201
3C020E131F4C5C1338ED1FB80178163F04F091C8FC01705CA201F04A5B187E00015DD807
F816FEB500C09039007FFFFC151E150E4C397AB84A>I<902603FFF891B512E0A281D900
07923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307033F92C7FC141C82DA3C1F5C
70130EEC380FA202786D131E0307141C147082DAF003143C70133814E0150101016E1378
030014705C8201036E13F0604A1480163F010715C1041F5B91C7FC17E149EC0FE360010E
15F31607011E15FF95C8FC011C80A2013C805F1338160013785F01F8157CEA03FC267FFF
E0143CB51538A243397CB83E>I<ED03FE92383FFFC09238FC07F0913903E001F891390F
80007C023FC77E027E8002F815804948EC0FC0EB07E04948EC07E0131F4A15F049C81203
137E01FE16F8485AA2485AA2485AA2120F5B001F16075B123FA34848ED0FF0A448C9EA1F
E0A3EF3FC0A21880177F18005F5F16015F6C4B5A4C5AA24C5A6C4B5A6D4A5A001F93C7FC
6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F806C6C013FC8FC90383F01FC90381FFFE0
010190C9FC353D74BA40>I<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8
141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301
EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>I<ED03
FE92383FFFC09238FC07F0913903E001F891390FC0007C023FC77E027E804A1580D901F0
EC0FC013074948EC07E0495A4A15F049C8FC49150301FE16F8485AA2485AA2485AA2120F
491507121FA2485AA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F4817005F5F1601
5F007F4B5A5F91380F800791393FE00FE06C903970601FC0902680E0305B261F81C049C7
FC913880187ED80FC35C3A07E30019F00003EC1FE0D801FB14806CB46C48C8FC90263F81
FC13186DB45A01010138133890C7003C1330177017F05FED3E03ED3F07EEFFC05FA294C7
FC5E6F5A6F5AED07E0354B74BA40>I<0103B612F017FEEFFF80903B0007F8003FC04BEB
0FF01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092
C7120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F
0103EC0F80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4A
ECE007A2017F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEA
FFE0EF3F80383B7CB83D>I<92383FC00E913901FFF01C020713FC91391FC07E3C91393F
001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915
C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138
007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A
4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F
3D7ABA2F>I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C
5C003C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA2
5DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CEB3FF0007FB512F8B6FCA2333971B83B>I<003FB539800FFFFEA326007F80C7EA7F80
91C8EA3F00173E49153CA2491538A20001167817705BA2000316F05F5BA2000715015F5B
A2000F15035F5BA2001F150794C7FC5BA2003F5D160E5BA2007F151E161C90C8FCA2163C
4815385A16781670A216F04B5A5E1503007E4A5A4BC8FC150E6C143E6C6C5B15F0390FC0
03E03907F01FC00001B5C9FC38007FFCEB1FE0373B70B83E>I<14F8EB07FE90381F871C
90383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C13
00A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C
485B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803F0031207
13E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0
007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>99
D<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F813
00EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F
5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77
B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913
F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530
007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690
C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0
F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA4
14FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE
3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38E09039
01F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201
151F1203491480A2153F1207491400A25DA249137EA215FEA25D00031301140314076C6C
485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00
FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01
FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FF
E01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D000F14
7E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E0007E15F0
16E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0EB07E014
F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEA
F07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB
83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0EA01FFA3EA00075C
A3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01C1F09038FC03
87EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEBF1C0EBF38001FFC8
FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0A21583003F01
3F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB07F80038EB01E024
3B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25B
A21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA
7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>
I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F
78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F
80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C
120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E049017E
15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D8
01E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E00078
13C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12
034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E001FEC
3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8
017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A
4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E
6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF09039
3CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15C
A2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A
6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA212
03A25B1207B512C0A3293580A42A>I<ECF803903807FE0790381F871F90383E03BF017C
13FEEBF80112013803F000484813FC120F5B001F130115F8EA3F80A2007F1303010013F0
A34813074814E0A3140F4814C0A3141F1580143FA2007C137FECFF006C5AEB03BF381F0F
7F3807FE7EEA01F0C7FC14FE5CA313015CA313035C130748B512C0A3203577A426>I<39
03C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F800078150000
701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F
5BA3123F90C9FC120E212679A423>I<14FE903807FF8090380F83C090383E00E04913F0
0178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F
6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E0070
5B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3
133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3
121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA
07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C00
38140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B5D
120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F003133814070001
ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F013
0ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E14
0000E08013FEC6485B150E12015B151E0003141C5BA2153C000714385B5DA35DA24A5A14
0300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC0212679A426>I<01F01507D803FC
903903801F80D8071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F0070
1607A249133FD8F07E168000E0ED000313FEC64849130718000001147E5B03FE5B000316
0E495BA2171E00070101141C01E05B173C1738A217781770020314F05F0003010713016D
486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A4
37>I<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C01F
018013C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214FE
A25CA21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F1307
010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D803
FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E14
8012E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D14
070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC
147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>
I E /Fi 32 122 df<EEFFFE031F9038FFCFC04AB7FC1407021FEBC00791387FFC00DAFF
F05B4901C05B495B4990C7FC495AA2495A83133F4A8083AFBAFCA526003FFCC71203B3B3
A7003FB5D8FC03B612C0A542547DD34B>13 D<B712F0AB240B7F9F2D>45
D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A600
7FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C0
7F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F01680486C6E13C0
7F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13
005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A
48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F80140749C8FC013E15
0F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<91380FFFC091B512
FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED803F86E7E491680
D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC4C1300
5FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713E00301
13F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218FEA2EA03E0EA0F
F8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001F04A13C06C484A
1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F1580010302FCC7FCD900
1F1380374F7ACD43>I<177C17FEA2160116031607160FA2161F163F167FA216FF5D5DA2
5D5DED1FBFED3F3F153E157C15FCEC01F815F0EC03E01407EC0FC01580EC1F005C147E14
7C5C1301495A495A5C495A131F49C7FC133E5B13FC485A5B485A1207485A485A90C8FC12
3E127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4F7CCE43>I<D80380150ED807E015
7E01FEEC03FED9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E190
C9FC01E0CAFCABEC0FFF027F13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C713
F8496E7E49143F4981496E7E6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E487E
487EA418E0A35B6C484A13C05B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807
F8495BD803FE01075B2701FFC03F5B6C90B65A013F4AC7FC6D14F8010314C09026007FF8
C8FC344F79CD43>I<ED0FFF92B512E0020780021F14FC91397FFE03FE903A01FFF0007F
4901C0EB3F804990C7121F4948EC7FC0494814FF49484913E049485B01FF5C485BA2485B
5AA2486F13C04A6D1380486F1300177E94C7FC5AA291CAFC5AA21508913801FFF8020713
FFB54814C04A14F04AC66C7E023C6D7E4A6D7E4A6D7E7013804A15C0A24A15E07013F05C
18F8A491C714FCA37EA67EA46C17F880A27E18F06C5D18E06C6D15C07E6E4913806C6D15
006D6C495A6D6CEB7FFC6DB448485A6D90B55A010315C0010092C7FC023F13FC020713C0
364F7ACD43>I<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92
B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC49
4848C9FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F48
5B481A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7F
A21B0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D
4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF8
0203903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC52
5479D261>67 D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F8573
7F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C092
B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684A286
84A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F807039038FE
07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82 D<91260FFF80130791B5
00F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB0FFD4801800101B5
FC4848C87E48488149150F001F824981123F4981007F82A28412FF84A27FA26D82A27F7F
6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC6C16FF6C17C06C83
6C836D826D82010F821303010082021F16801400030F15C0ED007F040714E01600173F05
0F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F6D4B13806D17006D
5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C90B65AD8FC0393C7
FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>I<EC7FFF0107B512F0013F14
FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D
7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901
FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C0279
7F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01
FC010713E0010101E090C8FC3C387CB641>97 D<913801FFF8021FEBFF8091B612F00103
15FC010F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485B
A2486F138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F1707
6C6D15C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01F
F0010390B55A01001580023F49C7FC020113E033387CB63C>99 D<4DB47E0407B5FCA5EE
001F1707B3A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D9
7FFC0101B5FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA3
6C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A
0FFFC07FCF6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<9138
03FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E484913
0F48496D7E48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318
E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F
6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7
FC020113F034387CB63D>I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038
C03FF849EB807F49903800FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAE
B712E0A526007FF8C8FCB3B3A7007FB512FEA52E547CD329>I<EB3FF0B5FCA51203C6FC
B3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1
E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>
104 D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5
FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA51203C6FCB3A54CB512F8A5
9339003FFE00EF1FF0EF3FC04D5A4DC7FCEE03FEEE07F84C5A4C5AEE7FC04CC8FC4B5A4B
5AED0FF8ED1FE04B7E4B7EECF1FF02F37F02F77F91B6FC83159F030F7F02FE80DAF8077F
4A7E6F7F6F7F83707E82707F84707F707F82707F84707F177F717E4D13C0B6D8F003B6FC
A540537CD247>107 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>I<D93FF0
D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271FE07FFCD9
FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137FDAF1E003
8FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F8
07B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F0030F809239
1FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5C
A25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B612C00103
15F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A14
7F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F1800
6D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7
FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF0
01FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1F
FFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A361
18FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02
F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE0
03FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC0
7FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F36
7CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE013
0148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF
16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713F01501
0078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FE
EB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<14
3EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003F
FEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C
5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC616
07B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC0
3F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F00107B5FC
A5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E
8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13
FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5A
A26F5AA26F5A6F5A40367DB447>I<B6D8E07FB5D8C003B512C0A5000101F0C701F0C738
1FF8006E027FED07E06C715DA26E023F150F017F705DA26E181F013F4B6C92C7FC6E606D
70143E94B5FC6F177E6D4A6E137C03C001F315FC6D715B160303E001E114016D020702E0
5B03F013C06D71485A160F03F8D9807F13076D05F85B93381F003F03FC160F027F4902FC
5BDBFE3E011F131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C6D137E6E5FA2
4C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9FC5A367DB461
>I<B600F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D
5E6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F13
7E023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA3
6F5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C
137C486C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F0
00035BC690CBFC404D7DB447>121 D E /Fj 27 90 df<B512FCA516057C941C>45
D<15C014031407141F14FF90B5FC15803801FE3FC7FCA3147F1500A55C5CA513015CA513
035CA513075CA5130F5CA5131F5CA3133F497EB612F0A215E01C3878B72A>49
D<EC07F8EC3FFF91B512C0903903F01FE0903907800FF090390E0003F84914FC49EB01FE
5B0160130001E014FF13FC487E7FA449EB01FE5BEA007890C7FCED03FCA2ED07F8ED0FF0
A2ED1FE0ED3FC01680ED7F0015FE4A5A4A5AEC07E04A5A4A5A4AC7FC147C5C495A495AD9
0780136049C7FC131E4914C013705B484813014848EB038048B6FC5A003F15005AB7FC5D
A228387CB72A>I<EC0FF0EC7FFE49B51280903903F01FC090390F800FE090391E0007F0
011C14F8133C017F13031480A201FF1307A3EB7F00013E130F90C713F0A2ED1FE016C0ED
3F80A2ED7E005D4A5AEC0FE0D903FFC7FC15E090380001F8EC00FE157FED3F8016C0A2ED
1FE0A416F0A2001F143FD87F8014E07F12FFA2ED7FC0A249148090C712FF00FC150000E0
495A0070495A6C495A001E495A390FC03FC06CB55A000101FCC7FC38003FE0253A7BB72A
>I<166016E0150115031507150F16C0151F153F157F15FFEC01DF913803BF80153F1406
140C141C14389138707F00146014C0EB0180EB03005B010E13FE5B13185B5B5B0001495A
EA0380130012065A5A0038495A5A5AB712F8A3C73807F8005DA4140FA25DA4EC3FF0011F
B512C0A325397BB82A>I<010C1418010F147890391FE007F091B512E016C01680160015
FC4913F0013113800130C8FCA413701360A513E0EBC07F9038C3FFE09038CF81F09038FC
00FC01F0137E4848133E49133F491480C8FC151F16C0A3153FA4121FEA7F80157F00FF15
80A390C7EAFF005A00C05C6C13015D0060495A0070495A7E003CEB1FC06C495A6C6CB4C7
FC3807FFFC000113F038007F80253A7AB72A>I<EC01FE91380FFF80023F13E09138FF01
F0903901F80070903907F001F890380FC00390381F8007EB3F005B13FE4914F00001EC01
C0484890C7FCA2485A120F5BA2121FEBC07F393FC3FFC09038C781F09038CE00F8484813
7C01B87F01F0133F5B49EB1F8012FF4914C0A390C7FC153FA35AA3157F1680A316005D5D
A2007E495A5D003E1303003F495A6C6C485AEC1F80260FE07FC7FC3803FFFC6C13F03800
3FC0253A79B72A>I<160EA2161EA2163E163F5EA25EA25D83ED037FA21506A2150C83ED
183FA21530A2156083EDC01F14011580140303007F5C0206130F140E140C141C02188002
38130714301470146091B6FC835B913880000349C7FCA2130683491401A25BA24981A201
708013F0486C4A1380D80FFC4A13C0B56C017F13FF93B6FC18FE383C7DBB3E>65
D<DB07FC130692397FFF800E4AB5EAE01E913A07FC01F03C913A1FE000787CDA7F80EB1C
FC02FEC7120FD903FC1407495A4948EC03F849481401495A4948140049C9FC5A4916F048
48167012075B120FA248481660A25B003F1700A3485AA512FF5BA51703A2127FA25F1706
6C6C150EA25F121F6D5D000F5E7F6C6C5D00034B5A6C6C4A5A6C6C020FC7FCD97F80131E
6D6C137890390FF803F00103B512C0010091C8FCEC1FF8373D77BA3C>67
D<017FB612F017FE717E0100D9C0007F6E48EB1FE0EF07F002FF6E7E92C76C7E717E8484
F03F805B5C19C0181FA219E013035CA513074A153FA5010F17C04A157FA31980A2011F16
FF4A1600A24D5AA24D5A013F5E4A1407604D5A4D5A173F017F4B5A4A02FEC7FC4C5AEE07
F8EE1FF0D801FFECFFC0B8C8FC16FC16C03B397DB83F>I<017FB712FEA301009038C000
076E481300183E02FF151E92C8FC180EA45B4A1506A3933801800CA20103EC03004A1500
A25EA25E0107141E4A137E91B512FEA3ECF800010F143C4A131CA3160C041C1306011F02
18130C5CA293C71218A3013F16305C1870186018E0A2017F15014AEC03C01707171FEF7F
80D801FFEC03FFB9FC1800A237397DB839>I<017FB712FCA301009038C0000F6E481301
EF007C02FF153C92C8FC181CA45B4A150CA318181603010314064A1500A3160EA201075C
4A133C16FC91B5FCA390390FF801F89138F000781638A4011F14305CA393C8FCA2133F5C
A5137F5CA448487EB612E0A336397DB836>I<017FB500C0B61280A24C150001009026C0
000113806E486D90C7FC5F14FF92C75BA417035B4A5DA4170713034A5DA4170F13074A5D
91B7FCA302F8C7121F130F4A5DA4173F131F4A5DA4177F133F4A5DA417FF137F4A92C8FC
A448486C01037FB60081B6FCA203015C41397DB83E>72 D<013FB512E0A25B9039007FE0
006E5AA2147F5DA514FF92C7FCA55B5CA513035CA513075CA5130F5CA5131F5CA5133F5C
A4EBFFE0007FEBFFC0A2B6FC23397EB81E>I<017FB500C090B512C01A80A2010001C0C7
383FF8006E48EC1FC096C7FC02FF151C92C85A6060EF03C04DC8FC49150E4A5C5F5FEE01
C04C5A01034AC9FC4A130E5E167016F04B7E010713034A487E151FED3BFE1573EDE1FF90
380FF9C1DAF7007F14FE4A6D7E5C4A6D7E131F4A6D7EA2160F83A2013F6E7E5C707EA270
7EA2017F6E7F5C717EA24D7E48486C4913F8B6D8800FEBFFC04C5CA242397DB841>75
D<017FB512F0A3010001C0C8FC6E5AA214FF92C9FCA55B5CA513035CA513075CA5130F5C
A4EF0180011FED03005CA25F1706A2013F150E4A140CA2171C173C1738017F15784A14F8
1601EE07F0161FD801FF14FFB8FC5FA231397DB834>I<90267FFF80923803FFFE816101
00F0FE00027FEE0DFCDA6FE0151B14EF02CFEE33F8A2DAC7F01563A219C7130102879238
0187F0DA83F8EC0307A21806190F90260381FC140C02015F1818A218306E6C151F491660
010604C05BA2037FEB0180A2943803003F130E010C03065CED3F805F5F197F011C6D6C5A
011895C7FC5FA25FDB0FE05C0138ECE180013002E3C75AA216E6ED07F604FC1301137001
604A5C150301F05C00015DD807FCEE07FEB500E0D9C003B512FC150116804F397DB84C>
I<90267FFFC00103B51280A26F1600D9007F9138003FF06FEC0F8072C7FCECEFF802CF15
06ECC7FCA2ECC3FE180E903801C1FF0281150C02807FA26F7E181C01036D7E020015186F
7EA26F7E1838496D7E010616306F7EA26F7E6F1470010E1580010C027F136017C0163F17
E0041F13E0011C15F00118020F5B17F8160717FCEE03FD013815FF01306E5BA282A2177F
137001606FC8FCA201F0811201D807FC81B512E017065C41397DB83E>I<ED0FFC92B57E
913903F80FE091390FC003F8023FC77E027E147ED901F8804948EC1F804948EC0FC04948
15E049481407013F16F049C8FC01FEED03F812014916FC1203491501000717FE485AA212
1F5BA2123F17035B127FA54848ED07FCA4EF0FF8A3EF1FF0127F18E0173F18C0EF7F806C
7EEFFF005F001F15016D4A5A000F5E6C6C4A5A4C5A6C6C4A5A6C6C4AC7FC6C6C147E017F
495A90391F8007F090390FF01FC0902601FFFEC8FC9038003FF0373D77BA41>I<017FB6
12E017FC17FF0100D9C00013C06E48EB1FE0EF0FF002FFEC07F892C7EA03FCA318FEA25B
5CA418FC010315075C18F8EF0FF0A2EF1FE00107ED3FC04AEC7F00EE01FEEE0FF891B612
E094C7FCD90FF8C9FC5CA5131F5CA5133F5CA5137F5CA448487EB67EA337397DB839>I<
017FB6FC17F017FC01009038C003FF913A7F80007FC0EF1FE002FF6E7E92C7FC717EA284
A25B5CA44D5A13034A5D4D5A604D5A4DC7FC0107EC01FE4AEB03F8EE3FE091B6C8FC16FC
9138F8007F010FEC1FC04A6D7E707E83160383131F5CA5013F14075CA5017F17C05CA218
01198048486C1503B6D880031400706C5A92C7130ECAEA3FFCEF07F03A3B7DB83D>82
D<DA03FC133091391FFF8070027FEBE0F0903A01FC03F1E0903903F0007B4948133F4948
131F4948130F49C71207013E15C0017E14035BA3000115014915807FA46D91C7FC7F8014
E06C13FEECFFC06D13FC6D13FF16C06D14F00107801301D9003F7F14039138007FFE1507
15036F7E81A2821218A30038157EA45EA2007C5D1501007E4A5A007F5D6D495A6D495AD8
F9F0013FC7FCD8F0FE13FE90383FFFF8D8E00F13E0D8C00190C8FC2C3D7CBA2E>I<0007
B812FCA3903AF8007FE003D80FC090383FC00049163C000EC7127F001E4B131C121CA212
180038170C003014FF93C7FCA25A1818A2485BC7491400A514035DA514075DA5140F5DA5
141F5DA5143F5DA3147F4A7E0003B612F85AA2363977B83C>I<B6D88007B5FCA2030014
FE000101809038007FE06C90C8EA1F00170E5A49150CA4171C1203491518A41738120749
1530A41770120F491560A417E0121F495DA41601123F495DA3160394C7FCA25E1606160E
001F150C161C5E6C6C14785E6C6C495A00034A5A6D495A6C6C011FC8FC39007F80FC6DB4
5A010F13E0010190C9FC383B74B83E>I<B500FE91387FFFC0A30003018091380FF8006C
90C8EA07E0496F5A6D5E95C7FC6C1606A25F80017F5DA25FA26E5C013F15E05F16015F6E
49C8FC131F1606A25E80010F5CA25E6E13701660010714E05E4B5A14FC4BC9FC13031506
A26E5AA201015B15381530ECFF706D13605DA25DA26ECAFCA2147EA2147C143C14381430
3A3B75B83E>I<B5D8FC03B500F090B51280A24B5D0007902780001FFEC7381FF8006C48
C7D80FF8EC07E04D15800001701403040793C7FC1A06A262A26D606C82040F5DA2041F5D
161B6E013B5D017FEC33FE04314A5A16614FC8FC16C16E1606013FEB018171130E4BC614
0C191C0306151819386E481530011FEE80704B017F1360A24B5DA26E48EC8180010F16C1
4B02C3C9FC173FDAF18014C6A202F3C713CC14FBD907FE15F8171F4A5DA24A5DA26D485D
170F4A5DA295CAFC5C170E6D481406513B75B855>I<B691381FFFE0A24A5C000301E091
3807FE00C649EC03F060017F1680A26D6C4AC7FC17066D6C5C5F17386D6C14305F6D6C5C
16016D6C5C4CC8FC6E13066D140E160C6D6D5A16386E6C5A16606F5AEC3FE1EDE380DA1F
F3C9FC15F6EC0FFE5D5D14075D140FA55D141FA55D143FA5ECFFE0017FEBFFC05EA23B39
76B83E>89 D E /Fk 55 123 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A
1F800FF07E903A3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B
03F0001F8000B3A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FF891B512C0903803
F00F90380FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0
267FFFE3B5FCA328357FB42B>13 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A48
5AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121F
A27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>
40 D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA213
1E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA248
5A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A212
7F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013
F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE0
14FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312
780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F34
7DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307
130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12
E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5
128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F
80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F80060
14E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D34
7CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238006014301570
15E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA213
0FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F8039
07C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13
F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001
F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC00
7E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5
120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390F
C007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2
127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC
1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F
01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B012
3C127E12FFA4127E123C08207A9F15>I<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC
187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D
7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2000182160748
7ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001
EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90
B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F816
07A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>68 D<B500FE903807FFF8A3000190C7
000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15
F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA2
6F7E707EA2707E707E160F83707E707EA283486C913807FF80B500FE013F13FCA336337E
B23C>75 D<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98F
C01418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E
1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C
133ED80FF04B7EB5011C90387FFFF8A33D337CB246>77 D<EC07FC91387FFFC0903901FC
07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA24848
6E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C17C0
6D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A
5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07FCC8
FC33377CB43C>79 D<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC0
17E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3
A2487EB512F8A32C337DB234>I<90381FE00390387FFC0748B5FC3907F01FCF390F8003
FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13
F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC0
150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0
B512E0011F138026C003FEC7FC22377CB42B>83 D<007FB712FEA390398007F001D87C00
EC003E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512
FCA330337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F
1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB4
13FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8
EA7FC06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F
5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED
8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA315
70A235357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48
EB007C1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC13
01011F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103
170CA2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F002
7F5EA2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B80
0207157EA24B143E0203153CA24B141C020115184C357FB24F>I<EB7F803803FFF0380F
80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07
EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1
E1FF2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80EC
FFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16
F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7
FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA
1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14
706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3
EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A
127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3F
FCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007
E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418
A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA1
22>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FC
ACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039
FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C
5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F
380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F
007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA
03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA2
5BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA
0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EA03F012FFA3
12071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8
EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500
C313F0A324347EB329>107 D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB3
15>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F028
07F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFF
F0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03
FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F
803901F007C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300
FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80
D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED8
07FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D
131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0
A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF4848
6CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0
073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C
38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512
E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200
FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F
6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A5
1370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A238
00FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F00
0380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA0
2B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5B
A26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA2
6D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E
0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F16
8090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6
ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE00
13806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E6
14FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C
7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A3
3A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070
011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A2
1430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025
307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F150000
6013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A
001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I
E /Fl 14 122 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCA9120FEA3F
C0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>58 D<ED1F80A24B7EA24B7EA34B
7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F801503023F80EC3E01A2027E80EC7C00
02FC804A137FA20101814A133F0103814A131FA249B67EA24981A290271F8000077F91C7
7EA24982013E80017E82017C80A201FC8249157FB500F0013FB512F0A43C347DB343>65
D<B600E090387FFFF0A4C601E0C73803F0004D5A4D5AEF3F80057EC7FC5F4C5A4C5AEE0F
E0EE1F804CC8FC167E5EED03F8ED07E04B5A4B7E157F4B7E02E17F02E37F02E77FECFFDF
ED0FFF4A6C7F02FC804A7E4A6C7F4A6C7F707E83163F707E707E84707F82707F707F8417
7F717E717EB6D8E007B512FCA43E337DB245>75 D<EB7FFE0003B512E04814F8390FF00F
FC391FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EB
F07F000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5
121F0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC9138
7FFF8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167F
A217E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9
C07F13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE
4848487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC
07807F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21
217DA027>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907
FC003F4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C
6C133F6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<9038
03FF80013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0
127F5B16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0
D803FEEB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<903803FF
80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8
491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3F
E06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>111
D<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03
FCEC01F8EC0060491300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F
803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14
E0C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090
B5120000F913FC38E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001F
B51280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0F
F01A2F7EAE22>I<B53B83FFFC03FFE0A43D07FC001FE0003E00183C6D167C00036F1378
033F14F86C6C6E5B157F9139807BFC016C5FDAC0FB1303017FD9F1FE5B14C19139E1E0FF
07013F5E9139F3C07F0F011F038FC7FC14F7903A0FFF803FDEA29238001FFE6D5DA26D48
6D5AA24A130701015DA26D486D5A4A13013B217EA040>119 D<B539C007FFC0A4D807FE
C7EAF80000035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F
131EECF83E010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FC
A2141EA25CA2147C003E1378007F13F8486C5A1381EB83E0EB87C0495AD87F3FC9FCEA3F
FEEA1FF8EA07E02A307EA02F>121 D E /Fm 50 122 df<14FF010713E090381F80F090
383E003849137C4913FC485A1203491378153092C7FCA7157CB612FCA23803E000157CB3
A5486C13FE3A7FFF0FFFE0A2232F7FAE27>12 D<D801F01530D807FC1570D80F0E15F026
1E0780495A486C6CEB07C0D901F0130F007801FCEB3F80902700CFFFF7C7FC02C313CF48
9038E0001E02605B163816785E5E15014B5A02E05B0078EBC0074BC8FC0101130E003CEB
801E01035B391E070038D80F0E1378D807FC5B3901F001E0C79038C003E00203EB0FF891
3907801E1C4B487E4A497E021E80021C01F01380023C14015C91267001E013C002F01400
EB01E014C01303EB078014005B011E150149D900F013801338017815034902781300495D
0001ED3C0E48486E5A49EC0FF80001ED03E032367CB13B>37 D<13031307130E131C1338
137013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45AA512F8A25AAB7EA21278A5
7EA47EA37EA2EA0780A2EA03C0120113E0EA00F013701338131C130E1307130310437AB1
1B>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2EA00F0A21378A3133CA413
1EA5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01E0A2EA03C013801207EA0F
00120E5A5A5A5A5A10437CB11B>I<123C127EB4FCA21380A2127F123D1201A312031300
A25A1206120E5A5A5A126009157A8714>44 D<B512C0A412047F9018>I<123C127E12FF
A4127E123C08087A8714>I<15C0140114031580A214071500A25C140EA2141E141CA214
3C143814781470A214F05CA213015CA213035C130791C7FCA25B130EA2131E131CA2133C
1338A21378137013F05BA212015BA212035BA2120790C8FC5A120EA2121E121CA2123C12
38A212781270A212F05AA21A437CB123>I<130C133C137CEA03FC12FFEAFC7C1200B3B1
13FE387FFFFEA2172C7AAB23>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB
0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC
3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E
14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901
F007C03803E00FEA07C0EA0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3F
F0EBF07C38FDC01EB4487E01001380EC07C04814E0A214034814F0A4127CA3127EA2003E
14E01407121E001F14C06CEB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7D
AB23>54 D<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C012
7C00FC14E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800
FFC390383F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B
380E03E03807FF80D801FEC7FC1C2D7DAB23>57 D<4A7E4A7EA34A7EA24A7EA3EC1BF814
19A2EC30FCA2EC70FEEC607EA24A7EA349486C7EA2010380EC000FA201066D7EA3496D7E
A2011FB57EA29038180001496D7EA349147EA201E0147F4980A20001ED1F801203000716
C0D80FF0EC3FE0D8FFFC0103B5FCA2302F7EAE35>65 D<DA1FF013C09138FFFE01903903
F00F8390390F8001E3013FC71277017C143F4848141F4848140F48481407A24848140312
1F491401123F90C8FC481500A300FE1600AB127F17C0A27E7F001F15016D1580120F6C6C
1403EE07006C6C14066C6C140ED8007C5C013F147890390F8001E0903903F00FC0902600
FFFEC7FCEC1FF02A2F7CAD33>67 D<B712FCA23903F800030001EC007C163E161E160EA2
1606A3160716031518A21600A31538157815F890B5FCA2EBF800157815381518A592C7FC
AB487EB512F8A2282D7EAC2E>70 D<B539F03FFFFCA2D803FCC713006C48147EB290B612
FEA201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>72 D<B512F0A23803FC006C
5AB3B3A3487EB512F0A2142D7EAC19>I<D8FFF8923807FFC06D5D0003EFF00000015F01
BE151BA2019F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3D981F0EB0303A2D9
80F81306A3027C130CA26E1318A36E1330A291380F8060A2913807C0C0A3913803E180A2
913801F300A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A2D7DAC41>77
D<D8FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0EB8FE01387
80EB83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8EC01FC1400
15FE157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2486C141ED8
0FF0140EB5FC16062E2D7DAC35>I<B612FCEDFF803A03F8000FE00001EC03F0ED00F882
167E167F821780A617005E167E5E5EED03F0ED0FE090B6128003FCC7FC01F8C9FCB2487E
B512F0A2292D7EAC30>80 D<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E821500
82A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7E
A582A5170316F815031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34
>82 D<90383F80303901FFF0703807C07C390F000EF0001E130748130348130114001270
00F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8
003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C
14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<007FB712F8
A29039000FC003007C150000701638A200601618A200E0161CA248160CA5C71500B3A94A
7E011FB512E0A22E2D7EAC33>I<B500C090380FFFC0A2D807FCC73803FE006C48EC00F8
00015E5F6C7E5F6D1401017E5DA26D4AC7FCA26E5B011F140680010F5CA26D6C5BA26E13
3801031430A26D6C5BA26E13E001005C8091387E0180A26E48C8FCA21583EC1F86A2EC0F
CCA215FC6E5AA26E5AA36E5AA26E5A322E7FAC35>86 D<EAFFE0A3EAE000B3B3B3A7EAFF
E0A30B4379B114>91 D<EAFFE0A31200B3B3B3A712FFA30B437FB114>93
D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F3801
FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C391F
83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE9038
C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9ED1F
80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC222F
7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00
007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F0
3E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F81E38
03E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017EEB80
03000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB1F80
EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FCA3B6
FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801F03C
38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C
1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE
3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378380F
E1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F8
48130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE
0038003FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703E090
38DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA
0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E
7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C5CEB
C3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E816E7E486C48
7E3AFFFE07FF80A2212E7EAD25>107 D<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFE
A20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F
803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB0FE0
3CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01F0EA
07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801
F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FCA900
7C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB1FE0
1E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E4913
3E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F09038CE
07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<90380FE01890
387FF8383801F81C3903E00E783807C007390F8003F8001F1301EA3F00A2007E1300A212
FE5AA8127EA36C13017EEB8003380FC0073803E00E3801F03C38007FF0EB1FC090C7FCA9
4A7E91381FFFC0A2222B7E9D25>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF0
1EEBE000A45BB0487EB5FCA2181E7E9D1C>I<3801FE183807FFB8381E01F8EA3C004813
78481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138
C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C
>I<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F03014
703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF131FA2000F130100071300
B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0F800221F7E9D27>I<
3AFFFC01FFC0A23A0FE0007E000007147C15380003143015706C6C1360A26C6C5BA39038
7C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A22
1E7F9C25>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E000F00007010114E08126
03E00314C0A2913807F8012701F006781380A29039F80E7C030000D90C3C1300A290397C
181E06A2151F6D486C5AA2168C90391F600798A216D890390FC003F0A36D486C5AA36DC7
5A301E7F9C33>I<3AFFFC07FF80A23A0FF003FC000003EB01F0000114C06D485A000091
C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB07E013036D7E497E1307EB067C497EEB1C1F0138
7FEB700F496C7E6E7ED803C07F00076D7E391FE003FC3AFFF007FFC0A2221D7F9C25>I<
3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D137000011460A26C6C5BA2EB
FC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D
5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C25
>I E /Fn 1 4 df<136013701360A20040132000E0137038F861F0387E67E0381FFF8038
07FE00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A21370
136014157B9620>3 D E /Fo 82 123 df<DA0FF813FC91397FFF07FF903B01F807DF83
C0903A07E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B9338F0078048480107
90C7FC1503ACB812F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA
30>11 D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E49
7EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267F
FFE0B512C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F80
0FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0
A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC003
80903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03
030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFF
E0B500C1B51280A3413B7FBA45>I<DA0FF8EB1FF8DA7FFF9038FFFEE0903B01F80783F0
07903B07E001CFC00F903B1F8007FF001F4948485A017E5CA2495C180F48486D48130715
03ACBAFCA33C01F80003F00007B3AB486C496C497E267FFFE0B500C1B51280A3413B7FBA
45>I<B612F8A31D037AB02A>22 D<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8
121C127FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80A26D
13C0A3007F137F001C131C00001300A40001130101801380A20003130301001300485B00
061306000E130E485B485B485B006013601A197DB92A>I<017C166048B416F02607C380
1401260F81C01403D900E04A5A001E01784A5A003E6D141F003C013FEC7F80007C90271B
E003FFC7FC0218B512BF007891381FFC3E00F8011CC75A020C14FC5F4C5A16035F4C5A16
0F5F4CC8FC021C5B00780118133E007C5D16FC003C01385B003E90383001F0001EEB7003
6C01E05B903981C007C03907C3800F2601FF005BD8007C49C9FC90C748EB07C0033EEB1F
F04BEB3C3803FCEBF81C4B497E913A01F001E00602030103130703E0497E912607C00714
80020F15011580DA1F00018013C04A010F1300143E5C14FC5C495A13035C495A130F4A01
07130149C701C013805B013E1603490203140001FC6F5A49020113064848913800F00E00
03705A49ED3C3849ED1FF06C48ED07C03A437BBD45>37 D<146014E0EB01C0EB0380EB07
00130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB212
7CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01
C0EB00E01460135278BD20>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378
A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A2
5B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD
20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>
43 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909
798817>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407
A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA2
5C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A2
5B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<EB03
F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA248
1580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143E
A26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB
01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB
0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E1260
12FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7
FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC7
5A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C0
07F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5D
EC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16
E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F80
03F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A214
0114031407A2140F141F141B14331473146314C313011483EB030313071306130C131C13
1813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803
F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D
5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003
F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E000605C12
700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0
213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB
3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC
903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA2
90C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900
FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C0
5A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E
140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC13
1E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C
90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C
5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907
801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A15
03A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0
C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903
F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A5
6C143FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93F
FC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48
485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEA
FF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEA
FF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A212
0E5A121812385A1260093479A317>I<007FB812F8B912FCA3CCFCAEB912FCA36C17F836
167B9F41>61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1F
A2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C7
7F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E
1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001
903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5A
EEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7
188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<
913A01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F
4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A248
5A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E
5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB
0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F8
16FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F
18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017
FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001
903880000F6C90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A2
1503150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A2
1707A2170F173F177F486D903807FF00B9FCA333397DB839>I<B812F8A3000190388000
1F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507
151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DB
FF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00
EF4948147F4948143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B
007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7E
A26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC0
3F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B648B512FEA30001902680
000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E
>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<013FB512E0A3903900
1FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C
49C7FC380781FC3801FFF038007F80233B7DB82B>I<B649B5FCA3000101809038007FF0
6C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030E
C9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E
6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F8484486D497FB6011FEBFF
80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A3
17F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA200
01F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183
A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13
C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A
487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080
C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E
7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FC
ED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A217
7E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138
FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E
7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8
491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717
806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D9
03F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE
000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2
EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA3
30397DB839>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707E
A2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED
03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C
5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190
B512813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C
140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C
14FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C014
03A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0
FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB00
1F273E0001FE130348EE01F00078160000701770A300601730A400E01738481718A4C716
00B3B0913807FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007F
E06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D
6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F8037
3B7DB83E>I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E
1403017F93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E14700103
1560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C
020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3
393B7EB83E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8
EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280
011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300F
A26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C115
0EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA2
02035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>I<007FB590383FFFFC
A3C601F801071380D97FE0D903FCC7FC013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D
6C1306160E6D6C5B6DEB8018163891387FC0306E6C5A16E06E6C5A91380FF18015FB6EB4
C9FC5D14036E7EA26E7F6F7EA24B7E15DF9138019FF09138038FF8150F91380607FC9138
0E03FE140C4A6C7EEC38000230804A6D7E14E04A6D7E49486D7E130391C76C7E01066E7E
130E010C6E7E011C1401013C8101FE822607FF80010713E0B500E0013FEBFF80A339397E
B83E>I<003FB7FCA39039FC0001FE01C0130349495A003EC7FC003C4A5A5E0038141F00
784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712074A5AA24A5A5D143F4A5AA24A5A
92C8FC5B495AA2495A5C130F4948EB0180A2495A5C137F495A16034890C7FC5B1203485A
EE0700485A495C001F5D48485C5E4848495A49130FB8FCA329397BB833>90
D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<390180018000031303390700
0700000E130E485B0018131800381338003013300070137000601360A200E013E0485BA4
00CE13CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E001A1974B92A>I<EA
FFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1FE0EBFFFC3803E03F3907000F
80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA
03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18
383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I
E /Fp 41 122 df<B612F8A91D097F9A25>45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7
EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>I<EC03C01407141F147FEB03FF133FB6FCA4
13C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E000
0315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F
00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1F
FC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8
D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D
417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E
81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A
5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017
E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F
80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E0
2D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F
87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A48
5A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038
>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0
C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D
13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D
6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6C
B612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<EA07C0EA1FF0EA3FF8EA
7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C0C7FCAEEA07C0EA1FF0EA3FF8EA7FFCEAFFFE
A7EA7FFCEA3FF8EA1FF0EA07C00F2C78AB1F>58 D<B9FC18F018FE727E19E026003FFCC7
00077F05017F716C7E727E727EA2721380A37213C0A74E1380A24E1300A24E5A4E5A4E5A
4D5B05075B94B5128091B700FCC7FC18F018FF19E002FCC7000113F8716C7EF01FFE727E
7213801AC07213E0A27213F0A31AF8A71AF0A2601AE0604E13C0604E138095B512000507
5BBA12F86119C04EC7FC18E045447CC350>66 D<DCFFF01470031F01FF14F04AB6EAE001
0207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990
C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5B
A2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C0
6E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F001
0101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001
F8C8FC44467AC451>I<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A218
7EA218FE170117031707171F177FEE03FFB95AA539447CC343>76
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>I<B64BB512FE8181
A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E
6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F707F717E71138071
13C019E0837113F07113F87113FC7113FE19FF847213F884848484A28484197F193F191F
A2190F1907B61603190119001A78A24F447CC358>I<923807FFC092B512FE0207ECFFC0
021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E
6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A2
4819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A2
6D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D
6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F802
0715C002004AC8FC030713C047467AC454>I<B9FC18F018FE727E19E0D8001F90C7000F
7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A
4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<B812F8
EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A286A7
62A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892C7
7FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E06D
EB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<B792B6FCA526003FFECAEAFC0080
6D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93C7FC61027F163E6F
157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C180F6E5E70131F6E93
C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C36F5C17E76F5C17FF
6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355>86
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813
805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0
A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F
14C0010391C7FC9038003FF82A2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0
903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F48
48141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007
157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007F
C0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007
FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12
FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07
C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7
FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381F
FC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0
007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048
D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FC
A2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680
D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC
7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F17
006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC01
0F14F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B5
12E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3
A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C
13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7F
C0B5FCA512037EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B
5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F
7E826F7E816F7F836F7F816F7F83707E163FB60003B512F8A535457DC43B>107
D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFCB590
263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC0
0FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A
5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF
8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D
7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14
FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82
A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C
6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C0902600
1FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC91
39FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFC
ACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02
CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB5
3881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC91
38E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B512
87000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E0
90C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F
020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F0090
38F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A413
07A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9
150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE0
23407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E49
1380017FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E
7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E13
01011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF0
7C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA215
78362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17
F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E0179
140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D91
39C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5B
A26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>I<B500FE90383FFFF0
A5C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6D
EBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFC
EC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E01
7E141FB500E090B512FCA5362C7EAB3B>I<B6903803FFFCA5000101E09038003E006C16
3C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15
C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5B
A26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8FFE0
5B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B
>I E /Fq 39 123 df<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B485A48C7
FC123E12385A5A124011126CC431>19 D<121E123FEA7F80EAFFC0A313E0127FEA3F6012
1E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>44
D<B612C0A51A057F9721>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>
I<1618163CA2167C1678A216F816F0A2150116E0150316C0A215071680A2150F1600A25D
151EA2153E153CA2157C157815F85DA214015DA214035DA214075DA2140F92C7FC5C141E
A2143E143CA2147C1478A214F85CA213015CA213035C13075CA2130F91C8FCA25B131EA2
133E133CA2137C137813F85BA212015BA212035BA212075BA2120F90C9FCA25A121E123E
123CA2127C1278A212F85AA2126026647BCA31>I<14FF010713E090381F81F890387E00
7E01F8131F4848EB0F80000315C04913074848EB03E0000F15F0A24848EB01F8A3003F15
FCA348C812FEA64815FFB3A26C15FEA56D1301003F15FCA3001F15F8A26D1303000F15F0
A26C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00017E137E90381F81F8903807FF
E0010090C7FC28427CC031>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48
C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C00FE15FC7E6D1303
A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00157E5D4A5A5D4A5A
4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B4914185B5B485A49143848
C8123000061570000FB612F05A5A5AB712E0A326417BC031>50 D<49B4FC010F13F0013F
13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D80F8014F0EA1FE0
16F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600157E5DEC03F0EC
1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016F8150316FC16FE
1501A216FFA3121E123F487E487EA216FEA24913036CC713FC127E0070EC07F8003015F0
6C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC011F13E0010190C7
FC28427CC031>I<1507A25D5DA25D5DA25DA25C5C811406140E140C1418143814301460
14E014C01301EB038014005B13065B131C13185B137013605B12015B48C7FC5A1206120E
120C5A123812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B61280A32A427DC131>I<00
0215C0D807C0130701FCEB7F8090B612005D5D15F05D158026063FFCC7FC90C9FCAE14FF
010713E090381F01F0903878007C01E07FD807807F90C71380ED0FC01202C8EA07E016F0
A3ED03F8A316FCA4121C123E127F487EA216F890C7FC4814074815F01260A26CEC0FE016
C06C141F001C15806CEC3F006C147E3903C001FC3901F807F039007FFFE06D1380D907FC
C7FC26427BC031>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3A5121E123F
EA7F80EAFFC0A4EA7F80EA3F00121E0A2B78AA1B>58 D<ED1FFC4AB512C0913907E003F0
021EC7123C0278140FD901E0EC03C0D90380EC00E00106C9123049824982498249824970
7E4848707EED0FF048C7D83FFE14600006DAF80F80913903E001C04849486C6C7F4AC712
3048496E7F023E80484991380DE00602FCEC07F05CD8600103037F5C1303A200C0F00180
5C1307A91303801260A2130180D830000307EB030080027C140F6C7F6E021B13066C6D14
33DA07C001E15B6C903A03E001C0F8913B00F80F007C386CDA3FFEEB3FF06C6CD90FF0EB
0FC092CBFC6C7E13607F7F7F6DEF0F806D6C167FD901E0923803FE00D90078ED1FF0021E
913801FF80DA07E0D97FF8C7FC0201B6C8FCDA001F13C041477BC54C>64
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA2ED39FF1530A203707FED607FA203C07F16
3FA2DA01807F161FA24A486C7EA302066D7EA2020E80020C1303A2021C8002181301A24A
8082A24A81177FA291B77EA3D90180C7EA1FE0A201038291C8120FA2498201061507A201
0E82010C1503A249821701A2498283137801F883487ED80FFF030313E0B500E0027FEBFF
C0A342467DC549>I<B8FC17E017FC00019039C00003FF6C4901007F017FED3FC0717E71
7E717E84170384170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091
B65A17FC0280C7B4FCEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F0
7FC0A2198018FF4D1300A24D5AEF0FFC4D5A01FFED7FE0486D903803FFC0B9C7FC17FC17
C03B447CC345>I<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E
02FFC7EA0703D901FCEC0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE
000117075B484816031207491601120F491600121FA2123F491760A2127FA219005B12FF
AC127F7FA21960123FA27F121FA26C6C17C0A212076DEE018012036C6C16036D17000000
1706137F6D6C5D6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC0011FC7FCDA1FFC
13FC0203B55A020014C0DB0FFEC8FC3B467BC446>I<B912F8A3000101C0C7127F6C49EC
07FC017F15011700187C183C181CA284A31806A41807040C7FA395C7FCA4161CA2163C16
7CED01FC91B5FCA3EC8001ED007C163C161CA2160CA319C0A3F0018093C7FCA41803A219
00A260A260A2181EA2183E187EEF01FE01FF1507486D147FB95AA33A447CC342>69
D<B912F0A3000101C0C7127F6C49EC0FF8017F15031701170018781838A2181CA3180CA4
180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA216
0CA793C8FCB0497E487FB612F8A337447CC340>I<B612F0A3C6EBF0006D5A6D5AB3B3B3
A4497E497EB612F0A31C447DC323>73 D<B56C020FB5FC80A2C66C6C020013F06EED1F80
016FEE0F00EB67F86E15061363EB61FE8013606E7E81143F6E7E81140F6E7E8114036E7E
81806F7E82153F6F7E82150F6F7E8215036F7E8281EE7F8017C0163FEE1FE017F0160FEE
07F817FC1603EE01FE17FF82EF7F8618C6173FEF1FE618F6170FEF07FEA217031701A217
00187E13F0183E486C161EEA0FFFB500F0150E1806A240447CC349>78
D<B712E016FF17C000019039C0003FF86C49EB03FC017FEC00FF717E717E717E717E717E
A284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC
913980007F80EE0FE0707EEE01F883707E177FA284173F84A784A61A6084171FA2050F14
C0496C6E7E486D0203EB0180B600C0903901FC0300716C5AF03FFCCBEA07F843457CC348
>82 D<49B41303010F13E0013FEBF8079038FE00FCD801F0EB1F0F4848EB079F4848EB01
DF48486DB4FC48C87E001E81123E007E81127C8212FC82A46C81A37E6C6C91C7FCA2EA3F
E07FEA1FFEEBFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F80010F80010180D9001F
7F02017F9138001FFF150303001380167FEE3FC0161FA2EE0FE0124012C01607A47EA217
C07E160F6C1680A26CED1F006C151E6C153ED8FBC05CD8F9F05CD8F07CEB03F03AE03FC0
0FE0010FB51280D8C00349C7FC9038003FF02B467BC436>I<EB07F8EB3FFF9038F80FC0
3901C003E048C66C7E00066D7E48147CD80F80137E486C133E6D133F8182A26C5A6C5AC8
FCA4EC0FFF49B5FC90380FFC1FEB3FC0EBFF00EA03FCEA07F0485A121F485A5B127F1760
48C7FCA4153FA26C146F7F003F9138C7C0C0391FC001873B0FE00307E1803A07F81E03FF
2701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C9038
3E000E49130349EB01804848EB00C0000314074848EB0FE04848131FA2121F5B003FEC0F
C0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA2000F15606C7E6C6C14C0
0001EC01806C7E017CEB07006D130E90381FC078903807FFF001001380242E7DAC2B>99
D<16FE157FA315011500167EB3EC7F80903803FFF090380FC07890383F000C017C130649
13034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8FCA25AA97EA37F12
3FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E13806D011C13FE90
380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090381F03F0
90387C00F849137C48487F48487F0007158049130F000F15C0121F4914E0003F1407A212
7F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F15606C7E000315C0
6C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE09038007F80242E7DAC
2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2EB1F0190383F00FC
A2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEBFF80A31F467EC51E
>I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F002607F
ECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F457DC436
>104 D<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B048
7EB512F8A315437EC21B>I<EA01FC12FFA3120312011200B3B3B3A5487EB512FCA31645
7EC41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B0E03F00380FC913B38
00F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01FFC7D83EC0130F043F
81495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A34A2C7DAB51>I<3901
FC01FE00FF903807FF8091381E07E091383801F0000301607F0001EBC0002600FD807F16
7C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB36>I<3901FC01FC00
FF90380FFF8091383E07E091387001F800039038C0007C2601FD807F6CB4C7123FEE1F80
49EC0FC04915E0EE07F0A217F8160317FCA3160117FEA917FC1603A317F8160717F0EE0F
E07FEE1FC06D1580EE3F00D9FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA
03FCC7FC91C9FCAE487EB512FCA32F3F7DAB36>112 D<3901F807E000FFEB1FF8EC383C
EC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A45BB3A77F487EB6FCA320
2C7DAB26>114 D<90383FE0303801FFF83907C01E70390F0007F0001C1301481300A248
1470A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13FE0003EBFF806C14
C0D8003F13E0010313F09038001FF81403EC00FC0040147C00C0147E153E7E151EA37E15
1C7E153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE00EB0FF01F2E7DAC
26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2D8007EC7FC
B3A4150CAA133E013F1318A27F90380F803001071360903803E0C0903801FF809038003F
001E3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000157EB3A916FEA301
7C1301A2017EEB037E013E147F011E010613806D011C13FE903807C078903803FFE09026
007F8013002F2D7DAB36>I<B500E1B539803FFF80A33E07FE000FF8000FFC00D803F8D9
03F0EB03F00001715A6115016C6C5F82A2017E4CC7FC4B7E167C6D027E13061507ED063E
D91F80013F5B4B7EA2D90FC06E5AED180FA2D907E06E5AED3007A2D903F06E5AED600318
E0D901F86E5AEDC00102FC14F10100EDF9809138FD800002FF14FB027F02FFC8FC92C77E
A26E147E023E143EA2021E143C021C141C020C1418412C7EAA46>119
D<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE006D147C6D14706D6C5B6D6C5BECE0
010107495AD903F090C7FCECF806903801FC0E01005BEC7E18EC7F30EC3F706E5A6E5A81
1407814A7EEC0DFC1418EC387E4A7E02607FECC01F01016D7ED903807F4A6C7E01061303
496D7E011C80013C1300017C147ED801FC14FFD80FFE4913C0B5D8800713FFA3302B7FAA
33>I<003FB612E0A29039E0000FC090C7EA1F80003C143F00381500157E003014FE0070
5C4A5A14030060495A5D4A5A141F5DC748C7FC5C14FE5C495A13035C495A130F49481360
5C49C7FC5B017E14C05B1201485A5B48481301120F491303485A003FEC0F8090C7121F00
7E14FFB7FCA2232B7DAA2B>122 D E /Fr 1 4 df<147014F8A81470007815F0007C1401
B4EC07F8D87F80EB0FF0D83FE0EB3FE0D80FF0EB7F80D803F8EBFE003900FE73F890383F
77E090380FFF80D903FEC7FCEB00F8EB03FE90380FFF8090383F77E09038FE73F83903F8
70FED80FF0EB7F80D83FE0EB3FE0D87F80EB0FF0D8FF00EB07F8007CEC01F000781400C7
140014F8A81470252B7AAD32>3 D E /Fs 17 122 df<B712F0A7240780A12B>45
D<170FA34D7EA24D7EA34D7EA34D7EA3933801DFF817CFA29338038FFC178704077F1703
A2040F7FEE0E01A2041E80EE1C00A24C80187FA24C80183FA24C6D7EA20301814C130FA2
0303814C1307A203078193C71203A2030E8184A24B8284A24B6F7EA20378820370153FA2
03F0824B151FA20201834B150FA24AB87EA34A8392C912034A83020E82A2021E84021C82
A2023C840238177FA24A841A3FA24A841A1FA24948717EA20103854A1707A201078591CB
1203A24985496C83133F496C8548486C4D7F000701F8050F13F0B60403B612F0A45C647D
E363>65 D<EC1FF0ECFFFE903903E03F8090390F0007E0011C6D7E49EB00FC498049147F
48486E7E485A707E48C87F160F01C081EA0FF06D14076D81A46C5AA26C5AC9FCA4160FED
3FFF0207B5FC91383FF807903801FF80903807FC00EB1FF0EB3FC001FFC7FC485A485A48
5A120F5B485A123F4917E0127FA3485AA3160FA3161B127F6D1433043114C06C6C913861
FC01001F15C16C6C903A0180FE03806C6CEB0700D801FE010E90387F8F002700FF8078EB
3FFE90261FFFF0EB0FFC01010180EB03F03B417ABF42>97 D<4AB4FC021F13E091387F00
F8D901F8131ED903E0EB07804948EB01C0D91F806D7E49C81270017E8113FE4981485A00
03824848153E17FF000F5D495C121FA2485A705AA2007F6F5A94C7FC5BA312FFAC127FA2
7FA2123FA36C7EEF0380A26C7E0007EE0700A26C6C150E12016D5D6C7E017E5D6D5D6D6C
5C6D6C495AD903E0EB0780D901F8011EC7FCD9007F13FC91381FFFF0020190C8FC31417B
BF3A>99 D<1878EFFFF8161FA4EE003F170FA21707B3AAEDFF80020F13F091383F807C91
38FC000ED903F0EB03874948EB01C7D90F80EB00E749C81277013E153F017E151F5B4848
150F120348481507A2485AA2121FA2485AA3127FA25BA212FFAC127FA37F123FA3121F7F
A2120F6C7E170F12036C6C151F7F0000163F017E15776DEDE7FC6D6CEB01C76D6C903803
87FFD903E0D90F0713FED901F8133CD9007F13F891381FFFE002010100EBFC003F657BE3
49>I<EC03FE91381FFFE091387E03F8903901F0007ED907E07FD90F80EB0F8049C76C7E
013E81017E6E7E496E7E4848810003150049811207177F485A121F188049153F123FA300
7F17C05BA312FFA290B8FCA20180CAFCA9127FA27FA2123FA36C7EEF01C0120FA26C6CED
038012036DED070012016C6C150E017E150C013E151C6D5D6D6C5C6D6C495AD903F0EB03
80D900FC010FC7FC023F137C91380FFFF00201138032417CBF3A>I<ED1FE0ED7FFC9138
01F81E913807E00791390FC00F8091391F801FC091393F003FE0027E137F14FE495AA249
48EB3FC0EE1F800107EC0F0093C7FC5C130FB3A5B712F0A426000FF0C8FCB3B3B0497EEB
3FFE003FB6FCA42B657EE428>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEEFF80
030713F892381F01FE923838007F0360EB1F804B80DAC1806D7E02C3C7FC02C66E7E14CC
8414D8170302F081A35CA35CB3B3A2496C4A7E496C4A7EB6D8F00FB6FCA440647CE349>
104 D<133C13FF487FA2487FA46C5BA26C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA4
1201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>I<EB03C0EA07FFB5FCA412
01EA007FA2133FB3AB0403B512F8A40400148094387FF800EF3FE0188095C7FC177C1778
5F4C5A4C5A4C5A4CC8FC161E16385E5E4B5A4B5A4BC9FCED1F804B7E157F4B7E9138C1EF
F0ECC3CF9138C787F89138CF03FC14DE9138F801FE4A6C7E5C4A6D7E707EA2707E707EA2
707E707EA2707E707EA2717E717EA2717E717EA284717E84496C4A7E496C4A13E0B600F0
90B6FCA440647CE346>107 D<EDFF80020F13F891383F80FE9139FC001F80D903F0EB07
E0D907C0EB01F049486D7E013FC8127E017E81017C8101FC8248486F7E00038349150700
078348486F7EA2001F83491501A2003F83A348486F7EA400FF1880AC007F1800A36D5D00
3F5FA3001F5F6D1503A2000F5F6C6C4B5AA26C6C4B5A00015F6D151F6C6C4B5A017E93C7
FC6D157E6D6C5C6D6C495AD903F0EB07E0D900FCEB1F8091267F80FFC8FC91380FFFF802
0113C039417CBF42>111 D<9039078003F8D80FFFEB0FFFB590383C0780037013C09238
C01FE0DA818013F00001903883003F38007F86A2EB3F8CEE1FE00298EB0FC0EE030002B0
90C7FCA414E0A55CB3B1497EEBFFF8B612FCA42C3F7CBE33>114
D<9139FFE00180010FEBFC0390387F001F01F0EB0387D803C0EB01CF4848EB007F48C812
3F121E001C151F003C150F5AA2160712F8A21603A27EA27E7E6C7E01E091C7FCEA3FF813
FE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010780D9007F7F02037FDA
001F1380030313C09238007FE0163F0060ED0FF000E01507A2EE03F86C1501A316007EA3
6C16F0A27E16016C16E017C06D1403D8FDC0158000FCED0700D8F870140E6D143CD8F01E
14F83AE007C00FE00101B5128027C0003FF8C7FC2D417DBF34>I<1438A71478A514F8A3
1301A21303A21307A2130F131F133F137F13FF000390B6FC120FB8FCA2260007F8C8FCB3
AE17E0AE010315C06E1301A21301EE03806D7E1700027F5B6E130E91381FC01C913807F0
78913801FFF09138003FC02B597FD733>I<B66C49B512E0A4000101F8C8387FFE002600
7FE0ED1FF8013F17E0725A61011F94C7FC80010F160EA26E151E0107161C8001035EA26E
157801011670806D5EA26F1301027F5D81023F4A5AA26F1307021F92C8FCA26E6C130EA2
6F131E0207141CA26F133C020314388102015CA26F13F06E5C168092387F81C0A216C303
3F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5AA36F5A433F7FBD46>118
D<B6D8801FB500E090B512F8A4000301F0C7D87FFCC7001F1380C601C0DA3FF0913807FE
00017F031F6F5A71486E5A64013F705D170780011F4B6C5DA26E1803010F4B6C5D171D6E
18070107DB3DFE92C7FC17386E600103DB78FF140EEF707F6E181E010103F06D131CEFE0
3F6E183C6D02016E1338EFC01F03801778027F01036E1370EF800F03C017F0023F01076E
5BEF000703E01601021F4902F85B040E130303F01603020F011E02FC5B041C130103F816
070207013C02FE90C8FC0438130003FC5E02030178ECFF0E0470147F03FE161E020101F0
159C4C143F03FF16BC6E17F84C141FA2037F5E4C140FA2033F5E93C81207A26F5E031E15
03030E5E5D3F7FBD60>I<B600C049B512E0A4000101F8C8387FFE0026007FE0ED1FF801
3F17E0725A011F5F96C7FC80010F160EA26D6C5DA26E153C01031638A26D6C5DA26E15F0
6D5EA26E6C495AA26F1303023F5DA26E6C49C8FCA26F5B020F140EA26E6C5BA26F133C02
031438A26E6C5BA26F13F06E5CA292387F81C0A216C3033F5BA216E7031F90C9FC16FF6F
5AA36F5AA26F5AA36F5AA26F5AA215015E15035EA2150793CAFC5D150EA2151E151C153C
1538121F486C5B487E5DA24A5A4A5AEA3F80263E0007CBFC001C130E000F133C3807C0F8
3801FFE038007F80435B7FBD46>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 0 1
0 0 bop 654 432 a Fs(A)44 b(case)f(for)g(t)l(w)l(o-w)l(a)l(y)g(sk)l(ew)
l(ed-asso)t(ciativ)l(e)h(cac)l(hes)3245 380 y Fr(\003)1661
672 y Fq(Andr)m(\023)-46 b(e)34 b(Seznec)1186 789 y(IRISA-INRIA,)f
(Campus)h(de)f(Beaulieu)1272 905 y(35042)f(Rennes)i(Cedex,)g(FRANCE)
1498 1021 y(e-mail:seznec@irisa.fr)1424 1137 y(h)m
(ttp://www.irisa.fr/caps)0 1704 y Fp(Cop)m(yrigh)m(t)i(Notice)0
1857 y Fo(This)f(pap)r(er)f(app)r(ears)g(in)h(Pro)r(ceedings)e(of)h
(the)h(20th)g(In)n(ternational)e(Symp)r(osium)i(on)g(Computer)f(Arc)n
(hitecture,)i(San)0 1956 y(Diego,)27 b(Ma)n(y)g(1993)208
2139 y(P)n(ersonal)32 b(use)i(of)g(this)h(material)f(is)g(p)r
(ermitted.)58 b(Ho)n(w)n(ev)n(er,)34 b(p)r(ermission)g(to)g(reprin)n
(t/republish)f(this)i(ma-)208 2239 y(terial)e(for)h(adv)n(ertising)f
(or)g(promotional)g(purp)r(oses)h(or)f(for)h(crating)f(new)h(collectiv)
n(e)g(w)n(orks)f(for)g(resale)g(or)208 2338 y(redistribution)g(to)h
(serv)n(ers)e(or)h(lists,)j(or)d(to)h(reuse)f(an)n(y)h(cop)n(yrigh)n
(ted)e(comp)r(onen)n(t)i(of)g(this)g(w)n(ork)f(in)h(other)208
2438 y(w)n(orks)25 b(m)n(ust)j(b)r(e)g(obtained)g(from)f(the)h(IEEE.)p
0 5263 1560 4 v 91 5316 a Fn(\003)127 5340 y Fm(This)23
b(w)n(ork)h(w)n(as)f(partially)h(supp)r(orted)g(b)n(y)g(CNRS)g(\(PR)n
(C-ANM\))1929 5589 y Fo(0)p eop
%%Page: 1 2
1 1 bop 3858 -208 a Fo(1)1781 83 y Fl(Abstract)323 213
y Fk(W)-6 b(e)31 b(in)n(tro)r(duce)g(a)h(new)g(organization)i(for)e(m)n
(ulti-bank)d(cac)n(hes:)47 b(the)31 b(sk)n(ew)n(ed-asso)r(ciativ)n(e)j
(cac)n(he.)52 b(A)31 b(t)n(w)n(o-w)n(a)n(y)208 304 y(sk)n(ew)n(ed-asso)
r(ciativ)n(e)40 b(cac)n(he)e(has)h(the)f(same)h(hardw)n(are)g
(complexit)n(y)e(as)i(a)g(t)n(w)n(o-w)n(a)n(y)f(set-asso)r(ciativ)n(e)j
(cac)n(he,)h(y)n(et)208 396 y(sim)n(ulations)23 b(sho)n(w)g(that)g(it)g
(t)n(ypically)g(exhibits)f(the)h(same)f(hit)h(ratio)h(as)f(a)g(four-w)n
(a)n(y)g(set)h(asso)r(ciativ)n(e)h(cac)n(he)e(with)g(the)208
487 y(same)i(size.)35 b(Then)26 b(sk)n(ew)n(ed-asso)r(ciativ)n(e)h(cac)
n(hes)f(m)n(ust)f(b)r(e)g(preferred)h(to)g(set-asso)r(ciativ)n(e)i(cac)
n(hes.)323 578 y(Un)n(til)c(the)g(three)h(last)g(y)n(ears)g(external)g
(cac)n(hes)g(w)n(ere)h(used)e(and)g(their)h(size)h(could)f(b)r(e)f
(relativ)n(ely)h(large.)36 b(Previous)208 670 y(studies)26
b(ha)n(v)n(e)f(sho)n(w)n(ed)h(that,)g(for)h(cac)n(he)f(sizes)h(larger)g
(than)f(64)g(Kb)n(ytes,)f(direct-mapp)r(ed)g(cac)n(hes)h(exhibit)f(hit)
h(ratios)208 761 y(nearly)31 b(as)i(go)r(o)r(d)f(as)h(set-asso)r
(ciativ)n(e)g(cac)n(hes)g(at)f(a)g(lo)n(w)n(er)h(hardw)n(are)f(cost.)53
b(Moreo)n(v)n(er,)34 b(the)e(cac)n(he)g(hit)f(time)g(on)h(a)208
852 y(direct-mapp)r(ed)c(cac)n(he)i(ma)n(y)f(b)r(e)g(quite)h(smaller)g
(than)g(the)f(cac)n(he)h(hit)g(time)f(on)h(a)g(set-asso)r(ciativ)n(e)i
(cac)n(he,)g(b)r(ecause)208 944 y(optimistic)25 b(use)h(of)h(data)e
(\015o)n(wing)i(out)e(from)h(the)f(cac)n(he)h(is)g(quite)f(natural.)323
1035 y(But)32 b(no)n(w,)j(micropro)r(cessors)f(are)f(designed)g(with)g
(small)g(on-c)n(hip)e(cac)n(hes.)56 b(P)n(erformance)33
b(of)g(lo)n(w-end)g(micro-)208 1126 y(pro)r(cessor)27
b(systems)f(highly)f(dep)r(ends)h(on)g(cac)n(he)g(b)r(eha)n(vior.)36
b(Sim)n(ulations)26 b(sho)n(w)h(that)f(using)g(some)g(asso)r(ciativit)n
(y)h(in)208 1218 y(on-c)n(hip)d(cac)n(hes)j(allo)n(ws)g(to)f(b)r(o)r
(ost)h(the)e(p)r(erformance)h(of)g(these)g(lo)n(w-end)g(systems.)323
1309 y(When)k(considering)h(optimistic)g(use)f(of)h(data)g(\(or)g
(instruction\))f(\015o)n(wing)i(out)e(from)g(the)g(cac)n(he,)j(the)d
(cac)n(he)h(hit)208 1400 y(time)e(of)h(a)g(t)n(w)n(o-w)n(a)n(y)g(sk)n
(ew)n(ed-asso)r(ciativ)n(e)i(\(or)e(set-asso)r(ciativ)n(e\))h(cac)n(he)
f(is)h(v)n(ery)d(close)j(to)f(the)g(cac)n(he)g(hit)f(time)g(of)i(a)208
1492 y(direct-mapp)r(ed)23 b(cac)n(he.)34 b(Therefore)27
b(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed)f(asso)r(ciativ)n(e)j(cac)n(hes)f
(represen)n(t)e(the)h(b)r(est)g(tradeo\013)g(for)h(to)r(da)n(y)208
1583 y(micropro)r(cessors)h(with)f(on-c)n(hip)f(cac)n(hes)h(whose)h
(sizes)f(are)h(in)e(the)g(range)i(of)f(4-8K)g(b)n(ytes.)323
3566 y Fl(Keyw)n(ords:)33 b Fk(micropro)r(cessors,)28
b(cac)n(he,)e(set-asso)r(ciativ)n(e)h(cac)n(he,)g(sk)n(ew)n(ed-asso)r
(ciativ)n(e)g(cac)n(he.)p eop
%%Page: 2 3
2 2 bop 0 -208 a Fj(1)83 b(INTR)n(ODUCTION)3055 b Fo(2)0
83 y Fi(1)135 b(In)l(tro)t(duction)0 265 y Fo(F)-7 b(or)37
b(a)g(few)h(y)n(ears,)h(the)f(direct-mapp)r(ed)g(cac)n(he)e
(organization)g(has)h(b)r(een)h(considered)f(as)g(the)h(b)r(est)g
(organization)e(for)0 364 y(micropro)r(cessor)22 b(cac)n(hes)h([7)o(,)i
(14)o(].)36 b(But)25 b(tec)n(hnology)e(has)h(c)n(hanged,)g(large)f
(external)h(cac)n(hes)f(whic)n(h)i Fh(wer)l(e)f Fo(asso)r(ciated)g
(with)0 464 y(\014rst)j(generation)f(RISC)i(micropro)r(cessors)d(are)h
(no)n(w)h(replaced)g(b)n(y)g(small)h(on-c)n(hip)e(cac)n(hes.)125
564 y(In)31 b(section)h(2.1,)f(w)n(e)h(in)n(tro)r(duce)f(a)g(new)h
(organization)d(for)i(m)n(ulti-bank)g(cac)n(he:)44 b(the)32
b(sk)n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(he.)48 b(A)0
663 y(t)n(w)n(o-w)n(a)n(y)35 b(sk)n(ew)n(ed-asso)r(ciativ)n(e)f(cac)n
(he)i(has)h(the)g(same)g(hardw)n(are)e(complexit)n(y)i(as)f(a)h(t)n(w)n
(o-w)n(a)n(y)e(set-asso)r(ciativ)n(e)g(cac)n(he.)0 763
y(Sim)n(ulations)25 b(presen)n(ted)f(in)h(section)g(3)f(sho)n(w)h(that)
g(a)f(t)n(w)n(o-w)n(a)n(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)f(cac)n(he)i
(t)n(ypically)g(exhibits)h(the)h(same)0 863 y(hit)i(ratio)e(as)h(a)g
(four-w)n(a)n(y)e(set)j(asso)r(ciativ)n(e)d(cac)n(he)i(with)h(the)g
(same)e(size:)37 b(t)n(w)n(o-w)n(a)n(y)25 b(sk)n(ew)n(ed-asso)r(ciativ)
n(e)f(cac)n(hes)i(m)n(ust)i(b)r(e)0 962 y(preferred)f(to)g(t)n(w)n(o-w)
n(a)n(y)e(or)i(four-w)n(a)n(y)e(set-asso)r(ciativ)n(e)h(cac)n(hes.)125
1062 y(Then)36 b(w)n(e)f(compare)g(using)g(on-c)n(hip)g(t)n(w)n(o-w)n
(a)n(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(hes)j(in)h(place)f(of)h
(on-c)n(hip)f(direct-mapp)r(ed)0 1162 y(cac)n(hes.)54
b(In)35 b(lo)n(w-end)d(micropro)r(cessor)f(systems,)k(the)g(miss)e(p)r
(enalt)n(y)h(is)g(high;)j(increasing)32 b(clo)r(c)n(k)h(frequency)h(do)
r(es)f(not)0 1261 y(lead)40 b(to)g(a)g(signi\014can)n(t)g(p)r
(erformance)g(impro)n(v)n(emen)n(t.)74 b(Using)40 b(a)g(t)n(w)n(o-w)n
(a)n(y)e(sk)n(ew)n(ed)h(asso)r(ciativ)n(e)g(cac)n(he)h(rather)f(than)0
1361 y(a)g(direct-mapp)r(ed)g(cac)n(he)f(impro)n(v)n(es)g(the)h(p)r
(erformance)f(of)i(the)f(system)g(ev)n(en)g(when)g(it)h(sligh)n(tly)f
(reduces)f(the)i(clo)r(c)n(k)0 1460 y(frequency)-7 b(.)125
1560 y(On)32 b(high-end)h(micropro)r(cessor)d(systems,)j(a)g(fast)g
(second-lev)n(el)e(cac)n(he)h(is)h(used;)i(the)f(p)r(erformance)e(dep)r
(ends)h(more)0 1660 y(directly)e(on)f(the)i(clo)r(c)n(k)e(frequency)-7
b(.)46 b(In)31 b(order)f(to)h(reduce)f(cycle)h(time,)h(optimistic)f
(use)g(of)g(data)f(\015o)n(wing)g(out)h(from)g(the)0
1759 y(cac)n(hes)c(ma)n(y)g(b)r(e)i(used.)38 b(Using)27
b(this)i(tec)n(hnic)f(on)f(micropro)r(cessors)e(with)k(on-c)n(hip)e(t)n
(w)n(o-w)n(a)n(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(hes)0
1859 y(will)k(lead)f(to)h(b)r(etter)g(p)r(erformance)e(than)i(using)f
(on-c)n(hip)g(direct-mapp)r(ed)g(cac)n(hes.)125 1959
y(Finally)-7 b(,)25 b(w)n(e)g(sho)n(w)g(that)g(sk)n(ew)n(ed-asso)r
(ciativ)n(e)d(cac)n(hes)i(ma)n(y)h(b)r(e)g(used)g(for)g(implemen)n
(ting)h(ph)n(ysically)e(indexed)h(cac)n(hes)0 2058 y(as)i(w)n(ell)g(as)
g(virtually)g(indexed)h(cac)n(hes.)0 2333 y Fi(2)135
b(Sk)l(ew)l(ed-asso)t(ciativ)l(e)47 b(cac)l(hes)0 2515
y Fo(In)28 b(this)g(section,)f(w)n(e)g(presen)n(t)g(a)g(new)h
(organization)d(for)i(a)h(m)n(ulti-bank)f(cac)n(he:)36
b(the)28 b Fh(skewe)l(d-asso)l(ciative)k(c)l(ache)p Fo(.)0
2747 y Fp(2.1)112 b(Bac)m(kground)0 2900 y Fo(High-end)30
b(micropro)r(cessors)d(based)j(systems)g(are)g(built)h(with)g(a)f
(secondary)e(external)i(cac)n(he:)41 b(a)30 b(miss)g(on)g(the)h
(primary)0 3000 y(cac)n(he)g(will)g(b)r(e)h(serv)n(ed)f(in)h(a)f(few)h
(cycles)f(when)g(the)h(line)g(is)f(presen)n(t)g(in)h(the)g(secondary)e
(cac)n(he.)48 b(As)31 b(the)h(cost)f(of)h(a)f(fast)0
3099 y(secondary)26 b(cac)n(he)h(is)g(prohibitiv)n(e,)h(there)f(will)h
(not)g(b)r(e)g(secondary)e(cac)n(hes)g(in)i(lo)n(w-end)f(systems;)h
(the)g(miss)f(p)r(enalt)n(y)h(will)0 3199 y(b)r(e)g(v)n(ery)e(high)i
(\(20)f(or)g(ev)n(en)g(50)f(CPU)i(cycles\))f(\(see)h(Figure)f(1\).)1005
3319 y
 14917438 12083118 7367557 18221547 33417134 39469056 startTexFig
 1005 3319 a
%%BeginDocument: structcache.ps

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Times-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.64 0 0 0.64 14.247 197.28 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
120 616 439 766 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
140 636 200 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
140 756 190 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 99 101 ] concat
%I
140 756 190 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 308 91 ] concat
%I
140 636 200 756 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 5 0 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 194 91 ] concat
%I
140 636 200 756 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 344 802 ] concat
%I
[
(CPU)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 0 1 -1 0 245 761 ] concat
%I
[
(instruction)
(   cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 0 1 -1 0 467.5 772.5 ] concat
%I
[
(  data )
( cache )
] Text
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
140 626 419 626 Line
End

Begin %I Line
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
280 626 280 557 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
389 636 389 626 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
165 636 165 626 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
200 716 250 716 Line
End

Begin %I Line
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
310 716 359 716 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 392 444 557 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 304 583 ] concat
%I
[
( second  level)
(    cache)
] Text
End

Begin %I Line
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
275 392 275 322 Line
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 148 444 317 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 329 349 ] concat
%I
[
(  main )
(memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 394 692 ] concat
%I
[
(3-5 latency cycles)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 394 458 ] concat
%I
[
(20-50 latency cycles)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
120 616 439 766 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
140 636 200 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
140 756 190 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 345.607 262.92 ] concat
%I
140 756 190 756 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 479.367 256.52 ] concat
%I
140 636 200 756 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.64 0 0 0.64 285.447 198.28 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 194 91 ] concat
%I
140 636 200 756 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 344 802 ] concat
%I
[
(CPU)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 0 0.64 -0.64 0 439.047 685.32 ] concat
%I
[
(instruction)
(   cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 0 0.64 -0.64 0 581.447 692.68 ] concat
%I
[
(  data )
( cache )
] Text
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
140 626 419 626 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
389 636 389 626 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
165 636 165 626 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
200 716 250 716 Line
End

Begin %I Line
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
310 716 359 716 Line
End

End %I eop

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.64 0 0 0.64 339.207 256.52 ] concat
%I
115 148 444 317 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 0.64 0 0 0.64 492.807 421.64 ] concat
%I
[
(  main )
(memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 0.64 0 0 0.64 521.407 572.4 ] concat
%I
[
(20-50 latency cycles)
] Text
End

Begin %I Line
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
424 560 424 367 Line
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 759 5033 a Fo(Figure)g(1:)36 b(Basic)27 b(implemen)n(tations)g(of)h
(micropro)r(cessor)d(based)i(systems)125 5227 y(Let)g(us)h(recall)e
(some)h(tec)n(hnological)f(parameters:)p eop
%%Page: 3 4
3 3 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(3)p 251 86 3399 4 v 249 186 4 100
v 301 156 a(micropro)r(cessor)p 888 186 V 96 w(F)-7 b(requency)p
1358 186 V 99 w(Instruction)p 1857 186 V 236 w(Miss)28
b(p)r(enalt)n(y)p 2692 186 V 432 w(Miss)g(p)r(enalt)n(y)p
3648 186 V 249 286 V 888 286 V 1358 286 V 1431 256 a(p)r(er)g(cycles)p
1857 286 V 120 w(with)h(2nd)e(lev)n(el)g(cac)n(he)p 2692
286 V 99 w(without)h(2nd)f(lev)n(el)g(cac)n(he)p 3648
286 V 251 289 3399 4 v 251 309 V 249 408 4 100 v 363
379 a(DEC)g(21064)p 888 408 V 189 w(200)f(Mhz)p 1358
408 V 308 w(2)p 1857 408 V 605 w(24)p 2692 408 V 790
w(100)p 3648 408 V 251 412 3399 4 v 249 511 4 100 v 338
482 a(MIPS)i(R4000)p 888 511 V 165 w(100)e(Mhz)p 1358
511 V 308 w(1)p 1857 511 V 626 w(6)p 2692 511 V 832 w(25)p
3648 511 V 251 515 3399 4 v 249 614 4 100 v 305 584 a(TI)h(Sup)r
(erSparc)p 888 614 V 153 w(50)g(Mhz)p 1358 614 V 329
w(3)p 1857 614 V 626 w(9)p 2692 614 V 832 w(37)p 3648
614 V 251 618 3399 4 v 249 717 4 100 v 402 687 a(P)n(o)n(w)n(erPC)p
888 717 V 247 w(40)g(Mhz)p 1358 717 V 329 w(2)p 1857
717 V 626 w(5)p 2692 717 V 832 w(20)p 3648 717 V 251
721 3399 4 v 928 953 a(Figure)g(2:)36 b(Miss)28 b(p)r(enalties)g(con)n
(v)n(erted)e(in)h(Instruction)h(Dela)n(ys)101 1218 y(1.)42
b(Access)27 b(time)h(to)f(the)h(\014rst)g(w)n(ord)e(of)i(a)f(line)h(in)
f(main)h(memory)f(is)g(generally)f(higher)h(than)h(250)e(ns.)101
1384 y(2.)42 b(Access)33 b(time)i(to)f(the)h(\014rst)f(w)n(ord)f(of)h
(a)g(line)h(in)f(the)h(second)f(lev)n(el)f(cac)n(he)h(is)g(around)f(60)
h(ns)g(\(assuming)f(12-15ns)208 1484 y(static)27 b(memory)g(c)n
(hips\):)37 b(a)27 b(throughput)g(of)h(one)f(w)n(ord)g(p)r(er)g(20)g
(ns)g(ma)n(y)g(then)h(b)r(e)g(obtained.)3171 1453 y Fg(1)125
1650 y Fo(Figure)k(2)h(sho)n(ws)g(the)h(miss)f(p)r(enalties)g(con)n(v)n
(erted)f(in)i(Instruction)f(Dela)n(ys)g(for)g(some)g(of)g(the)h(recen)n
(tly)f(announced)0 1749 y(micropro)r(cessors)24 b(when)k(assuming)f
(these)g(access)g(dela)n(ys.)125 1849 y(Reducing)35 b(miss)h(ratio)f
(on)h(on-c)n(hip)f(cac)n(hes)g(has)g(b)r(ecome)h(a)g(k)n(ey)f(issue)g
(for)h(p)r(erformance)f(on)g(all)h(micropro)r(cessor)0
1948 y(systems.)0 2181 y Fp(2.2)112 b(Sk)m(ewing)37 b(on)h(cac)m(hes:)
51 b(principle)0 2334 y Fo(A)37 b(set-asso)r(ciativ)n(e)d(cac)n(he)h
(is)h(illustrated)g(b)n(y)g(Figure)g(3:)53 b(a)36 b(X)h(w)n(a)n(y)e
(set-asso)r(ciativ)n(e)f(cac)n(he)h(is)h(built)h(with)g(X)f(distinct)0
2434 y(banks.)46 b(A)31 b(line)g(of)f(data)g(with)i(base)e(address)f
Ff(D)k Fo(ma)n(y)d(b)r(e)h(ph)n(ysically)f(mapp)r(ed)h(on)f(ph)n
(ysical)g(line)h Ff(f)9 b Fo(\()p Ff(D)r Fo(\))31 b(in)g(an)n(y)f(of)h
(the)0 2533 y(distinct)26 b(banks.)35 b(This)25 b(vision)g(of)g(a)f
(set-asso)r(ciativ)n(e)f(cac)n(he)h(\014ts)i(with)f(its)g(ph)n(ysical)g
(implemen)n(tation:)35 b(X)26 b(banks)e(of)h(static)0
2633 y(memory)i(RAMs.)125 2733 y(W)-7 b(e)28 b(prop)r(ose)e(a)h(v)n
(ery)g(sligh)n(t)g(mo)r(di\014cation)g(in)h(this)g(design)f(as)g
(illustrated)g(in)h(Figure)f(4:)208 2899 y(Di\013eren)n(t)32
b(mapping)f(functions)h(are)f(used)h(for)f(the)h(distinct)h(cac)n(he)d
(banks)i(i.e.,)h(a)e(line)h(of)g(data)f(with)h(base)208
2998 y(address)27 b Ff(D)k Fo(ma)n(y)d(b)r(e)i(mapp)r(ed)f(on)f(ph)n
(ysical)g(line)h Ff(f)1853 3010 y Fg(0)1890 2998 y Fo(\()p
Ff(D)r Fo(\))h(in)f(cac)n(he)f(bank)g(0)h(or)f(in)h Ff(f)2897
3010 y Fg(1)2934 2998 y Fo(\()p Ff(D)r Fo(\))g(in)g(cac)n(he)f(bank)h
(1,)208 3098 y(etc.)125 3264 y(W)-7 b(e)23 b(call)g(a)f(m)n(ulti-bank)h
(cac)n(he)f(with)h(suc)n(h)g(a)g(mapping)f(of)h(the)h(lines)f(on)n(to)f
(the)h(distinct)h(banks:)34 b(a)22 b Fh(skewe)l(d-asso)l(ciative)0
3364 y(c)l(ache)p Fo(.)125 3699 y(This)i(hardw)n(are)f(mo)r
(di\014cation)h(incurs)h(a)f(v)n(ery)g(small)g(hardw)n(are)f(o)n(v)n
(er)g(cost)h(when)h(designing)f(a)g(new)h(micropro)r(cessor)0
3799 y(with)k(on-c)n(hip)f(cac)n(hes)g(since)g(the)h(mapping)f
(functions)h(can)g(b)r(e)g(c)n(hosen)e(so)h(that)h(the)g(implemen)n
(tation)g(uses)f(a)g(v)n(ery)g(few)0 3899 y(gates.)35
b(But)26 b(w)n(e)f(shall)g(see)g(that)g(this)h(ma)n(y)e(help)i(to)f
(increase)f(the)i(hit)g(ratio)e(of)h(cac)n(hes)f(and)i(then)f(to)g
(increase)g(the)g(o)n(v)n(erall)0 3998 y(p)r(erformance)i(of)g(a)g
(micropro)r(cessor)e(using)i(a)g(m)n(ulti-bank)h(cac)n(he)e(structure.)
0 4214 y Fe(Related)31 b(w)m(orks)0 4367 y Fo(In)i(1977,)g(Smith)h([15)
o(])f(considered)f(set-asso)r(ciativ)n(e)f(cac)n(hes)h(and)h(suggested)
f(selecting)g(the)i(set)f(b)n(y)f(hashing)h(the)g(main)0
4467 y(memory)27 b(address;)f(this)i(approac)n(h)e(corresp)r(onds)f(to)
j(\014gure)f(3:)36 b(a)27 b Fh(single)i Fo(hashing)e(function)h(is)f
(used.)125 4567 y(More)f(recen)n(tly)h(Agarw)n(al)f([2)o(])i(\(Chapter)
g(6.7.2\))e(studied)i(hash-rehash)e(cac)n(hes.)208 4733
y(As)h(in)h(a)f(con)n(v)n(en)n(tional)f(cac)n(he,)g(the)i(address)f
(indexes)g(in)n(to)g(a)g(cac)n(he)g(set,)h(and)f(the)h(w)n(ord)e(of)i
(data)f(is)g(sen)n(t)h(to)208 4832 y(the)h(pro)r(cessor)d(if)k(it)f(is)
g(v)-5 b(alid)29 b(in)g(the)g(set.)40 b(This)29 b(case)f(is)h(called)f
(a)h(\014rst)f(time)i(hit.)41 b(On)28 b(a)h(miss,)g(the)g(address)208
4932 y(again)f(indexes)i(in)n(to)g(the)h(cac)n(he)e(but)h(using)g(a)g
(di\013eren)n(t)g(hashing)f(function.)45 b(If)31 b(the)f(second)g
(access)f(is)h(also)208 5032 y(unsuccessful,)d(the)h(data)f(m)n(ust)h
(b)r(e)g(fetc)n(hed)g(from)f(memory)-7 b(.)p 0 5101 1560
4 v 92 5154 a Fd(1)127 5178 y Fm(This)23 b(corresp)r(onds)h(to)g(TI)g
(Sup)r(erSparc)h(second-lev)n(el)f(cac)n(he)i(sp)r(eci\014cation[19)q
(])p eop
%%Page: 4 5
4 4 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(4)769 991 y
 18646798 11933942 5591449 25062850 34798551 43810652 startTexFig
 769 991 a
%%BeginDocument: 2assoc.ps

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Courier reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -303 160 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -219 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -239 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -259 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -279 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -299 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -319 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -339 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -359 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 40 -299 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 279 533 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 364 533 ] concat
%I
[
(adr)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -55 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -75 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -95 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -115 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -135 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -155 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -175 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -195 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -384 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 204 508 ] concat
%I
[
(A two-way associative cache~:  )
( two distinct cache banks )
] Text
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
182 636 415 636 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
287 472 287 607 Line
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
259 605 316 626 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-75-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 372 711 ] concat
%I
[
(f)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
286 637 286 626 Line
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1256 2685 a Fo(Figure)27 b(3:)36 b(A)28 b(t)n(w)n(o-w)n(a)n(y)d(asso)r
(ciativ)n(e)h(cac)n(he)769 2710 y
 18646798 11933942 5591449 25062850 34798551 43810652 startTexFig
 769 2710 a
%%BeginDocument: skewedcache.ps

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -303 160 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -219 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -239 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -259 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -279 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -299 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -319 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -339 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -359 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 40 -299 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 279 533 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 364 533 ] concat
%I
[
(adr)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -55 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -75 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -95 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -115 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -135 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -155 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -175 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -195 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
290 472 290 636 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I
255 636 324 636 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
240 616 255 656 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 173 91 ] concat
%I
240 616 255 656 Rect
End

Begin %I MLine
%I b 65535
1 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I 4
180 681
210 681
210 636
240 636
4 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I 4
339 636
374 636
374 586
409 586
4 MLine
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -384 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 334 737 ] concat
%I
[
(f0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 418 737 ] concat
%I
[
(f1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 204 508 ] concat
%I
[
(A line of  data is mapped at distinct addresses )
(in the distinct banks of the cache)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1116 4404 a Fo(Figure)h(4:)37 b(A)27 b(t)n(w)n(o-w)n(a)n(y)f(sk)n(ew)n
(ed-asso)r(ciativ)n(e)e(cac)n(he)p eop
%%Page: 5 6
5 5 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(5)125 83 y(Hash-rehash)27 b(cac)n(hes)h(presen)n
(t)g(b)r(etter)h(o)n(v)n(erall)e(hit)j(ratios)e(than)h(direct-mapp)r
(ed)f(cac)n(hes.)40 b(But)30 b(Agarw)n(al)d(remark)n(ed)0
183 y(that)32 b(for)g(a)f(64)h(Kb)n(ytes)f(cac)n(he,)h(hash-rehash)e
(cac)n(hes)h(induce)i(longer)d(execution)i(time)h(than)f(t)n(w)n(o-w)n
(a)n(y)d(set-asso)r(ciativ)n(e)0 282 y(cac)n(hes.)125
382 y(In)38 b(hash-rehash)f(cac)n(hes,)j(the)f(primary)f(cac)n(he)f
(itself)j(is)e(used)h(as)f(a)g(secondary)f(cac)n(he)g(after)i(a)f
(\014rst)g(time)h(miss.)0 482 y(Ho)n(w)n(ev)n(er)23 b(in)j(sk)n(ew)n
(ed-asso)r(ciativ)n(e)21 b(cac)n(hes,)k(di\013eren)n(t)g(hashing)f
(functions)i(are)e(used)h Fh(at)i(the)h(same)g(time)d
Fo(for)g(indexing)g(the)0 581 y(distinct)j(cac)n(he)f(banks.)0
814 y Fp(2.3)112 b(Cho)s(osing)38 b(the)f(sk)m(ewing)g(functions)0
967 y Fo(In)30 b(this)h(section,)f(w)n(e)g(giv)n(e)f(some)g(insigh)n(t)
h(on)g(the)g(prop)r(erties)f(that)h(migh)n(t)g(exhibit)h(functions)f(c)
n(hosen)f(for)h(sk)n(ewing)f(the)0 1066 y(lines)f(in)f(the)h(distinct)h
(cac)n(he)d(banks)h(in)h(order)e(to)i(obtain)f(a)g(go)r(o)r(d)g(hit)i
(ratio.)0 1282 y Fe(2.3.1)94 b(Equitabilit)m(y)0 1435
y Fo(First)23 b(of)f(all)h(lik)n(e)f(in)h(classical)f(cac)n(hes,)g(for)
h(eac)n(h)f(line)h(in)g(the)g(cac)n(he,)g(the)g(n)n(um)n(b)r(ers)f(of)h
(lines)g(of)g(data)f(in)h(the)g(main)g(memory)0 1535
y(that)28 b(ma)n(y)f(b)r(e)h(mapp)r(ed)g(on)n(to)f(this)g(cac)n(he)g
(line)h(m)n(ust)g(b)r(e)g(equal.)0 1751 y Fe(2.3.2)94
b(In)m(ter-bank)33 b(disp)s(ersion)0 1904 y Fo(In)25
b(a)f(usual)h(X-w)n(a)n(y)e(set-asso)r(ciativ)n(e)f(cac)n(he,)j(when)g
(\(X+1\))f(lines)h(of)g(data)f(con)n(tend)g(for)g(the)i(same)e(set)g
(in)h(the)g(cac)n(he,)g(they)0 2004 y(are)g(all)h(con\015icting)g(for)g
(the)h(same)e(place)h(in)h(the)f Ff(X)33 b Fo(cac)n(he)25
b(banks:)36 b(one)26 b(of)g(the)h(lines)f(m)n(ust)g(b)r(e)h(rejected)f
(from)g(the)h(cac)n(he)0 2103 y(\(Figure)g(5\).)125 2203
y(W)-7 b(e)33 b(ha)n(v)n(e)e(in)n(tro)r(duced)h(sk)n(ew)n(ed-asso)r
(ciativ)n(e)e(cac)n(hes)h(to)i(a)n(v)n(oid)e(this)i(situation)f(b)n(y)g
(scattering)g(the)h(data:)46 b(mapping)0 2303 y(functions)30
b(can)f(b)r(e)h(c)n(hosen)f(suc)n(h)g(that)h(whenev)n(er)f(t)n(w)n(o)f
(lines)i(of)g(data)f(con\015ict)g(for)g(a)g(single)h(lo)r(cation)f(in)g
(cac)n(he)g(bank)g Ff(i)p Fo(,)0 2402 y(they)f(ha)n(v)n(e)e(v)n(ery)h
(lo)n(w)g(probabilit)n(y)f(to)i(con\015ict)f(for)g(a)g(lo)r(cation)g
(in)h(cac)n(he)f(bank)g Ff(j)33 b Fo(\(Figure)27 b(6\).)125
2502 y(Ideally)-7 b(,)27 b(mapping)g(functions)h(ma)n(y)f(b)r(e)h(c)n
(hosen)f(suc)n(h)g(as)g(the)h(set)f(of)h(lines)f(that)h(migh)n(t)g(b)r
(e)g(mapp)r(ed)g(on)f(a)g(cac)n(he)g(line)0 2602 y(of)h(bank)f
Ff(i)g Fo(will)h(b)r(e)g(equaly)f(distributed)h(o)n(v)n(er)e(all)h(the)
h(lines)f(in)h(the)g(other)f(cac)n(he)g(banks.)0 2817
y Fe(2.3.3)94 b(Lo)s(cal)32 b(disp)s(ersion)e(in)h(a)h(single)e(bank)0
2971 y Fo(Man)n(y)i(applications)g(exhibit)h(spatial)f(lo)r(calit)n(y)
-7 b(,)33 b(therefore)f(the)h(mapping)f(functions)h(m)n(ust)g(b)r(e)g
(c)n(hosen)f(so)g(as)g(to)h(a)n(v)n(oid)0 3070 y(ha)n(ving)27
b(t)n(w)n(o)f(\\almost")g(neigh)n(b)r(or)h(lines)g(of)h(data)f
(con\015icting)g(for)g(the)h(same)f(ph)n(ysical)g(line)h(in)g(cac)n(he)
f(bank)g Ff(i)p Fo(.)125 3170 y(The)34 b(di\013eren)n(t)g(mapping)f
(functions)i(m)n(ust)f(resp)r(ect)f(a)h(certain)f(form)h(of)g(lo)r(cal)
f(disp)r(ersion)g(on)h(a)f(single)h(bank;)j(the)0 3269
y(mapping)c(functions)g Ff(f)751 3281 y Fc(i)811 3269
y Fo(m)n(ust)g(limit)g(the)h(n)n(um)n(b)r(er)e(of)h(con\015icts)g(when)
g(mapping)f(an)n(y)g(region)g(of)g(consecutiv)n(e)g(lines)h(of)0
3369 y(data)27 b(in)h(a)f(single)g(cac)n(he)g(bank)g
Ff(i)p Fo(.)0 3585 y Fe(2.3.4)94 b(Simple)29 b(hardw)m(are)k(implemen)m
(tation)0 3738 y Fo(A)e(k)n(ey)e(issue)h(for)g(the)h(o)n(v)n(erall)d(p)
r(erformance)h(of)h(a)g(micropro)r(cessor)d(is)k(the)f(pip)r(eline)h
(length.)45 b(Using)30 b(distinct)h(mapping)0 3838 y(functions)24
b(on)g(the)h(distinct)g(cac)n(he)e(banks)h(will)g(ha)n(v)n(e)f(no)h
(e\013ects)g(on)g(the)h(p)r(erformance,)f(as)f(long)g(as)h(the)h
(computations)e(of)0 3937 y(the)k(mapping)g(functions)g(can)g(b)r(e)g
(added)g(to)g(a)f(non)h(critical)f(stage)g(in)i(the)f(pip)r(eline)h
(and)e(do)h(not)g(lengthen)g(the)g(pip)r(eline)0 4037
y(cycle.)45 b(Let)31 b(us)g(notice)f(that)h(in)g(most)f(of)g(the)h(new)
g(generation)e(micropro)r(cessors,)f(the)j(address)e(computation)i
(stage)e(is)0 4137 y(not)d(the)h(critical)e(stage)g(in)i(the)f(pip)r
(eline)h(\(e.g.)36 b(in)27 b(TI)f(Sup)r(erSparc,)g(t)n(w)n(o)f
(cascaded)g(ALU)h(op)r(erations)f(ma)n(y)h(b)r(e)g(executed)0
4236 y(in)i(a)f(single)g(cycle\).)125 4336 y(In)i(order)e(to)i(ac)n
(hiev)n(e)e(this,)j(w)n(e)f(ha)n(v)n(e)e(to)i(c)n(hose)f(mapping)g
(functions)i(whose)e(hardw)n(are)f(implemen)n(tations)h(are)g(v)n(ery)0
4436 y(simple:)37 b(as)27 b(few)h(gate)f(dela)n(ys)f(as)h(p)r(ossible.)
125 4535 y(In)j([20)o(],)h(w)n(e)f(exhibited)h(a)f(family)g(of)h(four)e
(functions)i Ff(f)1907 4547 y Fc(i)1965 4535 y Fo(mapping)f(whic)n(h)g
(resp)r(ects)g(the)g(previous)g(prop)r(erties.)44 b(F)-7
b(or)0 4635 y(an)28 b(address)f Ff(A)p Fo(,)i(eac)n(h)f(bit)h(of)g
Ff(f)982 4647 y Fc(i)1009 4635 y Fo(\()p Ff(A)p Fo(\))g(is)g(obtained)f
(b)n(y)g(Exclusiv)n(e-ORing)e(at)j(most)f(4)g(bits)h(of)f(the)h(binary)
f(decomp)r(osition)0 4734 y(of)g Ff(A)p Fo(.)0 4967 y
Fp(2.4)112 b(Sk)m(ewing)37 b(on)h(t)m(w)m(o-w)m(a)m(y)g(asso)s(ciativ)m
(e)e(cac)m(hes)0 5120 y Fo(In)d(this)h(pap)r(er,)g(w)n(e)f(fo)r(cus)h
(only)f(on)g(t)n(w)n(o-w)n(a)n(y)d(sk)n(ew)n(ed-asso)r(ciativ)n(e)g
(cac)n(hes.)53 b(Our)33 b(basic)g(goals)e(here)i(are)f(to)i(minimize)0
5220 y(hardw)n(are)26 b(implemen)n(tation)h(cost)g(and)h(extra)e(dela)n
(y)h(on)h(cac)n(he)e(hit)i(time.)p eop
%%Page: 6 7
6 6 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(6)769 1203 y
 18646798 10069263 5591449 14866677 34798551 30654300 startTexFig
 769 1203 a
%%BeginDocument: 2assocexemple.ps

/IdrawDict 54 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Courier reencodeISO def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -308.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -328.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -348.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
0.95 SetP
%I t
[ 1 0 0 1 -94 -368.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -388.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -408.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -428.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -94 -448.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -308.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -328.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -348.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
0.95 SetP
%I t
[ 1 0 0 1 294 -368.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -388.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -408.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -428.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -448.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 577.934 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 577.934 ] concat
%I
[
(tag)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 144 577.934 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 244 577.934 ] concat
%I
[
(tag)
] Text
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.95 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
182 636 415 636 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
287 472 287 607 Line
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
259 605 316 626 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-75-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 372 461.934 ] concat
%I
[
(f)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
286 637 286 626 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 316 498 ] concat
%I
[
(f\(A0\) = f\(A1\) = f\(A2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 340 304 ] concat
%I
[
(A0 A1 A2)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 536 2662 a Fo(Figure)26 b(5:)37 b(3)27 b(data)g(con\015icting)h(for)f
(a)g(single)g(set)g(on)h(a)f(t)n(w)n(o-w)n(a)n(y)e(set-asso)r(ciativ)n
(e)g(cac)n(he)769 2686 y
 18646798 9882796 5591449 15064023 34798551 30654300 startTexFig
 769 2686 a
%%BeginDocument: skewedcacheexemple.ps

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Helvetica reencodeISO def
/Courier-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -303 -89.066 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -219 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -239 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -259 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -279 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -299 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -319 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -339 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 209 -359 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -304.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -324.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -344.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -364.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -384.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -404.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -424.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 294 -444.066 ] concat

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
115 751 225 771 Rect
End

Begin %I Rect
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 91 ] concat
%I
225 751 275 771 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -249.066 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
290 472 290 636 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
255 636 324 636 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 -158.066 ] concat
%I
240 616 255 656 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 173 -158.066 ] concat
%I
240 616 255 656 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -384 -249.066 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 528 827 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 628 827 ] concat
%I
[
(tag)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 334 487.934 ] concat
%I
[
(f0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-75-75-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 418 487.934 ] concat
%I
[
(f1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r-normal--18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 352 308 ] concat
%I
[
(A0  A1 A2)
] Text
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.95 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I 3
242 388
147 375
86 437
3 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.95 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I 3
341 390
400 452
478 436
3 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.95 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I 4
342 388
349 386
444 380
479 399
4 BSpl
End

Begin %I BSpl
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.95 SetP
%I t
[ 1 0 0 1 89 91 ] concat
%I 3
340 387
446 332
476 360
3 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-bold-r-*-120-75-75-*
Courier-Bold 12 SetF
%I t
[ 1 0 0 1 146 472 ] concat
%I
[
(f0\(A0\)=f0\(A1\)=f0\(A2\))
()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-bold-r-*-120-75-75-*
Courier-Bold 12 SetF
%I t
[ 1 0 0 1 461 538 ] concat
%I
[
(f1\(A1\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-bold-r-*-120-75-75-*
Courier-Bold 12 SetF
%I t
[ 1 0 0 1 452 486 ] concat
%I
[
(f1\(A2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-bold-r-*-120-75-75-*
Courier-Bold 12 SetF
%I t
[ 1 0 0 1 465 451 ] concat
%I
[
(f1\(A0\))
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 88 4121 a Fo(Figure)i(6:)36 b(Data)28 b(con\015icting)f(for)g(a)g(cac)
n(he)g(line)h(on)f(bank)g(0,)h(but)g(not)g(on)f(bank)g(1)g(on)h(a)f(sk)
n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(he)p eop
%%Page: 7 8
7 7 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(7)0 83 y Fe(An)32 b(example)0 236
y Fo(Let)e(us)f(consider)g(the)h(particular)e(case)h(of)g(64)g(b)n
(ytes)g(lines)h(and)f(4096)f(b)n(ytes)h(cac)n(he)g(banks.)42
b(\()p Ff(a)3069 248 y Fc(n)3114 236 y Ff(;)i(::)29 b(;)14
b(a)3337 248 y Fg(0)3375 236 y Fo(\))29 b(is)h(the)g(binary)0
336 y(represen)n(tation)d(of)i(the)h(address.)39 b(A)30
b(p)r(ossible)e(organization)f(for)h(a)h(t)n(w)n(o-w)n(a)n(y)d(sk)n(ew)
n(ed)i(asso)r(ciativ)n(e)f(cac)n(he)h(is)h(illustrated)0
436 y(in)f(Figure)f(9.)125 535 y(The)22 b(sk)n(ewing)g(functions)g
(used)h(in)g(this)f(example)h(v)n(erify)e(the)i(previously)f(men)n
(tioned)g(criterions)f(for)h(\\go)r(o)r(d")f(sk)n(ewing)0
635 y(functions.)125 734 y(On)27 b(this)h(example,)f(only)h(three)f(t)n
(w)n(o)g(en)n(tries)g(X)n(OR)h(gates)e(are)h(added)h(to)f(the)h
(classical)f(cac)n(he)g(bank)g(design.)37 b(In)28 b(the)0
834 y(prop)r(osed)23 b(design,)h(the)g(access)f(time)h(to)g(the)g(cac)n
(he)f(bank)h(is)f(only)h(sligh)n(tly)f(increased)g(b)n(y)g(the)i(dela)n
(y)e(for)g(crossing)f(a)h(X)n(OR)0 934 y(gate)k(when)h(using)f(sk)n
(ewing)f(functions.)125 1033 y(W)-7 b(e)31 b(b)r(eliev)n(e)f(that)h
(the)g(access)f(time)h(ma)n(y)f(ev)n(en)h(b)r(e)g(exactly)f(the)h(same)
f(as)g(in)h(a)g(classical)e(t)n(w)n(o-w)n(a)n(y)f(set-asso)r(ciativ)n
(e)0 1133 y(cac)n(he:)101 1286 y(1.)42 b(In)28 b(a)f(micropro)r
(cessor,)e(when)j(using)f(a)h(one-cycle)e(access)h(cac)n(he,)g(the)h
(cac)n(he)f(hit)h(time)h(generally)d(determines)i(the)208
1386 y(mac)n(hine)g(cycle.)40 b(The)29 b(address)e(computation)i(is)g
(p)r(erformed)f(in)h(a)f(less)h(critical)f(stage:)38
b(the)29 b(X)n(OR)g(gates)f(ma)n(y)g(b)r(e)208 1486 y(added)f(at)g(the)
h(end)g(of)g(that)g(stage.)101 1645 y(2.)42 b(When)28
b(using)f(a)g(pip)r(elined)i(cac)n(he,)d(ro)n(w)h(selection)g(ma)n(y)g
(b)r(e)h(done)f(in)h(the)g(second)f(cycle.)0 1858 y Fe(A)32
b(formal)f(description)g(of)g(the)h(family)e(of)i(sk)m(ewing)f
(functions)0 2012 y Fo(Let)d(2)191 1981 y Fc(c)252 2012
y Fo(b)r(e)g(the)g(size)f(of)h(the)g(line.)125 2111 y(Let)i(2)318
2081 y Fc(n)393 2111 y Fo(b)r(e)h(the)f(n)n(um)n(b)r(er)g(of)g(cac)n
(he)g(lines)g(in)g(a)g(cac)n(he)g(bank)g(and)g(let)g(us)g(consider)g
(the)g(decomp)r(osition)g(of)g(a)g(binary)0 2211 y(represen)n(tation)23
b(of)i(an)f(address)f(A)i(in)g(bit)g(substrings)f(A)h(=)f(\()p
Ff(A)2005 2223 y Fg(3)2068 2211 y Fo(,)p Ff(A)2153 2223
y Fg(2)2190 2211 y Fo(,)i Ff(A)2301 2223 y Fg(1)2338
2211 y Fo(,)g Ff(A)2449 2223 y Fg(0)2486 2211 y Fo(\),)g
Ff(A)2629 2223 y Fg(0)2691 2211 y Fo(is)f(a)f Ff(c)g
Fo(bit)i(string:)34 b(the)25 b(displacemen)n(t)0 2310
y(in)i(the)g(line.)37 b Ff(A)489 2322 y Fg(1)553 2310
y Fo(and)26 b Ff(A)775 2322 y Fg(2)839 2310 y Fo(are)g(t)n(w)n(o)g
Ff(n)g Fo(bits)h(strings)f(and)g Ff(A)1860 2322 y Fg(3)1924
2310 y Fo(is)h(the)g(string)f(of)g(the)h Ff(q)19 b Fb(\000)d
Fo(\(2)h Fb(\003)e Ff(n)i Fo(+)f Ff(c)p Fo(\))27 b(most)f(signi\014can)
n(t)g(bits.)125 2410 y(Let)h(us)h(consider)e Ff(T)39
b Fo(an)27 b(in)n(teger)g(suc)n(h)g(that)h(0)23 b Fb(\024)f
Ff(T)35 b(<)22 b Fo(2)1913 2380 y Fc(n)1986 2410 y Fo(and)2163
2389 y(\026)2147 2410 y Ff(T)39 b Fo(its)27 b(binary)g(opp)r(osite,\()
2985 2389 y(\026)2969 2410 y Ff(T)34 b Fo(=)23 b(2)3182
2380 y Fc(n)3245 2410 y Fb(\000)18 b Fo(1)g Fb(\000)g
Ff(T)12 b Fo(\).)125 2510 y(Let)23 b Ff(\036)h Fo(b)r(e)g(a)e(Bit)i(P)n
(erm)n(ute)e(P)n(erm)n(utation)g(on)h(the)h(set)f Fb(f)p
Fo(0)p Ff(;)14 b(::;)g Fo(2)2080 2480 y Fc(n)2133 2510
y Fb(\000)c Fo(1)p Fb(g)22 b Fo(\(e.g.)36 b(Iden)n(tit)n(y)-7
b(,)24 b(P)n(erfect)e(Sh)n(u\017e,)j(Bit)e(Rev)n(ersal\).)0
2609 y(W)-7 b(e)28 b(consider)f(the)h(mapping)f(functions)h(de\014ned)g
(resp)r(ectiv)n(ely)e(b)n(y:)966 2781 y Ff(F)1031 2741
y Fc(T)5 b(;\036)1019 2803 y Fg(0)1163 2781 y Fo(:)83
b Ff(S)605 b Fb(\000)-14 b(!)83 b(f)p Fo(0)p Ff(;)14
b(::;)g Fo(2)2388 2751 y Fc(n)p Fg(+)p Fc(c)2531 2781
y Fb(\000)k Fo(1)p Fb(g)1269 2881 y Fo(\()p Ff(A)1363
2893 y Fg(3)1401 2881 y Ff(;)c(A)1500 2893 y Fg(2)1537
2881 y Ff(;)g(A)1636 2893 y Fg(1)1673 2881 y Ff(;)g(A)1772
2893 y Fg(0)1810 2881 y Fo(\))83 b Fb(\000)-14 b(!)83
b Fo(\()p Ff(A)2236 2893 y Fg(1)2292 2881 y Fb(\010)18
b Fo(\()p Ff(\036)p Fo(\()p Ff(A)2550 2893 y Fg(2)2589
2881 y Fo(\))p Fa(.)p Ff(T)12 b Fo(\))p Ff(;)i(A)2865
2893 y Fg(0)2901 2881 y Fo(\))966 3091 y Ff(F)1031 3051
y Fc(T)5 b(;\036)1019 3113 y Fg(1)1163 3091 y Fo(:)83
b Ff(S)605 b Fb(\000)-14 b(!)83 b(f)p Fo(0)p Ff(;)14
b(::;)g Fo(2)2388 3061 y Fc(n)p Fg(+)p Fc(c)2531 3091
y Fb(\000)k Fo(1)p Fb(g)1269 3190 y Fo(\()p Ff(A)1363
3202 y Fg(3)1401 3190 y Ff(;)c(A)1500 3202 y Fg(2)1537
3190 y Ff(;)g(A)1636 3202 y Fg(1)1673 3190 y Ff(;)g(A)1772
3202 y Fg(0)1810 3190 y Fo(\))83 b Fb(\000)-14 b(!)83
b Fo(\()p Ff(A)2236 3202 y Fg(1)2292 3190 y Fb(\010)18
b Fo(\()p Ff(\036)p Fo(\()p Ff(A)2550 3202 y Fg(2)2589
3190 y Fo(\))p Fa(.)2689 3169 y Fo(\026)2673 3190 y Ff(T)11
b Fo(\))p Ff(;)j(A)2864 3202 y Fg(0)2901 3190 y Fo(\))125
3453 y Fb(\010)27 b Fo(is)g(the)h(exclusiv)n(e)f(OR)g(and)h
Fa(.)f Fo(is)g(the)h(bit)n(wise)g(pro)r(duct.)125 3553
y(These)34 b(functions)h(satisfy)f(the)g(criterions)g(for)g("go)r(o)r
(d")e(sk)n(ewing)i(functions)h(de\014ned)g(in)f(the)h(pap)r(er)f
(\(Equitabilit)n(y)-7 b(,)0 3652 y(in)n(ter-bank)27 b(disp)r(ersion)f
(and)i(lo)r(cal)f(disp)r(ersion\).)125 3762 y(Eac)n(h)g(bit)j(of)f(the)
h Ff(F)769 3722 y Fc(T)5 b(;\036)757 3784 y Fg(0)877
3762 y Fo(\()p Ff(A)p Fo(\))30 b(or)e Ff(F)1201 3722
y Fc(T)5 b(;\036)1189 3784 y Fg(1)1310 3762 y Fo(\()p
Ff(A)p Fo(\))30 b(is)f(either)g(directly)g(a)f(bit)i(of)f(the)h(binary)
e(represen)n(tation)f(of)j(address)d Ff(A)j Fo(or)0 3861
y(the)e(X)n(OR)f(of)h(t)n(w)n(o)f(bits)h(of)f(this)h(binary)f(represen)
n(tation.)125 3961 y Ff(T)37 b Fo(ma)n(y)26 b(b)r(e)h(c)n(hosen)f(in)g
(order)g(to)g(allo)n(w)f(symmetric)i(design)f(of)g(the)h(t)n(w)n(o)f
(cac)n(he)g(banks:)35 b(when)27 b Ff(n)f Fo(is)h(ev)n(en,)f(ha)n(ving)g
(the)0 4060 y(same)h(n)n(um)n(b)r(er)g(of)h(bits)g(equal)f(to)g(one)h
(and)f(zero)f(seems)i(an)f(in)n(teresting)g(approac)n(h.)125
4160 y(In)g(the)h(previous)e(example)h(in)h(\014gure)f(9,)g(T=)g(44)f
(\(binary)h(decomp)r(osition)g(101010\))e(and)i(the)h(Bit)f(P)n(erm)n
(ute)g(P)n(erm)n(u-)0 4260 y(tation)g(is)h(the)g(iden)n(tit)n(y)-7
b(.)0 4489 y Fp(2.5)112 b(Replacemen)m(t)37 b(p)s(olicy)f(on)h(a)h(t)m
(w)m(o-w)m(a)m(y)f(sk)m(ew)m(ed-asso)s(ciativ)m(e)h(cac)m(he)0
4643 y Fo(When)e(a)g(miss)g(o)r(ccurs)f(on)g(a)h(X-bank)f(cac)n(he,)i
(the)f(line)h(of)e(data)h(to)g(b)r(e)g(replaced)f(m)n(ust)h(b)r(e)g(c)n
(hosen)f(among)g(X)h(lines.)0 4742 y(Di\013eren)n(t)29
b(replacemen)n(t)e(p)r(olicies)h(ma)n(y)g(b)r(e)h(used.)39
b(LR)n(U)28 b(replacemen)n(t)g(p)r(olicy)g(or)f(pseudo-random)g
(replacemen)n(t)g(p)r(olicy)0 4842 y(are)g(generally)f(used)h(in)h
(set-asso)r(ciativ)n(e)d(cac)n(hes.)125 4941 y(The)40
b(pseudo-random)e(replacemen)n(t)i(p)r(olicy)g(is)g(the)g(simplest)h
(to)f(implemen)n(t.)75 b(But)41 b(LR)n(U)f(replacemen)n(t)f(p)r(olicy)0
5041 y(generally)g(w)n(orks)g(b)r(etter)i(and)f(ma)n(y)g(b)r(e)h
(implemen)n(ted)g(at)g(a)f(reasonable)e(hardw)n(are)h(cost.)75
b(Implemen)n(ting)41 b(a)f(LR)n(U)0 5141 y(replacemen)n(t)35
b(p)r(olicy)h(on)f(a)g(t)n(w)n(o-w)n(a)n(y)f(set-asso)r(ciativ)n(e)f
(cac)n(he)i(is)h(quite)g(simple:)53 b(a)36 b(single)f(bit)h(tag)f(p)r
(er)h(set)g(su\016cien)n(t.)0 5240 y(More)24 b(generally)g(a)h(LR)n(U)g
(replacemen)n(t)g(p)r(olicy)g(for)f(a)h(X-w)n(a)n(y)f(asso)r(ciativ)n
(e)g(is)h(feasible)g(with)h(adding)e(only)h Ff(X)20 b
Fb(\003)14 b Fo(\()p Ff(X)20 b Fb(\000)14 b Fo(1\))p
Ff(=)p Fo(2)0 5340 y(bit)28 b(tags)f(to)g(eac)n(h)g(set.)p
eop
%%Page: 8 9
8 8 bop 0 -208 a Fj(2)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)2388 b Fo(8)p 0 3 4012 4 v 0 5183 4 5181
v 825 28 a
 18646798 17714446 5854576 14800896 37495603 45126287 startTexFig
 825 28 a
%%BeginDocument: bank2org.ps

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 656 100 636 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 417 100 437 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 656 80 417 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 636 100 437 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 537 150 537 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 646 80 646 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 567 80 567 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 487 80 487 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 -18.589 ] concat
%I
150 367 399 387 Rect
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 -18.589 ] concat
%I
120 377 150 377 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
270 417 270 327 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 357 100 357 Rect
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 317 100 317 Rect
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 278 100 278 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 372 120 362 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 372 100 263 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
120 362 120 273 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 263 120 273 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
270 308 270 258 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
26 392 554 392 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 656 100 636 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 417 100 437 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 656 80 417 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
100 636 100 437 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
100 537 150 537 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 606 80 606 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 527 80 527 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 447 80 447 Line
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 46.1681 ] concat
%I
200 412 449 651 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
469 417 549 656 Rect
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
509 417 509 327 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
469 308 549 327 Rect
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I 3
329 686
509 686
509 656
3 MLine
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 621 469 621 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 542 469 542 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 452 469 452 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 408.187 ] concat
%I
[
(a3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 368.187 ] concat
%I
[
(a4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 329.187 ] concat
%I
[
(a5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 667.187 ] concat
%I
[
(a6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 588.187 ] concat
%I
[
(a8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 508.187 ] concat
%I
[
(a10)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 329 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 408 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 488 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 314 852 ] concat
%I
[
(a7  a13)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 399 852 ] concat
%I
[
(a9  a15)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 473 852 ] concat
%I
[
(a11  a17)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 0 -1 1 0 605.5 611.5 ] concat
%I
[
(TAGS)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 374 588 ] concat
%I
[
(DATA)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 125 299 ] concat
%I
[
(word selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 130 458 ] concat
%I
[
(column selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 243 727 ] concat
%I
[
(row selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 618 339 ] concat
%I
[
(Tag checking)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1577 2455 a Fo(Figure)27 b(7:)37 b(Cac)n(he)27 b(bank)g(0)825
2716 y
 18646798 17714446 5854576 14800896 37495603 45126287 startTexFig
 825 2716 a
%%BeginDocument: bank2org1.ps

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 656 100 636 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 417 100 437 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
80 656 80 417 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 636 100 437 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 537 150 537 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 646 80 646 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 567 80 567 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 11.2242 ] concat
%I
50 487 80 487 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 -18.589 ] concat
%I
150 367 399 387 Rect
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 -18.589 ] concat
%I
120 377 150 377 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
270 417 270 327 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 357 100 357 Rect
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 317 100 317 Rect
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
70 278 100 278 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 372 120 362 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 372 100 263 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
120 362 120 273 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
100 263 120 273 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 138.813 41.1868 ] concat
%I
270 308 270 258 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
26 392 554 392 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 656 100 636 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 417 100 437 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
80 656 80 417 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
100 636 100 437 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -117.878 852.514 ] concat
%I
100 537 150 537 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 606 80 606 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 527 80 527 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0 -1 1 0 -107.916 852.514 ] concat
%I
50 447 80 447 Line
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 46.1681 ] concat
%I
200 412 449 651 Rect
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
469 417 549 656 Rect
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
509 417 509 327 Line
End

Begin %I Rect
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
469 308 549 327 Rect
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I 3
329 686
509 686
509 656
3 MLine
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 621 469 621 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 542 469 542 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
449 452 469 452 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 408.187 ] concat
%I
[
(a3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 368.187 ] concat
%I
[
(a4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 174.075 329.187 ] concat
%I
[
(a5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 667.187 ] concat
%I
[
(a7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 588.187 ] concat
%I
[
(a9)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 154.075 508.187 ] concat
%I
[
(a11)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 89 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 329 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 408 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
230 761 270 781 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
235 801 235 781 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 41.1868 ] concat
%I
265 801 265 781 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 488 817.187 ] concat
%I
[
(xor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 314 852 ] concat
%I
[
(a6  a12)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 399 852 ] concat
%I
[
(a8  a14)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 473 852 ] concat
%I
[
(a10  a16)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 0 -1 1 0 605.5 611.5 ] concat
%I
[
(TAGS)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 374 588 ] concat
%I
[
(DATA)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 125 299 ] concat
%I
[
(word selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 130 458 ] concat
%I
[
(column selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 243 727 ] concat
%I
[
(row selection)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 618 339 ] concat
%I
[
(Tag checking)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1577 5142 a Fo(Figure)g(8:)37 b(Cac)n(he)27 b(bank)g(1)p
4008 5183 4 5181 v 0 5186 4012 4 v 849 5336 a(Figure)g(9:)36
b(An)28 b(example)f(of)h(a)f(t)n(w)n(o)g(w)n(a)n(y)f(sk)n(ew)n(ed-asso)
r(ciativ)n(e)e(cac)n(he)p eop
%%Page: 9 10
9 9 bop 0 -208 a Fj(3)83 b(SIMULA)-7 b(TIONS)3149 b Fo(9)125
83 y(Unfortunately)-7 b(,)34 b(w)n(e)f(ha)n(v)n(e)f(not)h(b)r(een)h
(able)f(to)g(\014nd)g(concise)g(information)f(to)h(asso)r(ciate)f(with)
i(a)e(cac)n(he)h(line)g(whic)n(h)0 183 y(w)n(ould)26
b(allo)n(w)g(a)h(simple)g(hardw)n(are)e(implemen)n(tation)i(of)g(a)f
(LR)n(U)h(replacemen)n(t)f(p)r(olicy)h(on)g(a)f(sk)n(ew)n(ed-asso)r
(ciativ)n(e)e(cac)n(he.)125 282 y(Nev)n(ertheless,)i(for)h(t)n(w)n(o-w)
n(a)n(y)e(sk)n(ew)n(ed-asso)r(ciativ)n(e)g(cac)n(hes,)h(a)h(pseudo-LR)n
(U)g(replacemen)n(t)g(p)r(olicy)g(ma)n(y)g(w)n(ork)f(\014ne:)208
448 y(A)h(tag)f(bit)i(is)f(asso)r(ciated)e(with)j(eac)n(h)e(line)h(in)g
(bank)g(0:)36 b(when)27 b(the)g(line)h(is)e(indexed,)i(the)f(tag)f(bit)
i(is)f(asserted)208 548 y(when)g(the)h(data)f(w)n(as)g(in)h(bank)f(0)g
(and)h(deasserted)e(when)i(the)g(data)f(is)h(in)f(bank)h(1.)208
681 y(On)h(a)h(miss,)h(the)f(tag)g(of)g(the)g(line)g(selected)g(in)h
(bank)e(0)h(is)g(read:)41 b(when)30 b(this)h(tag)e(is)h(1,)g(the)h
(missing)e(line)i(is)208 780 y(written)c(in)h(bank)f(1)h(otherwise)e
(the)i(missing)f(line)h(is)g(written)g(in)f(bank)h(0)125
946 y Fh(Notic)l(e)c(that)g(implementing)i(this)e(r)l(eplac)l(ement)h
(p)l(olicy)h(on)f(a)f(two-way)i(skewe)l(d-asso)l(ciative)g(c)l(ache)g
(r)l(e)l(quir)l(es)e(the)h(same)0 1046 y(har)l(dwar)l(e)31
b(as)f(implementing)h(a)f(LR)n(U)f(r)l(eplac)l(ement)h(p)l(olicy)i(on)e
(a)g(two-way)g(set-asso)l(ciative)h(c)l(ache.)0 1321
y Fi(3)135 b(Sim)l(ulations)0 1502 y Fo(Cac)n(he)37 b(sim)n(ulations)g
(ha)n(v)n(e)g(b)r(een)h(conducted)g(in)g(order)e(to)i(compare)e(sk)n
(ew)n(ed-asso)r(ciativ)n(e)f(cac)n(hes)h(with)j(usual)e(cac)n(he)0
1602 y(organizations.)125 1702 y(Presen)n(ted)29 b(results)i(sho)n(w)f
(that)h(for)g(equal)f(sizes,)i(a)e(t)n(w)n(o-w)n(a)n(y)f(sk)n(ew)n
(ed-asso)r(ciativ)n(e)f(cac)n(he)i(exhibits)h(appro)n(ximately)0
1801 y(the)d(same)f(miss)g(ratio)g(as)g(a)g(four-w)n(a)n(y)f(set-asso)r
(ciativ)n(e)f(cac)n(he.)0 2034 y Fp(3.1)112 b(T)-9 b(races)0
2187 y Fo(Our)27 b(set)g(of)h(traces)f(is)g(comp)r(osed)g(with)h(t)n(w)
n(o)f(distinct)h(sets.)125 2287 y(The)f(\014rst)g(set)g(is)g(comp)r
(osed)f(with)i(the)g(three)f(traces)f(from)g(the)i(Hennessy-P)n
(atterson)d(soft)n(w)n(are)g(obtained)i(from)g(the)0
2386 y(DLX)h(sim)n(ulator)f([5)o(])h(\(gcc,)f(T)-7 b(eX)28
b(and)g(Spice\).)125 2486 y(Sev)n(en)23 b(other)g(traces)g(w)n(ere)g
(generated)g(using)g(the)h(SparcSim)g(sim)n(ulator)e(facilit)n(y)i([18)
o(];)h(this)g(set)e(w)n(as)g(comp)r(osed)h(with:)125
2669 y Fb(\017)41 b Fo(RESEA)n(U:)27 b(the)h(sim)n(ulator)e(of)i(a)f
(particular)f(in)n(terconnection)h(net)n(w)n(ork)125
2835 y Fb(\017)41 b Fo(POISSON)26 b(:)i(a)f(P)n(oisson)f(solv)n(er)125
3001 y Fb(\017)41 b Fo(STRASSEN:)28 b(a)f(matrix-matrix)f(m)n(ultiply)i
(using)f(the)h(Strassen)f(algorithm.)125 3167 y Fb(\017)41
b Fo(LINP)-7 b(A)n(CKUD:)27 b(part)g(of)h(the)g(LINP)-7
b(A)n(CK)27 b(b)r(enc)n(hmark)125 3333 y Fb(\017)41 b
Fo(CA)n(CHE)27 b(:)h(The)f(cac)n(he)g(sim)n(ulator)f(itself)125
3499 y Fb(\017)41 b Fo(CPTC)27 b(:)g(A)h(P)n(ascal-to-C)d(translator)
125 3665 y Fb(\017)41 b Fo(SP)-7 b(ARSE:)27 b(m)n(ultiply)h(of)g(a)f
(sparse)f(matrix)h(b)n(y)g(a)h(full)g(v)n(ector.)125
3847 y(In)f(the)h(results)f(presen)n(ted)g(in)h(the)g(pap)r(er,)f(all)h
(the)g(b)r(enc)n(hmarks)e(w)n(ere)h(v)-5 b(alued)28 b(with)g(the)g
(same)f(w)n(eigh)n(t.)125 3947 y(F)-7 b(or)24 b(direct-mapp)r(ed)i(cac)
n(hes,)f(a)g(victim)h(cac)n(he)f(of)g(four)g(lines)h(w)n(as)e(assumed.)
36 b(A)26 b(similar)f(mec)n(hanism)g(w)n(as)f(ev)-5 b(aluated)0
4047 y(for)29 b(m)n(ulti-w)n(a)n(y)g(asso)r(ciativ)n(e)f(cac)n(hes,)h
(but)h(as)f(it)i(did)f(not)g(bring)f(signi\014can)n(t)g(hit)h(impro)n
(v)n(emen)n(t,)f(w)n(e)h(do)f(not)h(consider)f(it)0 4146
y(in)f(the)g(pap)r(er.)125 4246 y(Virtual)33 b(indexing)g(of)g(the)h
(cac)n(he)e(w)n(as)g(assumed)h(for)f(the)i(sim)n(ulations.)53
b(Ph)n(ysical)32 b(indexing)h(will)g(b)r(e)h(discussed)f(in)0
4346 y(section)27 b(5.)0 4578 y Fp(3.2)112 b(Miss)38
b(ratios)0 4731 y Fo(Di\013eren)n(t)32 b(cac)n(he)e(con\014gurations)g
(ha)n(v)n(e)g(b)r(een)i(sim)n(ulated:)45 b(mixed)31 b
(data/instructions)f(and)h(split)h(cac)n(hes.)48 b(Results)31
b(are)0 4831 y(rep)r(orted)22 b(in)h(\014gure)f(14.)34
b(Notice)22 b(that)h(these)g(results)f(are)g(certainly)f(v)n(ery)h
(optimistic:)35 b(single)22 b(pro)r(cess)f(traces,)i(exceptions)0
4930 y(not)28 b(sim)n(ulated)f(\(TLB)h(miss,)f(etc.\),)h(no)g(system,)f
(..)37 b(E\013ectiv)n(e)27 b(miss)h(ratios)e(will)i(certainly)f(b)r(e)h
(higher.)125 5030 y(F)-7 b(or)29 b(separate)f(instruction)i(and)g(data)
f(cac)n(hes,)g(the)i(micropro)r(cessor)26 b(is)k(assumed)f(to)h
(execute)g(one)f(instruction)h(p)r(er)0 5130 y(cycle.)k(The)20
b(miss)f(ratios)f(rep)r(orted)h(in)h(Figures)f(12)f(and)i(13)e(is)i
(the)g(a)n(v)n(erage)d(n)n(um)n(b)r(er)i(of)g(misses)h(p)r(er)f
(sequenced)g(instruction)0 5229 y(\(i.e)153 5197 y Fc(I)5
b(nstr)r(uction)28 b(M)6 b(isses)p Fg(+)p Fc(D)r(ata)30
b(M)6 b(isses)p 153 5211 1052 4 v 297 5258 a(N)g(umber)30
b(of)k(I)5 b(nstr)r(uctions)1215 5229 y Fo(\).)p eop
%%Page: 10 11
10 10 bop 0 -208 a Fj(4)83 b(INFLUENCE)27 b(ON)h(PERF)n(ORMANCE)2344
b Fo(10)125 83 y(F)-7 b(or)38 b(direct-mapp)r(ed)h(cac)n(hes,)h(a)f
(victim)g(bu\013er)g([9])g(of)g(four)f(lines)h(w)n(as)f(assumed.)70
b(The)39 b(ratio)f(of)h(misses)f(whic)n(h)0 183 y(e\013ectiv)n(ely)27
b(induce)h(an)g(access)e(on)h(memory)g(or)g(on)g(a)g(second)g(lev)n(el)
g(cac)n(he)g(is)h(rep)r(orted)e(in)i(column)g(\\Miss-Vict")3651
153 y Fg(2)3687 183 y Fo(.)125 282 y(LR)n(U)34 b(replacemen)n(t)f(p)r
(olicy)h(w)n(as)f(used)h(for)g(set-asso)r(ciativ)n(e)d(cac)n(hes.)56
b(The)34 b(pseudo-LR)n(U)f(replacemen)n(t)g(p)r(olicy)h(de-)0
382 y(scrib)r(ed)27 b(in)h(the)g(previous)f(section)g(w)n(as)f(used)i
(for)f(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-asso)r(ciativ)n(e)f(cac)n
(hes.)125 482 y(These)34 b(results)g(sho)n(w)f(that)i(at)f(equal)g
(sizes)g(a)g(t)n(w)n(o-w)n(a)n(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e
(cac)n(he)i(exhibits)i(appro)n(ximately)e(the)0 581 y(same)25
b(miss)h(ratio)f(as)g(a)g(four-w)n(a)n(y)f(set-asso)r(ciativ)n(e)g(cac)
n(he.)35 b(Figure)25 b(17)g(sho)n(ws)g(that)h(this)g(conclusion)f(is)h
(v)-5 b(alid)26 b(on)g(the)g(t)n(w)n(o)0 681 y(sets)h(of)h(traces.)125
780 y(A)n(t)f(this)h(p)r(oin)n(t)g(of)g(the)g(study)-7
b(,)28 b(w)n(e)f(mak)n(e)g(the)h(follo)n(wing)e(recommendation:)208
963 y(A)41 b(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed)i(asso)r(ciativ)n(e)f
(cac)n(he)g(m)n(ust)i(b)r(e)g(preferred)e(to)h(a)h(usual)f(t)n(w)n(o-w)
n(a)n(y)e(or)h(four-w)n(a)n(y)g(set-)208 1063 y(asso)r(ciativ)n(e)25
b(cac)n(hes.)0 1245 y Fe(Remark)33 b(1:)41 b Fo(Other)29
b(sim)n(ulations)g(w)n(ere)g(conducted)h(assuming)f(a)g(LR)n(U)h(p)r
(olicy)f(replacemen)n(t)g(on)h(a)f(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-)
0 1345 y(asso)r(ciativ)n(e)c(cac)n(he.)35 b(Better)24
b(hit)i(ratios)d(than)i(with)g(the)g(pseudo-LR)n(U)f(p)r(olicy)g(w)n
(ere)g(obtained,)h(but)h(unfortunately)e(LR)n(U)0 1445
y(p)r(olicy)j(cannot)h(b)r(e)g(implemen)n(ted)g(at)f(a)g(reasonable)f
(hardw)n(are)g(cost.)0 1677 y Fp(3.3)112 b(Sk)m(ewing)37
b(v)m(ersus)h(hashing)0 1830 y Fo(Hewlett-P)n(ac)n(k)-5
b(ard)38 b(recen)n(tly)i(in)n(tro)r(duced)g(the)h(HP7100)d(micropro)r
(cessor.)72 b(In)40 b(this)h(micropro)r(cessor,)f(addresses)f(are)0
1930 y(hashed)24 b(b)r(efore)g(accessing)f(a)h(direct-mapp)r(ed)g(cac)n
(he.)35 b(On)24 b(the)h(HP7100,)e(the)i(whole)f(virtual)g(address)f
(including)h(pro)r(cess)0 2029 y(n)n(um)n(b)r(er)35 b(is)h(hashed)f
(and)g(a)g(v)n(ery)f(large)g Fh(external)h Fo(cac)n(he)g(is)g(used)h
(\(greater)e(than)h(128)f(Kb)n(ytes\);)39 b(the)d(micropro)r(cessor)0
2129 y(designers)30 b(claimed)h(that)g(this)g(tec)n(hnic)h(impro)n(v)n
(es)d(the)j(a)n(v)n(erage)c(hit)j(ratio)f(on)h(a)g(virtually-indexed)f
(large)g(cac)n(he)g(when)0 2229 y(running)d(m)n(ultipro)r(cess)g(w)n
(orkloads.)35 b(This)27 b(phenomen)n(um)h(w)n(as)e(also)h(observ)n(ed)f
(b)n(y)h(Agarw)n(al)f([2)o(].)125 2328 y(Set-asso)r(ciativ)n(e)c(cac)n
(hes)g(indexed)j(with)f(the)g(function)h Ff(f)1921 2340
y Fg(0)1982 2328 y Fo(instead)f(of)g(the)g(usual)f(bit-selection)h(ha)n
(v)n(e)f(b)r(een)h(sim)n(ulated)0 2428 y(for)38 b(asso)r(ciativit)n(y)g
(degree)g(1,2)g(and)h(4.)70 b(Results)39 b(for)g(split)g(8192)e(b)n
(ytes)i(cac)n(hes)e(are)h(sho)n(wn)h(in)g(\014gure)f(18.)70
b(On)39 b(our)0 2528 y(b)r(enc)n(hmark)30 b(set)h(and)g(for)g(a)f
(small)h(cac)n(he)f(size,)h(hashing)g(the)g(addresses)e(do)r(es)i(not)g
(lead)g(to)g(v)n(ery)e(signi\014can)n(t)i(hit)g(ratio)0
2627 y(impro)n(v)n(emen)n(t.)125 2727 y(These)18 b(results)h(sho)n(w)f
(that)i(the)g(impro)n(v)n(eemen)n(t)d(of)j(p)r(erformance)e(of)h(sk)n
(ew)n(ed-asso)r(ciativ)n(e)d(o)n(v)n(er)h(set-asso)r(ciativ)n(e)g(cac)n
(hes)0 2826 y(is)28 b(mostly)f(due)h(to)g(the)g(in)n(ter-bank)f
(distribution)g(prop)r(ert)n(y)g(\(see)h(section)f(2.3.2\))g(and)g(not)
h(to)g(a)f(simple)h(hashing)f(on)h(the)0 2926 y(addresses.)0
3159 y Fp(3.4)112 b(Lo)s(cal)38 b(disp)s(ersion)0 3312
y Fo(In)26 b(order)e(to)i(illustrate)f(wh)n(y)-7 b(,)26
b(the)h(lo)r(cal)e(disp)r(ersion)g(prop)r(ert)n(y)g(\(see)g(section)h
(2.3.3\))e(is)i(v)n(ery)f(imp)r(ortan)n(t,)h(w)n(e)f(sim)n(ulated)g(a)0
3411 y(t)n(w)n(o-w)n(a)n(y)d(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(he)
j(where)h(sk)n(ewing)f(functions)h Ff(f)2169 3423 y Fg(0)2230
3411 y Fo(and)g Ff(f)2429 3423 y Fg(1)2490 3411 y Fo(are)f(t)n(w)n(o)h
(indep)r(enden)n(t)h(random)e(functions.)0 3511 y(Av)n(erage)30
b(miss)h(ratio)f(for)h(these)g(sim)n(ulations)g(are)f(giv)n(en)h(in)h
(\014gure)e(18)h(in)g(ro)n(w)g(\\sk)n(ew)n(ed-asso)r(ciativ)n(e)c
(RANDOM".)32 b(As)0 3611 y Ff(f)41 3623 y Fg(0)103 3611
y Fo(and)25 b Ff(f)303 3623 y Fg(1)365 3611 y Fo(are)e(indep)r(endan)n
(t)j(random)e(functions,)i(there)e(ma)n(y)h(b)r(e)g(lo)r(cal)f(in)n
(terferences)g(on)h(a)f(single)h(cac)n(he)f(bank.)35
b(These)0 3710 y(in)n(terferences)27 b(a\013ect)g(a)g(lot)h(the)g(hit)g
(ratio.)0 3985 y Fi(4)135 b(In\015uence)44 b(on)h(p)t(erformance)0
4167 y Fo(In)33 b(this)g(section,)h(w)n(e)f(sho)n(w)f(that,)i(for)f(8K)
f(b)n(ytes)g(cac)n(he,)i(using)e(an)h(asso)r(ciativ)n(e)e(cac)n(he)h
(structure)g(will)h(lead)g(to)g(b)r(etter)0 4266 y(p)r(erformance)27
b(than)g(using)g(a)h(direct-mapp)r(ed)f(cac)n(he)g(structure.)0
4499 y Fp(4.1)112 b(Cac)m(hes)38 b(for)g(lo)m(w-end)f(micropro)s
(cessor)f(systems)0 4652 y Fo(In)28 b(this)g(section,)f(w)n(e)g
(consider)g(lo)n(w-end)f(micropro)r(cessor)f(systems.)p
0 4721 1560 4 v 92 4775 a Fd(2)127 4798 y Fm(Victim)d(cac)n(hing)j(do)r
(es)f(not)h(lead)f(to)g(signi\014can)n(t)h(hit)e(impro)n(v)n(emen)n(t)g
(for)g(sk)n(ew)n(ed-asso)r(ciativ)n(e)i(or)e(set-asso)r(ciativ)n(e)i
(cac)n(hes)p eop
%%Page: 11 12
11 11 bop 0 -208 a Fj(4)83 b(INFLUENCE)27 b(ON)h(PERF)n(ORMANCE)2344
b Fo(11)p 0 930 3985 4 v 0 4321 4 3392 v 1108 1029 1797
4 v 1106 1120 4 92 v 1157 1093 a Fk(Organization)p 2041
1120 V 639 w(Miss)p 2431 1120 V 101 w(Miss)27 b(-)e(Vict)p
2902 1120 V 1108 1123 1797 4 v 1108 1143 V 1106 1235
4 92 v 1157 1207 a(Direct)h(mapp)r(ed)p 2041 1235 V 434
w(0.074086)p 2431 1235 V 184 w(0.064618)p 2902 1235 V
1108 1238 1797 4 v 1106 1329 4 92 v 1157 1302 a(2-w)n(a)n(y)g(set-asso)
r(ciativ)n(e)p 2041 1329 V 241 w(0.050133)p 2431 1329
V 2902 1329 V 1108 1333 1797 4 v 1106 1424 4 92 v 1157
1397 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p 2041 1424
V 241 w(0.041690)p 2431 1424 V 2902 1424 V 1108 1427
1797 4 v 1106 1519 4 92 v 1157 1491 a(2-w)n(a)n(y)g(sk)n(ew)n(ed-asso)r
(ciativ)n(e)p 2041 1519 V 102 w(0.043938)p 2431 1519
V 2902 1519 V 1108 1522 1797 4 v 1049 1759 a Fo(Figure)h(10:)36
b(mixed)27 b(data/instruction)g(cac)n(he:)36 b(4096)26
b(b)n(ytes)p 1108 1874 V 1106 1965 4 92 v 1157 1938 a
Fk(Organization)p 2041 1965 V 639 w(Miss)p 2431 1965
V 101 w(Miss)h(-)e(Vict)p 2902 1965 V 1108 1969 1797
4 v 1108 1989 V 1106 2080 4 92 v 1157 2052 a(Direct)h(mapp)r(ed)p
2041 2080 V 434 w(0.046719)p 2431 2080 V 184 w(0.041846)p
2902 2080 V 1108 2083 1797 4 v 1106 2175 4 92 v 1157
2147 a(2-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p 2041 2175
V 241 w(0.029362)p 2431 2175 V 2902 2175 V 1108 2178
1797 4 v 1106 2269 4 92 v 1157 2242 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n
(e)p 2041 2269 V 241 w(0.024265)p 2431 2269 V 2902 2269
V 1108 2272 1797 4 v 1106 2364 4 92 v 1157 2336 a(2-w)n(a)n(y)g(sk)n
(ew)n(ed-asso)r(ciativ)n(e)p 2041 2364 V 102 w(0.024287)p
2431 2364 V 2902 2364 V 1108 2367 1797 4 v 1049 2604
a Fo(Figure)h(11:)36 b(mixed)27 b(data/instruction)g(cac)n(he:)36
b(8192)26 b(b)n(ytes)p 1108 2719 V 1106 2810 4 92 v 1157
2783 a Fk(Organization)p 2041 2810 V 639 w(Miss)p 2431
2810 V 101 w(Miss)h(-)e(Vict)p 2902 2810 V 1108 2814
1797 4 v 1108 2834 V 1106 2925 4 92 v 1157 2898 a(Direct)h(mapp)r(ed)p
2041 2925 V 434 w(0.058757)p 2431 2925 V 184 w(0.054152)p
2902 2925 V 1108 2928 1797 4 v 1106 3020 4 92 v 1157
2992 a(2-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p 2041 3020
V 241 w(0.041994)p 2431 3020 V 2902 3020 V 1108 3023
1797 4 v 1106 3114 4 92 v 1157 3087 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n
(e)p 2041 3114 V 241 w(0.036830)p 2431 3114 V 2902 3114
V 1108 3118 1797 4 v 1106 3209 4 92 v 1157 3182 a(2-w)n(a)n(y)g(sk)n
(ew)n(ed-asso)r(ciativ)n(e)p 2041 3209 V 102 w(0.037562)p
2431 3209 V 2902 3209 V 1108 3212 1797 4 v 1313 3444
a Fo(Figure)h(12:)36 b(t)n(w)n(o)26 b(4096)g(b)n(ytes)h(split)h(cac)n
(hes)p 1108 3555 V 1106 3646 4 92 v 1157 3619 a Fk(Organization)p
2041 3646 V 639 w(Miss)p 2431 3646 V 101 w(Miss)f(-)e(Vict)p
2902 3646 V 1108 3650 1797 4 v 1108 3670 V 1106 3761
4 92 v 1157 3734 a(Direct)h(mapp)r(ed)p 2041 3761 V 434
w(0.037876)p 2431 3761 V 184 w(0.034900)p 2902 3761 V
1108 3764 1797 4 v 1106 3856 4 92 v 1157 3828 a(2-w)n(a)n(y)g(set-asso)
r(ciativ)n(e)p 2041 3856 V 241 w(0.025992)p 2431 3856
V 2902 3856 V 1108 3859 1797 4 v 1106 3950 4 92 v 1157
3923 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p 2041 3950
V 241 w(0.021844)p 2431 3950 V 2902 3950 V 1108 3954
1797 4 v 1106 4045 4 92 v 1157 4018 a(2-w)n(a)n(y)g(sk)n(ew)n(ed-asso)r
(ciativ)n(e)p 2041 4045 V 102 w(0.020865)p 2431 4045
V 2902 4045 V 1108 4048 1797 4 v 1313 4280 a Fo(Figure)h(13:)36
b(t)n(w)n(o)26 b(8192)g(b)n(ytes)h(split)h(cac)n(hes)p
3981 4321 4 3392 v 0 4324 3985 4 v 392 4397 a(Figure)f(14:)36
b(Miss)27 b(ratios)f(for)i(di\013eren)n(t)f(cac)n(he)g(sizes)g(and)g
(organizations;)e(Line)j(size)f(is)h(16)f(b)n(ytes)p
eop
%%Page: 12 13
12 12 bop 0 -208 a Fj(4)83 b(INFLUENCE)27 b(ON)h(PERF)n(ORMANCE)2344
b Fo(12)p 0 3 3628 4 v 0 1703 4 1700 v 929 102 1797 4
v 927 194 4 92 v 979 166 a Fk(Organization)p 1863 194
V 639 w(Miss)p 2252 194 V 101 w(Miss)27 b(-)e(Vict)p
2724 194 V 929 197 1797 4 v 929 217 V 927 308 4 92 v
979 281 a(Direct)h(mapp)r(ed)p 1863 308 V 433 w(0.033929)p
2252 308 V 185 w(0.031123)p 2724 308 V 929 312 1797 4
v 927 403 4 92 v 979 376 a(2-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p
1863 403 V 240 w(0.022641)p 2252 403 V 2724 403 V 929
406 1797 4 v 927 498 4 92 v 979 470 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n
(e)p 1863 498 V 240 w(0.018305)p 2252 498 V 2724 498
V 929 501 1797 4 v 927 592 4 92 v 979 565 a(2-w)n(a)n(y)g(sk)n(ew)n
(ed-asso)r(ciativ)n(e)p 1863 592 V 101 w(0.016981)p 2252
592 V 2724 592 V 929 596 1797 4 v 1334 827 a Fo(Figure)h(15:)36
b(SparcSim)27 b(traces)p 929 937 V 927 1029 4 92 v 979
1001 a Fk(Organization)p 1863 1029 V 639 w(Miss)p 2252
1029 V 101 w(Miss)g(-)e(Vict)p 2724 1029 V 929 1032 1797
4 v 929 1052 V 927 1143 4 92 v 979 1116 a(Direct)h(mapp)r(ed)p
1863 1143 V 433 w(0.047087)p 2252 1143 V 185 w(0.043712)p
2724 1143 V 929 1147 1797 4 v 927 1238 4 92 v 979 1211
a(2-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p 1863 1238 V 240
w(0.033811)p 2252 1238 V 2724 1238 V 929 1241 1797 4
v 927 1333 4 92 v 979 1305 a(4-w)n(a)n(y)g(set-asso)r(ciativ)n(e)p
1863 1333 V 240 w(0.030103)p 2252 1333 V 2724 1333 V
929 1336 1797 4 v 927 1427 4 92 v 979 1400 a(2-w)n(a)n(y)g(sk)n(ew)n
(ed-asso)r(ciativ)n(e)p 1863 1427 V 101 w(0.029928)p
2252 1427 V 2724 1427 V 929 1431 1797 4 v 1416 1662 a
Fo(Figure)h(16:)36 b(DLX)28 b(traces)p 3624 1703 4 1700
v 0 1706 3628 4 v 791 1860 a(Figure)f(17:)36 b(Cac)n(he)27
b(Size)h(8192)d(b)n(ytes,)j(split)g(Instruction/Data)e(cac)n(hes)p
782 2063 2336 4 v 780 2163 4 100 v 832 2133 a(Organization)p
2201 2163 V 1096 w(Miss)p 2614 2163 V 100 w(Miss)h(-)g(Vict)p
3116 2163 V 782 2166 2336 4 v 782 2186 V 780 2285 4 100
v 832 2256 a(Direct)h(mapp)r(ed)p 2201 2285 V 879 w(0.037876)p
2614 2285 V 185 w(0.034900)p 3116 2285 V 782 2289 2336
4 v 780 2388 4 100 v 832 2359 a(Direct)g(mapp)r(ed)g(hashed)p
2201 2388 V 601 w(0.037586)p 2614 2388 V 185 w(0.032970)p
3116 2388 V 782 2392 2336 4 v 782 2412 V 780 2511 4 100
v 832 2481 a(2-w)n(a)n(y)e(set-asso)r(ciativ)n(e)p 2201
2511 V 664 w(0.025992)p 2614 2511 V 3116 2511 V 782 2515
2336 4 v 780 2614 4 100 v 832 2584 a(2-w)n(a)n(y)g(set-asso)r(ciativ)n
(e)f(hashed)p 2201 2614 V 389 w(0.025632)p 2614 2614
V 3116 2614 V 782 2618 2336 4 v 782 2637 V 780 2737 4
100 v 832 2707 a(4-w)n(a)n(y)h(set-asso)r(ciativ)n(e)p
2201 2737 V 664 w(0.021844)p 2614 2737 V 3116 2737 V
782 2740 2336 4 v 780 2840 4 100 v 832 2810 a(4-w)n(a)n(y)g(set-asso)r
(ciativ)n(e)f(hashed)p 2201 2840 V 389 w(0.020895)p 2614
2840 V 3116 2840 V 782 2843 2336 4 v 782 2863 V 780 2963
4 100 v 832 2933 a(2-w)n(a)n(y)h(sk)n(ew)n(ed-asso)r(ciativ)n(e)p
2201 2963 V 513 w(0.020865)p 2614 2963 V 3116 2963 V
782 2966 2336 4 v 780 3066 4 100 v 832 3036 a(2-w)n(a)n(y)g(sk)n(ew)n
(ed-asso)r(ciativ)n(e)e(RANDOM)p 2201 3066 V 100 w(0.024202)p
2614 3066 V 3116 3066 V 782 3069 2336 4 v 782 3089 V
1322 3321 a(Figure)j(18:)36 b(Sk)n(ewing)27 b(v)n(ersus)f(hashing)0
3580 y Fe(When)31 b(cac)m(he)j(hit)d(time)f(do)s(es)h(not)g(determine)f
(the)i(micropro)s(cessor)e(clo)s(c)m(k)0 3733 y Fo(F)-7
b(rom)32 b(no)n(w,)g(w)n(e)g(resen)n(t)f(p)r(erformance)g(using)h
Fh(Cycle)j(Per)f(Instruction)d Fo(or)g Fh(Time)k(p)l(er)f(Instruction)d
Fo(assuming)h(separate)0 3832 y(instruction)27 b(cac)n(he)g(and)h(data)
f(cac)n(he.)125 3932 y(Figure)22 b(19)g(illustrates)g(the)h(p)r
(erformance)f(in)h(Cycle)g(P)n(er)e(Instruction)i(on)f(our)h(b)r(enc)n
(hmark)f(set)h(for)f(di\013eren)n(t)h(memory)0 4032 y(latencies.)36
b(Both)28 b(cac)n(he)f(sizes)g(are)f(8192)g(b)n(ytes)h(and)h(length)f
(of)h(a)f(cac)n(he)g(line)h(is)f(16)g(b)n(ytes.)125 4131
y(F)-7 b(orm)n(ula)26 b(\(1\))i(is)f(used)h(for)f(deriving)g(Figure)g
(19)f(from)i(Figure)f(13.)821 4465 y(3)18 b Fb(\003)g
Fo(\()p Ff(miss)g Fb(\000)g Ff(v)s(ict)p Fo(\))g Fb(\003)g
Ff(C)6 b(y)s(cl)r(e)18 b Fo(+)g Ff(v)s(ict)g Fo(+)g Ff(Latency)i
Fb(\003)e Fo(\()p Ff(miss)g Fb(\000)g Ff(v)s(ict)p Fo(\))673
b(\(1\))208 4639 y(where)32 b Ff(miss)g Fo(is)h(the)h(miss)f(ratio)f
(of)h(the)g(cac)n(he,)g Ff(v)s(ict)g Fo(is)g(is)g(the)g(ratio)f(of)h
(misses)g(that)g(hits)g(in)h(the)f(victim)208 4739 y(cac)n(he)430
4709 y Fg(3)493 4739 y Fo(and)26 b Ff(Latency)h Fo(is)f(the)g(latency)g
(for)g(accessing)e(the)i(missing)g(line)g(in)g(the)h(main)f(memory)f
(\(or)g(second)208 4838 y(lev)n(el)i(cac)n(he\).)36 b(The)28
b(in)n(ternal)f(dela)n(y)f(in)i(the)g(micropro)r(cessor)d(is)i(assumed)
g(to)h(b)r(e)g(3)f(cycles.)125 4998 y(When)22 b(the)g(cac)n(he)e(hit)i
(time)g(do)r(es)g(not)f(determine)h(directly)f(the)h(clo)r(c)n(k)f
(frequency)g(of)h(the)g(micropro)r(cessor)c(\(e.g.)35
b(when)0 5097 y(cac)n(he)c(access)g(is)h(pip)r(elined\),)i(then)e(an)g
(asso)r(ciativ)n(e)e(structure)i(m)n(ust)g(b)r(e)g(used)g(for)f(the)i
(cac)n(he:)45 b(p)r(erformance)30 b(b)r(ene\014ts)0 5197
y(for)d(memory)g(latency)g(of)h(the)g(order)e(of)h(20)g(cycles)g(is)h
(ab)r(out)f(20)g(\045.)p 0 5263 1560 4 v 92 5317 a Fd(3)127
5340 y Fm(for)c(direct)h(mapp)r(ed)f(cac)n(hes)i(only)p
eop
%%Page: 13 14
13 13 bop 0 -208 a Fj(4)83 b(INFLUENCE)27 b(ON)h(PERF)n(ORMANCE)2344
b Fo(13)1005 0 y
 14917438 14917438 0 0 35456368 35456368 startTexFig
 1005 0 a
%%BeginDocument: /arch_dd/seznec/NEWCACHE/split8192.ps
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Output produced for inclusion in another document.
% This file will not work properly if sent directly to a printer.
%
% Rotation and centering are turned off for inclusion in a document
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
(Cache Size 8192 bytes) 4488 8856 3 just-string
200 /Times-Roman choose-font
(Direct mapped ) 6136 8104 2 just-string
(2-way set-associative) 6136 7812 2 just-string
(4-way set-associative ) 6136 7520 2 just-string
(2-way skewed-associative ) 6136 7228 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6136 8136 moveto
  8886 8136 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6136 7844 moveto
  8886 7844 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  6136 7552 moveto
  8886 7552 lineto
stroke
14 setlinewidth
[75] 0 setdash
newpath
  6136 7260 moveto
  8886 7260 lineto
stroke
(Cycles per Instruction) 90 8496 2 just-string
(Memory latency \(cycles\)) 8886 380 5 just-string
(1.05) 860 635 5 just-string
(1.10) 860 1017 5 just-string
(1.15) 860 1400 5 just-string
(1.20) 860 1783 5 just-string
(1.25) 860 2166 5 just-string
(1.30) 860 2548 5 just-string
(1.35) 860 2931 5 just-string
(1.40) 860 3314 5 just-string
(1.45) 860 3697 5 just-string
(1.50) 860 4079 5 just-string
(1.55) 860 4462 5 just-string
(1.60) 860 4845 5 just-string
(1.65) 860 5228 5 just-string
(1.70) 860 5610 5 just-string
(1.75) 860 5993 5 just-string
(1.80) 860 6376 5 just-string
(1.85) 860 6758 5 just-string
(1.90) 860 7141 5 just-string
(1.95) 860 7524 5 just-string
(2.00) 860 7907 5 just-string
(0.00) 1182 90 7 just-string
(5.00) 2108 90 7 just-string
(10.00) 3035 90 7 just-string
(15.00) 3961 90 7 just-string
(20.00) 4888 90 7 just-string
(25.00) 5814 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 635 moveto
  6046 635 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1017 moveto
  6046 1017 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1400 moveto
  6046 1400 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1783 moveto
  6046 1783 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2166 moveto
  6046 2166 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2548 moveto
  6046 2548 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2931 moveto
  6046 2931 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3314 moveto
  6046 3314 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3697 moveto
  6046 3697 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4079 moveto
  6046 4079 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4462 moveto
  6046 4462 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4845 moveto
  6046 4845 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5228 moveto
  6046 5228 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5610 moveto
  6046 5610 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5993 moveto
  6046 5993 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6376 moveto
  6046 6376 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6758 moveto
  6046 6758 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7141 moveto
  6046 7141 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7524 moveto
  6046 7524 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7907 moveto
  6046 7907 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1182 8106 moveto
  1182 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2108 8106 moveto
  2108 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3035 8106 moveto
  3035 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3961 8106 moveto
  3961 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4888 8106 moveto
  4888 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5814 8106 moveto
  5814 380 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1182 1076 moveto
  2108 2412 lineto
  3405 4282 lineto
  5814 7755 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1182 849 moveto
  2108 1844 lineto
  3405 3236 lineto
  5814 5823 lineto
stroke
14 setlinewidth
[50] 0 setdash
newpath
  1182 754 moveto
  2108 1590 lineto
  3405 2760 lineto
  5814 4934 lineto
stroke
14 setlinewidth
[75] 0 setdash
newpath
  1182 731 moveto
  2108 1530 lineto
  3405 2648 lineto
  5814 4724 lineto
stroke
% End of xgraph output
%%EndDocument

 endTexFig
 968 2072 a Fo(Figure)27 b(19:)36 b(Separate)26 b(instruction)h(cac)n
(he)g(and)h(data)f(cac)n(he)125 2335 y(Unfortunately)-7
b(,)27 b(on)h(man)n(y)f(micropro)r(cessors,)d(the)29
b(cac)n(he)d(hit)j(time)f(is)f(determined)h(b)n(y)g(the)g(clo)r(c)n(k)f
(frequency)g(of)h(the)0 2434 y(micropro)r(cessor.)0 2649
y Fe(When)j(cac)m(he)j(hit)d(time)f(determines)f(the)j(micropro)s
(cessor)e(clo)s(c)m(k)0 2803 y Fo(F)-7 b(or)32 b(illustrating)h(wh)n(y)
g(on-c)n(hip)f(cac)n(hes)g(used)h(in)h(lo)n(w-end)e(micropro)r(cessors)
e(m)n(ust)j(b)r(e)g(asso)r(ciativ)n(e,)g(w)n(e)g(consider)f(t)n(w)n(o)0
2902 y(micropro)r(cessors)24 b(directly)k(accessing)e(a)h(main)h
(memory)e(with)i(a)g(250)e(ns)h(access)g(time)2807 2872
y Fg(4)2844 2902 y Fo(:)125 3065 y Fb(\017)41 b Fo(Pro)r(cessor)24
b(P1)j(is)h(a)f(single-issue)f(RISC)i(micropro)r(cessor)d(with)j(t)n(w)
n(o)e(on-c)n(hip)h(8K)g(b)n(ytes)g(direct-mapp)r(ed)h(cac)n(hes.)125
3230 y Fb(\017)41 b Fo(Pro)r(cessor)h(P2)i(is)g(a)h(single-issue)e
(RISC)i(micropro)r(cessor)d(with)j(t)n(w)n(o)g(on-c)n(hip)f(8K)g(b)n
(ytes)g(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-)208 3330
y(asso)r(ciativ)n(e)25 b(cac)n(hes.)0 3493 y(Figure)37
b(20)f(illustrates)h(the)h(clo)r(c)n(k)e(needed)i(on)f(eac)n(h)f(of)i
(the)f(t)n(w)n(o)g(pro)r(cessors)e(for)i(ac)n(hieving)f(a)h(p)r
(erformance)f(of)h(one)0 3592 y(instruction)27 b(p)r(er)h
Ff(X)34 b Fo(ns)27 b(on)h(our)f(set)g(of)h(b)r(enc)n(hmarks.)125
3692 y(Remark)33 b(that)i(Pro)r(cessor)c(P2)j(ac)n(hiev)n(ed)f(one)h
(instruction)g(p)r(er)g(20)g(ns)g(with)h(a)f(14)f(ns)i(clo)r(c)n(k,)g
(while)f(Pro)r(cessor)e(P1)0 3792 y(needs)27 b(a)h(10)e(ns)i(clo)r(c)n
(k)f(to)g(ac)n(hiev)n(e)f(the)i(same)f(p)r(erformance)g(lev)n(el.)125
3891 y(This)f(example)f(clearly)h(indicates)f(that)i(for)f(lo)n(w-end)f
(micropro)r(cessor)e(systems,)j(the)h(structure)e(of)i(the)f(cac)n(hes)
f(ha)n(v)n(e)0 3991 y(to)i(b)r(e)h(asso)r(ciativ)n(e:)208
4154 y(Using)f(a)g(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-asso)r(ciativ)n
(e)g(cac)n(he)h(is)i(the)g(reasonable)d(c)n(hoice.)0
4386 y Fp(4.2)112 b(Cac)m(hes)38 b(for)g(high-end)g(micropro)s(cessor)e
(systems)0 4539 y Fo(In)25 b(high-end)f(micropro)r(cessor)e(systems,)j
(second)f(lev)n(el)g(cac)n(hes)f(will)i(b)r(e)g(used.)36
b(F)-7 b(or)24 b(getting)g(bac)n(k)g(the)h(\014rst)f(w)n(ord)g(of)h
(data)0 4638 y(of)j(a)f(missing)g(line)h(from)f(this)h(second)f(lev)n
(el)g(cac)n(he,)g(a)g(dela)n(y)g(around)f(60)h(ns)g(seems)h(realistic)e
(with)i(to)r(da)n(y)f(tec)n(hnology)-7 b(.)125 4738 y(As)31
b(for)f(lo)n(w-end)h(micropro)r(cessor)d(systems,)j(an)g(asso)r(ciativ)
n(e)e(structure)i(of)g(cac)n(he)f(m)n(ust)i(b)r(e)f(used)g(when)g(the)h
(cac)n(he)0 4838 y(hit)c(time)g(do)r(es)g(not)f(determine)h(the)g
(basic)f(clo)r(c)n(k)g(of)g(the)h(pro)r(cessor)e(\(see)h(Figure)g
(19\).)125 4937 y(As)h(in)g(the)g(previous)f(section,)h(in)g(Figure)g
(21,)f(w)n(e)h(compare)e(the)j(clo)r(c)n(ks)e(needed)h(on)g(the)g(h)n
(yp)r(othetic)g(pro)r(cessors)e(P1)0 5037 y(and)h(P2)g(for)g(ac)n
(hieving)g(a)g(constan)n(t)g(p)r(erformance)f(when)i(they)g(are)e
(connected)i(to)f(a)g(second)g(lev)n(el)g(cac)n(he)3439
5007 y Fg(5)p 0 5105 1560 4 v 92 5158 a Fd(4)127 5182
y Fm(In)32 b(this)g(example,)h(the)f(imp)r(ortan)n(t)g(parameter)f(is)g
(the)h(sequencing)i(rate,)f(a)f(single-issue)f(micropro)r(cessor)f(at)i
(frequency)h(F)f(ma)n(y)e(b)r(e)0 5261 y(replace)24 b(b)n(y)g(a)g
(dual-issue)f(micropro)r(cessor)f(at)j(frequency)f(F/2)92
5317 y Fd(5)127 5340 y Fm(F)-6 b(or)23 b(simplicit)n(y)-6
b(,)22 b(w)n(e)i(do)g(not)g(consider)g(second)h(lev)n(el)f(cac)n(he)h
(misses.)p eop
%%Page: 14 15
14 14 bop 0 -208 a Fj(4)83 b(INFLUENCE)27 b(ON)h(PERF)n(ORMANCE)2344
b Fo(14)1005 0 y
 14917438 14917438 0 0 35456368 35456368 startTexFig
 1005 0 a
%%BeginDocument: /arch_dd/seznec/NEWCACHE/clock250.ps
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Output produced for inclusion in another document.
% This file will not work properly if sent directly to a printer.
%
% Rotation and centering are turned off for inclusion in a document
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
() 4488 8856 3 just-string
200 /Times-Roman choose-font
(Processor P1) 6996 8104 2 just-string
(Processor P2) 6996 7812 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6996 8136 moveto
  8316 8136 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6996 7844 moveto
  8316 7844 lineto
stroke
(Processor clock \(ns\)) 90 8496 2 just-string
(ns per instruction) 8886 380 5 just-string
(0.00) 860 533 5 just-string
(2.00) 860 876 5 just-string
(4.00) 860 1219 5 just-string
(6.00) 860 1562 5 just-string
(8.00) 860 1905 5 just-string
(10.00) 860 2248 5 just-string
(12.00) 860 2591 5 just-string
(14.00) 860 2935 5 just-string
(16.00) 860 3278 5 just-string
(18.00) 860 3621 5 just-string
(20.00) 860 3964 5 just-string
(22.00) 860 4307 5 just-string
(24.00) 860 4650 5 just-string
(26.00) 860 4993 5 just-string
(28.00) 860 5336 5 just-string
(30.00) 860 5679 5 just-string
(32.00) 860 6022 5 just-string
(34.00) 860 6365 5 just-string
(36.00) 860 6708 5 just-string
(38.00) 860 7051 5 just-string
(40.00) 860 7394 5 just-string
(42.00) 860 7737 5 just-string
(44.00) 860 8080 5 just-string
(10.00) 1221 90 7 just-string
(20.00) 2574 90 7 just-string
(30.00) 3928 90 7 just-string
(40.00) 5282 90 7 just-string
(50.00) 6635 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 533 moveto
  6906 533 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 876 moveto
  6906 876 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1219 moveto
  6906 1219 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1562 moveto
  6906 1562 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1905 moveto
  6906 1905 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2248 moveto
  6906 2248 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2591 moveto
  6906 2591 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2935 moveto
  6906 2935 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3278 moveto
  6906 3278 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3621 moveto
  6906 3621 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3964 moveto
  6906 3964 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4307 moveto
  6906 4307 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4650 moveto
  6906 4650 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4993 moveto
  6906 4993 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5336 moveto
  6906 5336 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5679 moveto
  6906 5679 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6022 moveto
  6906 6022 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6365 moveto
  6906 6365 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6708 moveto
  6906 6708 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7051 moveto
  6906 7051 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7394 moveto
  6906 7394 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7737 moveto
  6906 7737 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 8080 moveto
  6906 8080 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1221 8106 moveto
  1221 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2574 8106 moveto
  2574 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3928 8106 moveto
  3928 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5282 8106 moveto
  5282 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6635 8106 moveto
  6635 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 8106 moveto
  950 380 lineto
  6906 380 lineto
  6906 8106 lineto
  950 8106 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1221 731 moveto
  1898 1508 lineto
  2574 2284 lineto
  3251 3060 lineto
  3928 3836 lineto
  4605 4613 lineto
  5282 5389 lineto
  5958 6165 lineto
  6635 6942 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1221 1300 moveto
  1898 2107 lineto
  2574 2914 lineto
  3251 3721 lineto
  3928 4528 lineto
  4605 5334 lineto
  5282 6141 lineto
  5958 6948 lineto
  6635 7755 lineto
stroke
% End of xgraph output
%%EndDocument

 endTexFig
 832 2072 a Fo(Figure)27 b(20:)36 b(Comparing)26 b(P1)h(and)g(P2)g
(connected)g(to)h(main)f(memory)125 2338 y(On)d(this)i(\014gure,)f(one)
g(will)g(notice)g(that)h(the)f Fh(e\013e)l(ctive)h Fo(p)r(erformance)e
(of)h(pro)r(cessor)e(P1)i(and)g(pro)r(cessor)e(P2)h(at)h(a)g(giv)n(en)0
2437 y(frequency)i(are)g(quite)h(close:)208 2603 y(With)f(a)f(10)g(ns)g
(clo)r(c)n(k,)g(pro)r(cessor)f(P2)g(ac)n(hiev)n(es)g(one)h(instruction)
h(p)r(er)f(12)g(ns,)g(while)h(pro)r(cessor)d(P1)i(ac)n(hiev)n(es)208
2703 y(this)h(lev)n(el)h(of)f(p)r(erformance)g(with)h(a)f(9)g(ns)h(clo)
r(c)n(k.)125 2869 y(When)33 b(data)g(\015o)n(wing)g(out)g(from)g(the)h
(cac)n(he)e(cannot)h(b)r(e)h(used)f(b)r(efore)g(tag)g(c)n(hec)n(k,)g
(the)h(cac)n(he)f(hit)g(time)h(on)f(a)g(t)n(w)n(o-)0
2969 y(w)n(a)n(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(he)j(and)g
(on)g(a)g(direct)g(mapp)r(ed)h(cac)n(he)e(are)h(within)h(a)f(v)n(ery)f
(few)i(p)r(er)f(cen)n(t)3420 2938 y Fg(6)3458 2969 y
Fo(,)i(then)e(using)0 3068 y(t)n(w)n(o-w)n(a)n(y)26 b(sk)n(ew)n
(ed-asso)r(ciativ)n(e)g(cac)n(hes)h(will)i(lead)g(to)f(sligh)n(tly)h(b)
r(etter)g(o)n(v)n(erall)d(p)r(erformance)i(of)h(the)g(system)g(than)f
(using)0 3168 y(direct-mapp)r(ed)f(cac)n(hes.)0 3400
y Fp(Optimistic)34 b(execution)0 3553 y Fo(In)g(order)f(to)h(increase)f
(clo)r(c)n(k)g(frequency)-7 b(,)35 b(data)f(\015o)n(wing)f(out)h(from)g
(the)g(cac)n(he)f(ma)n(y)h(b)r(e)g(used)g(b)r(efore)g(tag)f(c)n(hec)n
(k)h(with)0 3653 y(direct-mapp)r(ed)e(cac)n(hes.)48 b(Chec)n(king)31
b(the)i(v)-5 b(alidit)n(y)31 b(of)h(the)h(data)e(w)n(ord)g(ma)n(y)g(b)r
(e)h(executed)g(in)g(parallel)f(with)h(the)h(other)0
3753 y(activities)f(in)h(the)f(pip)r(eline.)52 b(The)33
b(curren)n(t)e(cycle)h(in)h(the)f(pip)r(eline)h(will)g(b)r(e)g
(canceled)f(if)g(the)h(data)f(\(or)g(instruction\))g(is)0
3852 y(found)c(to)f(b)r(e)h(un)n(v)-5 b(alid.)125 3952
y(W)e(e)28 b(shall)f(refer)g(to)g(this)h(tec)n(hnic)g(as)f
Fh(optimistic)k(exe)l(cution)p Fo(.)125 4052 y(Optimistic)e(execution)f
(w)n(as)g(also)g(prop)r(osed)g(for)g(a)h(set-asso)r(ciativ)n(e)e(cac)n
(he:)38 b(the)30 b(most-recen)n(tly-used)d(data)h(\(MR)n(U\))0
4151 y(in)g(the)g(selected)f(set)h([3])f(can)g(b)r(e)h(systematically)f
(used.)208 4317 y(F)-7 b(or)27 b(a)h(128)f(Kb)n(ytes)h(cac)n(he,)g
(assuming)f(a)h(12)g(cycles)f(p)r(enalt)n(y)i(on)f(a)g(global)f(miss,)h
(and)h(a)f(one)g(cycle)g(p)r(enalt)n(y)208 4417 y(on)d(a)h(miss)g(on)g
(the)h(MR)n(U)f(region,)g(but)g(a)g(hit)h(on)f(the)h(global)e(cac)n
(he,)g(the)i(cac)n(he)e(access)g(time)i(w)n(as)e(sho)n(wn)h(to)208
4517 y(b)r(e)i(within)g(4\045)f(of)h(the)g(p)r(erformance)e(of)i(a)f
(true)h(one-cycle)e(4-w)n(a)n(y)g(set-asso)r(ciativ)n(e)f(cac)n(he)3105
4486 y Fg(7)3141 4517 y Fo(.)0 4683 y(Although)32 b(a)g(32-w)n(a)n(y)d
(set-asso)r(ciativ)n(e)h(cac)n(he)h(w)n(as)g(initially)h(considered,,)g
(the)h(authors)d(claimed)i(that)g(reducing)g(asso-)0
4782 y(ciativit)n(y)c(degree)g(to)h(four)f(and)h(using)f(the)h
(optimistic)g(MR)n(U)h(p)r(olicy)e(dramatically)g(reduce)g(the)h(cac)n
(he)f(hit)h(time)h(in)f(the)0 4882 y(range)d(of)i(30-35\045.)125
4981 y(Using)35 b(optimistic)i(execution)f(on)f(a)h(direct-mapp)r(ed)g
(cac)n(he)f(and)h(on)g(a)g(set-asso)r(ciativ)n(e)e(\(or)h(sk)n(ew)n
(ed-asso)r(ciativ)n(e\))0 5081 y(cac)n(he)27 b(seem)g(to)h(lead)f(to)g
(v)n(ery)g(close)g(cac)n(he)f(hit)i(times.)p 0 5150 1560
4 v 92 5204 a Fd(6)127 5227 y Fm(2)c(\045)f(w)n(as)h(rep)r(orted)g(b)n
(y)g(Hill)e([6])92 5283 y Fd(7)127 5307 y Fm(considering)i(a)g(constan)
n(t)h(cycle)p eop
%%Page: 15 16
15 15 bop 0 -208 a Fj(5)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)i(AND)g(VIR)-7 b(TUAL)29 b(MEMOR)-7 b(Y)1303
b Fo(15)1005 0 y
 14917438 14917438 0 0 35456368 35456368 startTexFig
 1005 0 a
%%BeginDocument: /arch_dd/seznec/NEWCACHE/clock60.ps
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Output produced for inclusion in another document.
% This file will not work properly if sent directly to a printer.
%
% Rotation and centering are turned off for inclusion in a document
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
() 4488 8856 3 just-string
200 /Times-Roman choose-font
(Processor P1) 6996 8104 2 just-string
(Processor P2) 6996 7812 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6996 8136 moveto
  8316 8136 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6996 7844 moveto
  8316 7844 lineto
stroke
(Processor clock \(ns\)) 90 8496 2 just-string
(ns per instruction) 8886 380 5 just-string
(2.50) 860 642 5 just-string
(3.00) 860 983 5 just-string
(3.50) 860 1324 5 just-string
(4.00) 860 1664 5 just-string
(4.50) 860 2005 5 just-string
(5.00) 860 2346 5 just-string
(5.50) 860 2686 5 just-string
(6.00) 860 3027 5 just-string
(6.50) 860 3368 5 just-string
(7.00) 860 3709 5 just-string
(7.50) 860 4049 5 just-string
(8.00) 860 4390 5 just-string
(8.50) 860 4731 5 just-string
(9.00) 860 5071 5 just-string
(9.50) 860 5412 5 just-string
(10.00) 860 5753 5 just-string
(10.50) 860 6093 5 just-string
(11.00) 860 6434 5 just-string
(11.50) 860 6775 5 just-string
(12.00) 860 7116 5 just-string
(12.50) 860 7456 5 just-string
(13.00) 860 7797 5 just-string
(6.00) 1762 90 7 just-string
(8.00) 2845 90 7 just-string
(10.00) 3928 90 7 just-string
(12.00) 5011 90 7 just-string
(14.00) 6094 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 642 moveto
  6906 642 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 983 moveto
  6906 983 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1324 moveto
  6906 1324 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1664 moveto
  6906 1664 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2005 moveto
  6906 2005 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2346 moveto
  6906 2346 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2686 moveto
  6906 2686 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3027 moveto
  6906 3027 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3368 moveto
  6906 3368 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3709 moveto
  6906 3709 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4049 moveto
  6906 4049 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4390 moveto
  6906 4390 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4731 moveto
  6906 4731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5071 moveto
  6906 5071 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5412 moveto
  6906 5412 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5753 moveto
  6906 5753 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6093 moveto
  6906 6093 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6434 moveto
  6906 6434 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6775 moveto
  6906 6775 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7116 moveto
  6906 7116 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7456 moveto
  6906 7456 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7797 moveto
  6906 7797 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1762 8106 moveto
  1762 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2845 8106 moveto
  2845 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3928 8106 moveto
  3928 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5011 8106 moveto
  5011 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6094 8106 moveto
  6094 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 8106 moveto
  950 380 lineto
  6906 380 lineto
  6906 8106 lineto
  950 8106 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1221 731 moveto
  3928 3815 lineto
  6635 6899 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1221 1342 moveto
  3928 4549 lineto
  6635 7755 lineto
stroke
% End of xgraph output
%%EndDocument

 endTexFig
 579 2072 a Fo(Figure)27 b(21:)36 b(Comparing)26 b(P1)h(and)g(P2)g(b)r
(oth)h(connected)g(with)g(a)f(second)g(lev)n(el)g(cac)n(he)125
2338 y(When)33 b(using)g(a)g(sk)n(ew)n(ed-asso)r(ciativ)n(e)c(asso)r
(ciativ)n(e)i(cac)n(he,)j(the)f(\(pseudo\))h(Most)e(Recen)n(tly)h(Used)
h(data)e(is)h(selected.)0 2437 y(W)-7 b(e)31 b(assume)e(that)i(a)f
(miss)g(on)g(pseudo)g(MR)n(U)g(region)g(whic)n(h)g(hits)g(in)h(the)g
(other)e(cac)n(he)h(bank)g(costs)f(one)h(stall)g(cycle)g(on)0
2537 y(the)e(pro)r(cessor)506 2507 y Fg(8)544 2537 y
Fo(.)125 2637 y(Notice)f(that,)g(on)g(a)g(four-w)n(a)n(y)e(set-asso)r
(ciativ)n(e)f(cac)n(he,)j(the)g(hit)h(ratio)e(on)g(the)i(MR)n(U)f
(region)f(corresp)r(onds)f(to)i(the)h(hit)0 2736 y(ratio)h(on)h(a)f
(direct-mapp)r(ed)h(cac)n(he)f(whic)n(h)h(size)g(is)g(only)f(the)i
(fourth)f(of)g(the)g(original)f(cac)n(he)g(size,)h(while)g(on)g(a)g(t)n
(w)n(o-w)n(a)n(y)0 2836 y(sk)n(ew)n(ed-asso)r(ciativ)n(e)22
b(cac)n(he,)i(this)i(hit)f(ratio)f(corresp)r(onds)f(appro)n(ximately)g
(to)i(the)g(hit)h(ratio)e(on)h(a)f(direct-mapp)r(ed)h(cac)n(he)0
2935 y(whic)n(h)33 b(size)f(is)h(half)f(of)h(the)g(original)e(cac)n(he)
h(size.)52 b(There)32 b(a)g(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-asso)r
(ciativ)n(e)g(cac)n(he)h(will)i(ac)n(hiev)n(e)f(b)r(etter)0
3035 y(p)r(erformance)27 b(than)g(a)g(four-w)n(a)n(y)f(set-asso)r
(ciativ)n(e)f(cac)n(he.)125 3135 y(In)36 b(Figure)f(22,)j(w)n(e)d
(compare)g(the)h(clo)r(c)n(ks)g(needed)g(on)g(the)g(h)n(yp)r(othetic)g
(pro)r(cessors)e(P1)h(and)h(P2)f(for)h(ac)n(hieving)e(a)0
3234 y(constan)n(t)27 b(p)r(erformance,)f(but)j(here)e(w)n(e)g(assume)g
(optimistic)h(execution)f(on)g(b)r(oth)h(pro)r(cessors.)125
3334 y(P)n(erformance)d(of)i(pro)r(cessor)f(P1)h(and)g(p)r(erformance)f
(of)i(pro)r(cessor)d(P2)i(are)g(quite)h(close:)208 3500
y(With)i(a)e(8)h(ns)g(clo)r(c)n(k,)g(pro)r(cessor)e(P2)h(ac)n(hiev)n
(es)f(one)i(instruction)g(p)r(er)g(10)f(ns,)i(while)f(pro)r(cessor)e
(P1)h(ac)n(hiev)n(es)208 3600 y(this)f(p)r(erformance)g(with)h(a)f(7.2)
g(ns)h(clo)r(c)n(k.)125 3766 y(As,)c(cac)n(he)g(hit)g(times)h(for)e
(the)i(t)n(w)n(o)e(pro)r(cessors)f(w)n(ould)i(b)r(e)g(in)g(a)g(v)n(ery)
f(few)i(p)r(er)f(cen)n(t)g(\(ma)n(y)f(b)r(e)i(5)f(\045\),)h(using)f(a)g
(t)n(w)n(o-w)n(a)n(y)0 3865 y(sk)n(ew)n(ed)j(asso)r(ciativ)n(e)e(cac)n
(he)i(w)n(ould)g(lead)g(to)h(sligh)n(tly)f(b)r(etter)h(p)r(erformance.)
0 4140 y Fi(5)135 b(Sk)l(ew)l(ed-asso)t(ciativ)l(e)47
b(cac)l(hes)f(and)e(virtual)i(memory)0 4338 y Fp(5.1)112
b(Virtual)36 b(indexing)g(or)i(ph)m(ysical)e(indexing)0
4491 y Fo(As)f(already)f(men)n(tionned,)j(cac)n(he)d(hit)h(time)h(is)f
(one)f(of)h(the)g(critical)g(path)g(in)g(the)g(micropro)r(cessor.)57
b(Cac)n(hes)33 b(ma)n(y)i(b)r(e)0 4591 y(virtually)f(or)h(ph)n
(ysically)f(indexed.)59 b(When)36 b(sharing)e(pages)g(b)r(et)n(w)n(een)
h(pro)r(cesses,)h(ph)n(ysical)e(addressing)f(of)i(the)h(cac)n(he)0
4691 y(allo)n(ws)28 b(to)g(a)n(v)n(oid)g(m)n(ultiple)h(copies)g(of)g
(the)g(same)f(line)h(of)g(data)g(in)g(the)g(cac)n(he)f(and)h(then)h
(the)f(data)f(in)i(the)f(cac)n(he)f(alw)n(a)n(ys)0 4790
y(remain)j(coheren)n(t;)h(ph)n(ysical)e(addressing)g(of)h(the)h(cac)n
(he)f(ma)n(y)f(b)r(e)i(considered)e(as)h(v)n(ery)f(desirable.)47
b(Unfortunately)-7 b(,)33 b(for)0 4890 y(ph)n(ysically)26
b(indexed)h(cac)n(hes,)f(the)i(virtual-to-ph)n(ysical)c(address)i
(translation)g(m)n(ust)h(precede)f(the)i(cac)n(he)e(indexing,)h(th)n
(us)0 4990 y(increasing)f(the)i(o)n(v)n(erall)e(cac)n(he)g(hit)i(time.)
p 0 5059 1560 4 v 92 5113 a Fd(8)127 5136 y Fm(This)e(assumption)f(is)h
(quite)h(p)r(essimistic,)d(when)j(the)g(read)f(data)h(\(or)g
(instruction\))g(is)e(not)i(used)g(directly)f(b)n(y)g(the)h(next)h
(instruction,)f(no)0 5215 y(cycle)d(is)f(lost)p eop
%%Page: 16 17
16 16 bop 0 -208 a Fj(5)83 b(SKEWED-ASSOCIA)-7 b(TIVE)26
b(CA)n(CHES)i(AND)g(VIR)-7 b(TUAL)29 b(MEMOR)-7 b(Y)1303
b Fo(16)1005 0 y
 14917438 14917438 0 0 35456368 35456368 startTexFig
 1005 0 a
%%BeginDocument: /arch_dd/seznec/NEWCACHE/clock60mru.ps
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Output produced for inclusion in another document.
% This file will not work properly if sent directly to a printer.
%
% Rotation and centering are turned off for inclusion in a document
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
() 4488 8856 3 just-string
200 /Times-Roman choose-font
(Processor P1) 6996 8104 2 just-string
(Processor P2) 6996 7812 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  6996 8136 moveto
  8316 8136 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  6996 7844 moveto
  8316 7844 lineto
stroke
(Processor clock \(ns\)) 90 8496 2 just-string
(ns per instruction) 8886 380 5 just-string
(2.50) 860 638 5 just-string
(3.00) 860 994 5 just-string
(3.50) 860 1350 5 just-string
(4.00) 860 1706 5 just-string
(4.50) 860 2062 5 just-string
(5.00) 860 2418 5 just-string
(5.50) 860 2774 5 just-string
(6.00) 860 3130 5 just-string
(6.50) 860 3486 5 just-string
(7.00) 860 3842 5 just-string
(7.50) 860 4198 5 just-string
(8.00) 860 4554 5 just-string
(8.50) 860 4910 5 just-string
(9.00) 860 5266 5 just-string
(9.50) 860 5622 5 just-string
(10.00) 860 5978 5 just-string
(10.50) 860 6334 5 just-string
(11.00) 860 6690 5 just-string
(11.50) 860 7046 5 just-string
(12.00) 860 7402 5 just-string
(12.50) 860 7758 5 just-string
(6.00) 1762 90 7 just-string
(8.00) 2845 90 7 just-string
(10.00) 3928 90 7 just-string
(12.00) 5011 90 7 just-string
(14.00) 6094 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 638 moveto
  6906 638 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 994 moveto
  6906 994 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1350 moveto
  6906 1350 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1706 moveto
  6906 1706 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2062 moveto
  6906 2062 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2418 moveto
  6906 2418 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2774 moveto
  6906 2774 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3130 moveto
  6906 3130 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3486 moveto
  6906 3486 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3842 moveto
  6906 3842 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4198 moveto
  6906 4198 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4554 moveto
  6906 4554 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4910 moveto
  6906 4910 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5266 moveto
  6906 5266 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5622 moveto
  6906 5622 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5978 moveto
  6906 5978 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6334 moveto
  6906 6334 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6690 moveto
  6906 6690 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7046 moveto
  6906 7046 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7402 moveto
  6906 7402 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7758 moveto
  6906 7758 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1762 8106 moveto
  1762 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2845 8106 moveto
  2845 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3928 8106 moveto
  3928 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5011 8106 moveto
  5011 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6094 8106 moveto
  6094 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 8106 moveto
  950 380 lineto
  6906 380 lineto
  6906 8106 lineto
  950 8106 lineto
stroke
14 setlinewidth
[] 0 setdash
newpath
  1221 731 moveto
  3928 3954 lineto
  6635 7176 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  1221 1284 moveto
  3928 4519 lineto
  6635 7755 lineto
stroke
% End of xgraph output
%%EndDocument

 endTexFig
 333 2072 a Fo(Figure)27 b(22:)36 b(Optimistic)28 b(execution)g(on)f
(P1)g(and)g(P2,)g(b)r(oth)h(connected)f(with)h(a)g(second)e(lev)n(el)i
(cac)n(he)125 2338 y(Virtually)33 b(indexed)i(cac)n(hes)e(are)g(used)h
(in)g(HP7xxx,)h(MIPS)f(R4000)e(for)h(example.)56 b(When)35
b(the)g(cac)n(he)e(is)h(virtually)0 2437 y(indexed,)29
b(using)g(a)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(he)i(in)h(place)f
(of)h(a)f(set-asso)r(ciativ)n(e)f(cac)n(he)h(will)h(not)g(lengh)n(ten)f
(the)i(cac)n(he)e(hit)0 2537 y(time.)0 2753 y Fe(5.1.1)94
b(An)32 b(arti\014ce)g(for)g(ph)m(ysical)g(indexed)g(cac)m(hes)0
2906 y Fo(Ph)n(ysically)21 b(indexed)i(cac)n(hes)f(are)g(used)h(in)g
(Dec)h(21064,)d(TI)i(Sup)r(erSparc,)g(IBM)g(P)n(o)n(w)n(er)e(for)h
(example.)35 b(When)24 b(the)f(virtual-)0 3006 y(to-ph)n(ysical)30
b(address)g(translation)g(e\013ectiv)n(ely)h(precedes)g(the)h(cac)n(he)
e(indexing,)i(using)f(a)g(sk)n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(he)j
(in)0 3105 y(place)c(of)h(a)f(set-asso)r(ciativ)n(e)e(cac)n(he)i(w)n
(ould)g(not)h(lengh)n(ten)f(the)h(o)n(v)n(erall)d(hit)k(time.)125
3205 y(But,)g(on)f(the)h(Dec)g(21064)d(and)i(the)h(TI)g(Sup)r(erSparc,)
f(an)g(arti\014ce)g(has)g(b)r(een)h(used)f(in)h(order)e(to)i(allo)n(w)e
(to)h(execute)h(in)0 3304 y(parallel)24 b(the)h(indexing)f(of)h(the)g
(cac)n(he)f(and)g(the)h(virtual-to-ph)n(ysical)e(address)g
(translation.)35 b(The)25 b(size)f(of)h(the)g(cac)n(he)e(bank)0
3404 y(is)k(c)n(hosen)f(equal)h(to)g(\(or)g(inferior)f(than\))i(the)f
(minim)n(um)h(size)f(of)g(a)g(page)f(of)i(the)f(virtual)g(memory;)g(on)
f(a)h(direct-mapp)r(ed)0 3504 y(or)34 b(a)g(set-asso)r(ciativ)n(e)e
(cac)n(he,)k(the)f(bits)g(required)e(for)h(indexing)h(the)g(cac)n(he)e
(are)h(not)g(translated:)50 b(virtual-to-ph)n(ysical)0
3603 y(address)26 b(translation)h(and)g(cac)n(he)g(indexing)g(ma)n(y)g
(b)r(e)h(executed)g(in)g(parallel.)125 3703 y(Suc)n(h)i(an)f
(arti\014ce)h(cannot)f(b)r(e)i(used)f(for)g(sk)n(ew)n(ed-asso)r(ciativ)
n(e)c(cac)n(hes:)41 b(in)30 b(order)f(to)h(enable)g(in)n(ter-bank)f
(disp)r(ersion,)0 3803 y(some)h(extra)f(bits)h(of)g(th)h(address)e(are)
g(used)h(for)g(computing)g(the)h(distinct)g(mapping)e(functions)i(for)f
(the)g(distinct)h(cac)n(he)0 3902 y(banks)g(e.g.)48 b(for)32
b(computing)f(the)h(sk)n(ewing)f(functions)g Ff(F)1836
3914 y Fg(0)1906 3902 y Fo(and)g Ff(F)2124 3914 y Fg(1)2194
3902 y Fo(prop)r(osed)f(in)i(section)f(2.4)g(for)g(a)g(8Kb)n(ytes)g(t)n
(w)n(o-w)n(a)n(y)0 4002 y(sk)n(ew)n(ed-asso)r(ciativ)n(e)g(cac)n(he)i
(with)h(a)f(16)g(b)n(ytes)h(cac)n(he)f(line,)j(the)e(20)f(lo)n(w)n(est)
g(signi\014can)n(t)g(bits)h(of)g(the)g(address)f(m)n(ust)h(b)r(e)0
4101 y(kno)n(wn!)0 4317 y Fe(5.1.2)94 b(Uncomplete)30
b(address)i(translation)0 4470 y Fo(Some)e(recen)n(t)g(w)n(orks)e([13)o
(,)j(12)o(])f(ha)n(v)n(e)f(sho)n(wn)h(that,)h(when)g(the)f(page)g(allo)
r(cation)f(algorithm)g(is)h(implemen)n(ted)h(in)g(suc)n(h)e(a)0
4570 y(w)n(a)n(y)24 b(that)h(virtual-to-ph)n(ysical)e(address)h
(translation)g(do)r(es)h(not)g(a\013ect)g(the)h(lo)n(w)n(est)e
(signi\014can)n(t)g(bits)i(of)f(the)g(virtual)g(page)0
4670 y(n)n(um)n(b)r(er,)j(the)h(miss)f(ratio)f(on)h(a)g(ph)n(ysically)f
(indexed)h(cac)n(he)f(is)i(lo)n(w)n(er)d(than)i(when)h(usual)f(page)f
(allo)r(cation)g(algorithm)g(is)0 4769 y(used.)125 4869
y(This)c(result)g(holds)g(for)g(medium)h(range)e(primary)g(cac)n(hes)h
(\(16)f(KB)h(to)h(512)e(KB\))h([13)o(],)h(as)f(w)n(ell)g(as)g(for)g
(large)f(secondary)0 4969 y(cac)n(hes)k([12)o(].)37 b(On)27
b(the)h(other)f(hand,)h(a)f(to)r(o)g(large)f(n)n(um)n(b)r(er)h(of)g(un)
n(translated)g(bits)g(w)n(ould)g(lead)g(to)h(a)f(signi\014can)n(t)f
(increase)0 5068 y(of)g(page)g(faults,)h(particularly)e(on)h(lo)n
(w-end)g(micropro)r(cessor)d(systems;)k(e.g.)36 b(on)26
b(a)g(8)g(Megab)n(yte)f(system,)i(ha)n(ving)e(20)h(bits)0
5168 y(un)n(translated)h(is)g(not)h(realistic.)p eop
%%Page: 17 18
17 17 bop 0 -208 a Fj(6)83 b(CONCLUSION)3128 b Fo(17)125
83 y(But)31 b(k)n(eeping)g(15)g(or)g(ev)n(en)g(18)f(bits)i(un)n
(translated,)g(ev)n(en)f(on)g(a)g(lo)n(w-end)g(system)g(w)n(ould)g(not)
h(lead)f(to)h(a)f(signi\014can)n(t)0 183 y(increase)26
b(of)i(the)g(n)n(um)n(b)r(er)f(of)h(page)e(faults:)208
332 y(Let)h(us)h(consider)e(a)i(8)f(Megab)n(ytes)f(ph)n(ysical)h
(memory)g(and)g(a)g(virtual)g(page)g(size)g(of)h(4Kb)n(ytes,)208
432 y(with)g(the)h(usual)f(page)f(allo)r(cation,)g(the)i(ph)n(ysical)e
(memory)g(acts)h(as)g(a)f(2048)g(lines)h(fully-asso)r(ciativ)n(e)e(cac)
n(he,)208 532 y(while)37 b(if)i(the)f(15)f(lo)n(w)n(est)f(signi\014can)
n(t)h(bits)h(m)n(ust)g(not)g(b)r(e)g(a\013ected)g(b)n(y)f(the)h
(virtual-to-ph)n(ysical)e(address)208 631 y(translation,)29
b(it)i(w)n(ould)f(act)g(as)g(a)g(256-w)n(a)n(y)d(set-asso)r(ciativ)n(e)
h(cac)n(he.)45 b(It)30 b(is)h(w)n(ell)f(kno)n(wn)f(that)i(the)g(b)r
(eha)n(vior)208 731 y(of)c(these)h(t)n(w)n(o)f(structures)f(of)i(cac)n
(hes)e(are)h(v)n(ery)f(close!)0 960 y Fp(5.2)112 b(P)m(artial)36
b(sk)m(ewing)0 1113 y Fo(In)27 b(this)g(section,)f(w)n(e)h(assume)f
(that)h(the)g(page)f(allo)r(cation)f(algorithm)h(is)g(implemen)n(ted)i
(in)f(suc)n(h)f(a)g(w)n(a)n(y)g(that)h(it)g(do)r(es)f(not)0
1213 y(a\013ect)i(a)f(few)h(of)f(the)h(lo)n(w)n(est)f(signi\014can)n(t)
g(bits)h(of)f(the)h(page)f(n)n(um)n(b)r(er.)125 1312
y(If)c(the)g(computation)g(of)f(mapping)h(functions)g(on)g(the)g(cac)n
(he)f(banks)g(uses)g(only)h(the)g(un)n(translated)f(address)f(bits,)k
(then)0 1412 y(the)20 b(arti\014ce)f(describ)r(ed)g(in)g(section)g
(5.1.1)f(ma)n(y)h(b)r(e)h(used)f(for)g(executing)g(in)h(parallel)e(the)
i(indexing)f(of)g(a)g(sk)n(ew)n(ed-asso)r(ciativ)n(e)0
1511 y(cac)n(he)27 b(and)g(the)h(virtual-to-ph)n(ysical)d(address)i
(translation.)125 1611 y(In)32 b(this)g(section,)h(w)n(e)f(sho)n(w)f
(that)h(sk)n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(he)i(ma)n(y)g(also)g(p)r
(erform)h(w)n(ell)f(in)i(the)f(case)f(where)h(only)f(a)0
1711 y(limited)d(n)n(um)n(b)r(er)g(of)f(bits)h(are)f(sk)n(ew)n(ed.)0
1923 y Fe(A)j(case)f(study)84 b Fo(Let)25 b(us)h(consider)e(that)i(the)
g(15)f(lo)n(w)n(est)f(signi\014can)n(t)h(bits)h(of)f(the)h(virtual)f
(addresses)f(not)h(translated)g(i.e)0 2023 y(the)j(virtual)f(address)f
(and)i(the)g(ph)n(ysical)f(address)f(are)g(equal)i(mo)r(dulo)f(32K.)125
2122 y(Let)g(us)h(consider)e(the)i(mapping)g(functions)g(de\014ned)g(b)
n(y:)125 2222 y(if)g Ff(X)h Fo(=)23 b(2)429 2192 y Fg(15)498
2222 y Ff(X)567 2234 y Fg(4)623 2222 y Fo(+)18 b(2)748
2192 y Fg(12)818 2222 y Ff(X)887 2234 y Fg(3)942 2222
y Fo(+)g(2)1067 2192 y Fg(9)1104 2222 y Ff(X)1173 2234
y Fg(2)1229 2222 y Fo(+)g(2)1354 2192 y Fg(4)1390 2222
y Ff(X)1459 2234 y Fg(1)1515 2222 y Fo(+)g Ff(X)1667
2234 y Fg(0)1732 2222 y Fo(then)993 2375 y Ff(f)1034
2387 y Fg(0)1094 2375 y Fo(:)83 b Ff(S)775 b Fb(\000)-14
b(!)83 b(f)p Fo(0)p Ff(;)14 b(::;)g Fo(4095)p Fb(g)1200
2474 y Fo(\()p Ff(X)1301 2486 y Fg(4)1339 2474 y Ff(;)g(X)1445
2486 y Fg(3)1482 2474 y Ff(;)g(X)1588 2486 y Fg(2)1625
2474 y Ff(;)g(X)1731 2486 y Fg(1)1768 2474 y Ff(;)g(X)1874
2486 y Fg(0)1911 2474 y Fo(\))83 b Fb(\000)-14 b(!)83
b Fo(\()p Ff(X)2344 2486 y Fg(2)2381 2474 y Ff(;)14 b(X)2487
2486 y Fg(1)2524 2474 y Ff(;)g(X)2630 2486 y Fg(0)2667
2474 y Fo(\))993 2674 y Ff(f)1034 2686 y Fg(1)1094 2674
y Fo(:)83 b Ff(S)775 b Fb(\000)-14 b(!)83 b(f)p Fo(0)p
Ff(;)14 b(::;)g Fo(4095)p Fb(g)1200 2773 y Fo(\()p Ff(X)1301
2785 y Fg(4)1339 2773 y Ff(;)g(X)1445 2785 y Fg(3)1482
2773 y Ff(;)g(X)1588 2785 y Fg(2)1625 2773 y Ff(;)g(X)1731
2785 y Fg(1)1768 2773 y Ff(;)g(X)1874 2785 y Fg(0)1911
2773 y Fo(\))83 b Fb(\000)-14 b(!)83 b Fo(\()p Ff(X)2344
2785 y Fg(3)2399 2773 y Fb(\010)18 b Ff(X)2551 2785 y
Fg(2)2588 2773 y Ff(;)c(X)2694 2785 y Fg(1)2731 2773
y Ff(;)g(X)2837 2785 y Fg(0)2874 2773 y Fo(\))0 3031
y Ff(f)41 3043 y Fg(0)114 3031 y Fo(is)35 b(the)h(usual)f(bit)h
(truncation;)k Ff(f)1201 3043 y Fg(1)1273 3031 y Fo(do)r(es)35
b(not)h(c)n(hange)e(the)i(nine)g(lo)n(w)n(est)f(signi\014can)n(t)g
(bits,)i(and)f(the)g(three)f(highest)0 3131 y(signi\014can)n(t)27
b(bits)h(are)e(simply)i(obtained)f(a)g(X)n(OR.)125 3231
y Ff(f)166 3243 y Fg(0)230 3231 y Fo(and)h Ff(f)433 3243
y Fg(1)497 3231 y Fo(ma)n(y)f(b)r(e)h(used)g(as)e(mapping)i(functions)g
(for)f(a)g(t)n(w)n(o-w)n(a)n(y)e(8Kb)n(ytes)h(sk)n(ew)n(ed-asso)r
(ciativ)n(e)f(cac)n(he.)125 3330 y(Notice)i(that)h(when)f(using)g
(these)h(functions,)g(the)f(in)n(ter-bank)g(disp)r(ersion)f(of)i(data)f
(will)g(only)g(b)r(e)h(partial:)36 b(the)28 b(set)f(of)0
3430 y(data)g(that)h(can)f(b)r(e)h(mapp)r(ed)f(\(b)n(y)h(mapping)f
(function)h Ff(f)1804 3442 y Fg(0)1841 3430 y Fo(\))g(on)n(to)f(a)g
(giv)n(en)f(line)i(in)g(bank)f(0)g(is)g(distributed)h(among)e(only)h(8)
0 3529 y(lines)h(on)f(cac)n(he)g(bank)g(1)g(b)n(y)g(mapping)h(function)
g Ff(f)1626 3541 y Fg(1)1663 3529 y Fo(.)125 3629 y(Sim)n(ulations)18
b(w)n(ere)f(conducted)i(using)f(these)h(sk)n(ewing)e(functions)i(for)f
(8K)g(b)n(ytes)g(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)n(ed-asso)r(ciativ)n(e)f
(cac)n(hes;)0 3729 y(miss)32 b(ratios)e(are)h(rep)r(orted)g(in)i
(\014gure)e(25.)49 b(The)32 b(miss)g(ratios)e(obtained)i(when)g(using)f
(this)i(partial)e(sk)n(ewing)g(are)g(in)h(the)0 3828
y(same)27 b(range)f(as)h(the)h(miss)g(ratios)e(observ)n(ed)g(when)i
(using)f(the)h(complete)f(sk)n(ewing)g(describ)r(ed)g(in)h(section)f
(2.1.)125 3928 y(Our)f(sim)n(ulation)h(results)f(tend)i(to)f(sho)n(w)f
(that)i(there)f(is)g(no)f(signi\014cativ)n(e)g(hit)i(ratio)e(impro)n(v)
n(emen)n(t)g(when)i(increasing)0 4028 y(the)e(in)n(ter-bank)e(disp)r
(ersion)h(degree)f(o)n(v)n(er)g(8)h(on)g(a)g(t)n(w)n(o-w)n(a)n(y)e(sk)n
(ew)n(ed-asso)r(ciativ)n(e)f(cac)n(he)j(as)g(there)g(is)g(no)g
(signi\014cativ)n(e)g(hit)0 4127 y(ratio)i(impro)n(v)n(emen)n(t)f(when)
i(increasing)e(the)i(asso)r(ciativit)n(y)e(degree)g(o)n(v)n(er)g(4)h
(or)g(8)g(on)h(a)f(set-asso)r(ciativ)n(e)e(cac)n(he.)125
4227 y(This)30 b(result)g(asso)r(ciated)f(with)i(the)g(results)f
(presen)n(ted)g(in)g([13)o(,)h(12)o(])f(ma)n(y)g(encourage)f(micropro)r
(cessor)e(designers)i(to)0 4326 y(implemen)n(t)23 b(ph)n(ysically)f
(indexed)h(sk)n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(hes)h(and)i(to)g(imp)
r(ose)f(implemen)n(ting)h(op)r(erating)f(systems)h(with)0
4426 y(page)k(allo)r(cation)f(algorithms)g(resp)r(ecting)h(the)h(15)f
(or)g(ma)n(y)g(b)r(e)h(18)e(lo)n(w)n(est)h(signi\014can)n(t)g(bits)h
(of)f(the)h(virtual)f(address.)0 4697 y Fi(6)135 b(Conclusion)0
4879 y Fo(W)-7 b(e)41 b(ha)n(v)n(e)e(in)n(tro)r(duced)i(a)f(new)g(m)n
(ulti-bank)h(cac)n(he)e(organization:)61 b(the)41 b(sk)n(ew)n(ed-asso)r
(ciativ)n(e)c(cac)n(he.)75 b(The)41 b(t)n(w)n(o-w)n(a)n(y)0
4979 y(sk)n(ew)n(ed-asso)r(ciativ)n(e)20 b(cac)n(he)j(has)g(the)h(same)
f(hardw)n(are)f(complexit)n(y)h(as)g(a)g(t)n(w)n(o-w)n(a)n(y)f
(set-asso)r(ciativ)n(e,)g(but)i(exhibits)g(a)f(miss)0
5078 y(ratio)k(close)f(to)i(the)g(miss)f(ratio)g(of)g(a)h(four-w)n(a)n
(y)d(set-asso)r(ciativ)n(e)g(cac)n(he:)208 5240 y(A)k(t)n(w)n(o-w)n(a)n
(y)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(he)j(m)n(ust)g(b)r(e)h
(preferred)f(to)g(a)g(t)n(w)n(o-w)n(a)n(y)f(or)g(four-w)n(a)n(y)g(set)h
(asso)r(ciativ)n(e)208 5340 y(cac)n(he.)p eop
%%Page: 18 19
18 18 bop 0 -208 a Fj(REFERENCES)3245 b Fo(18)p 0 3 4012
4 v 0 1326 4 1323 v 1181 102 1650 4 v 1179 194 4 92 v
1231 166 a Fk(Organization)p 2439 194 V 963 w(Miss)p
2829 194 V 1181 197 1650 4 v 1181 217 V 1179 308 4 92
v 1231 281 a(2-w)n(a)n(y)26 b(partial)g(sk)n(ew)n(ed-asso)r(ciativ)n(e)
p 2439 308 V 179 w(0.024503)p 2829 308 V 1181 312 1650
4 v 1179 403 4 92 v 1231 376 a(2-w)n(a)n(y)g(complete)f(sk)n(ew)n
(ed-asso)r(ciativ)n(e)p 2439 403 V 102 w(0.024287)p 2829
403 V 1181 406 1650 4 v 1364 638 a Fo(Figure)i(23:)36
b(uni\014ed)28 b(8192)e(b)n(ytes)h(cac)n(he)p 1181 749
V 1179 840 4 92 v 1231 813 a Fk(Organization)p 2439 840
V 963 w(Miss)p 2829 840 V 1181 844 1650 4 v 1181 864
V 1179 955 4 92 v 1231 928 a(2-w)n(a)n(y)f(partial)g(sk)n(ew)n(ed-asso)
r(ciativ)n(e)p 2439 955 V 179 w(0.020891)p 2829 955 V
1181 958 1650 4 v 1179 1050 4 92 v 1231 1022 a(2-w)n(a)n(y)g(complete)f
(sk)n(ew)n(ed-asso)r(ciativ)n(e)p 2439 1050 V 102 w(0.020865)p
2829 1050 V 1181 1053 1650 4 v 1313 1285 a Fo(Figure)i(24:)36
b(t)n(w)n(o)26 b(8192)g(b)n(ytes)h(split)h(cac)n(hes)p
4008 1326 4 1323 v 0 1329 4012 4 v 621 1402 a(Figure)f(25:)36
b(Miss)28 b(ratios)e(for)h(partial)g(and)g(complete)h(sk)n(ew)n
(ed-asso)r(ciativ)n(e)c(cac)n(hes)125 1667 y(T)-7 b(o)r(da)n(y)g(,)31
b(micropro)r(cessors)c(are)j(built)i(with)g(relativ)n(ely)d(small)i
(on-c)n(hip)f(cac)n(hes.)46 b(In)32 b(1992,)e(8)g(Kb)n(ytes)h(is)g(the)
g(curren)n(t)0 1767 y(size)38 b(for)g(on-c)n(hip)f(cac)n(hes.)68
b(F)-7 b(or)37 b(this)i(size,)h(miss)e(ratios)f(on)h(direct-mapp)r(ed)g
(cac)n(hes)f(are)g(signi\014can)n(tly)g(higher)h(than)0
1867 y(on)d(asso)r(ciativ)n(e)e(cac)n(hes.)58 b(In)36
b(section)e(4,)j(w)n(e)e(ha)n(v)n(e)e(p)r(oin)n(ted)j(out)f(that,)i
(for)e(lo)n(w-end)f(micropro)r(cessor)e(systems,)37 b(some)0
1966 y(asso)r(ciativit)n(y)21 b(on)h(on-c)n(hip)g(cac)n(he\(s\))g(will)
h(enhance)f(p)r(erformance:)33 b(using)23 b(direct-mapp)r(ed)f(cac)n
(he)g(ma)n(y)f(allo)n(w)h(to)g(increase)0 2066 y(clo)r(c)n(k)32
b(frequency)-7 b(,)33 b(but)g(when)g(the)g(miss)f(p)r(enalt)n(y)h(b)r
(ecomes)f(high,)i(using)e(a)g(sk)n(ew)n(ed)f(asso)r(ciativ)n(e)g(cac)n
(he)h(with)h(a)f(slo)n(w)n(er)0 2165 y(clo)r(c)n(k)27
b(will)h(lead)f(to)g(a)h(b)r(etter)g(o)n(v)n(er)d(all)j(system)f(p)r
(erformance.)125 2265 y(P)n(eak)g(p)r(erformance)h(on)g(high-end)h
(systems)f(is)h(a)f(ma)5 b(jor)28 b(commercial)g(argumen)n(t)f(for)i
(micropro)r(cessor)d(v)n(endors.)39 b(In)0 2365 y(high-end)25
b(systems,)g(large)f(v)n(ery)g(fast)h(second)f(lev)n(el)h(cac)n(hes)f
(are)g(used.)36 b(P)n(erformance)23 b(in)i(these)g(systems)g(highly)g
(dep)r(ends)0 2464 y(on)k(the)h(clo)r(c)n(k)f(frequency)-7
b(.)43 b(In)29 b(order)g(to)g(reduce)g(the)h(clo)r(c)n(k)f(frequency)-7
b(,)30 b(the)g(cac)n(he)f(access)f(ma)n(y)h(b)r(e)h(pip)r(elined)g(\()g
(e.g.)43 b(in)0 2564 y(MIPS)24 b(R4000)f([10)o(])i(or)e(in)i(DEC)g
(21064[4)m(]\))g(and)f(optimistic)h(execution)f(ma)n(y)g(b)r(e)h(used)f
(\(e.g.)36 b(MIPS)24 b(R4000\).)35 b(Optimistic)0 2664
y(execution)22 b(on)f(sk)n(ew)n(ed-asso)r(ciativ)n(e)e(cac)n(hes)h
(will)i(allo)n(w)f(to)h(reac)n(h)e(a)i(clo)r(c)n(k)f(frequency)g
(within)i(a)e(few)h(p)r(er)g(cen)n(t)g(of)g(the)g(clo)r(c)n(k)0
2763 y(reac)n(hable)29 b(when)h(using)g(direct-mapp)r(ed)g(cac)n(hes.)
44 b(In)31 b(section)f(4.2,)g(w)n(e)g(ha)n(v)n(e)f(p)r(oin)n(ted)i
(that)g(using)f(suc)n(h)g(an)g(optimistic)0 2863 y(execution)d(will)h
(lead)f(to)h(sligh)n(tly)f(b)r(etter)h(p)r(erformance)e(when)i(using)f
(a)h(t)n(w)n(o-w)n(a)n(y)d(sk)n(ew)n(ed)h(asso)r(ciativ)n(e)g(cac)n
(he.)125 2962 y(A)n(t)21 b(last,)h(in)f(section)f(5,)i(w)n(e)e(ha)n(v)n
(e)g(sho)n(wn)g(that)h(sk)n(ew)n(ed-asso)r(ciativ)n(e)d(cac)n(hes)h(ma)
n(y)i(b)r(e)g(used)g(for)f(implemen)n(ting)h(ph)n(ysical)0
3062 y(cac)n(hes)26 b(as)h(w)n(ell)h(as)f(virtual)g(cac)n(hes)f
(without)i(lengh)n(tening)f(the)h(cac)n(he)f(hit)h(time.)125
3162 y(As)35 b(most)h(of)f(the)i(micropro)r(cessor)32
b(c)n(hips)k(are)e(designed)i(to)f(built)i(b)r(oth)f(high-end)f
(micropro)r(cessor)e(systems)i(and)0 3261 y(lo)n(w-end)28
b(micropro)r(cessor)d(systems,)k(using)f(t)n(w)n(o-w)n(a)n(y)e(sk)n(ew)
n(ed-asso)r(ciativ)n(e)f(cac)n(he)j(structure)g(seems)g(a)g(v)n(ery)g
(in)n(teresting)0 3361 y(trade-o\013.)0 3636 y Fi(References)42
3817 y Fo([1])41 b(A.)24 b(Agarw)n(al,)f(M.)h(Horo)n(witz,)g(J.)g
(Hennesy)g(\\Cac)n(he)e(p)r(erformance)h(of)h(op)r(erating)f(systems)h
(and)g(m)n(ultiprogramming)171 3917 y(w)n(orkloads")g(A)n(CM)k(T)-7
b(ransactions)26 b(on)h(Computer)g(Systems,)h(No)n(v.)f(1988)42
4083 y([2])41 b(A.)24 b(Agarw)n(al)d Fh(A)n(nalysis)27
b(of)g(Cache)h(Performanc)l(e)f(for)g(Op)l(er)l(ating)g(Systems)e(and)i
(Multipr)l(o)l(gr)l(amming)p Fo(,)e(Klu)n(w)n(er)e(Aca-)171
4183 y(demic)k(Publishers,)g(1989)42 4349 y([3])41 b(J.H.)29
b(Chang,)g(H.)g(Chao,)g(and)g(K.)f(So)h(\\Cac)n(he)f(Design)h(of)g(A)g
(Sub-Micro)g(CMOS)f(System/370")f(pp208-213,)g(Pro-)171
4448 y(ceedings)g(of)g(the)h(14th)f(In)n(ternational)g(Symp)r(osium)g
(on)h(Computer)f(Arc)n(hitecture)g(\(IEEE-A)n(CM\),)g(Ma)n(y)f(1987.)42
4614 y([4])41 b(\\DECChip)27 b(21064-AA)f(RISC)i(Micropro)r(cessor,)c
(Preliminary)i(Data)i(Sheet")g(Digital)f(Equipmen)n(t)h(Corp)r
(oration,)171 4714 y(1992)42 4880 y([5])41 b(J.L.)e(Hennessy)-7
b(,)42 b(D.A.)e(P)n(atterson)e Fh(Computer)j(A)n(r)l(chite)l(ctur)l(e)e
(a)i(Quantitative)g(Appr)l(o)l(ach)p Fo(,)j(Morgan)37
b(Kaufmann)171 4980 y(Publishers,)26 b(Inc.)i(1990)42
5146 y([6])41 b(M.D.)25 b(Hill,)h(\\Asp)r(ects)e(of)h(Cac)n(he)e
(Memory)h(and)h(Instruction)f(Bu\013er)g(P)n(erformance",)f(Ph.D)i
(Thesis,)f(Univ)n(ersit)n(y)g(of)171 5245 y(Berk)n(eley)-7
b(,)26 b(1987)p eop
%%Page: 19 20
19 19 bop 0 -208 a Fj(REFERENCES)3245 b Fo(19)42 83 y([7])41
b(M.D.)28 b(Hill,)g(\\A)g(case)e(for)h(direct-mapp)r(ed)h(cac)n(hes",)e
(IEEE)g(Computer,)h(Dec)h(1988)42 249 y([8])41 b(M.D.Hill,)f(A.J.)e
(Smith)f(\\Ev)-5 b(aluating)36 b(Asso)r(ciativit)n(y)g(in)i(CPU)e(Cac)n
(hes")g(IEEE)g(T)-7 b(ransactions)35 b(on)i(Computers,)171
349 y(Dec.)28 b(1989)42 515 y([9])41 b(N.P)-7 b(.)19
b(Jouppi,)i(\\Impro)n(ving)d(Direct-Mapp)r(ed)h(Cac)n(he)g(P)n
(erformance)e(b)n(y)j(the)g(addition)f(of)g(a)h(Small)f(F)-7
b(ully-Asso)r(ciativ)n(e)171 614 y(Cac)n(he)27 b(and)h(Prefetc)n(h)f
(Bu\013ers")g(Pro)r(ceedings)f(of)i(the)g(17)2017 584
y Fc(th)2112 614 y Fo(In)n(ternational)f(Symp)r(osium)h(on)g(Computer)g
(Arc)n(hitec-)171 714 y(ture,)f(June)h(1990)0 880 y([10])41
b(G.)28 b(Kane)e Fh(MIPS)k(RISC)g(A)n(r)l(chite)l(ctur)l(e)d
Fo(Pren)n(tice-Hall,)f(1988)0 1046 y([11])41 b(G.)28
b(Kane,)e(J.)i(Heinric)n(h)f Fh(MIPS)j(RISC)g(A)n(r)l(chite)l(ctur)l(e)
d Fo(Pren)n(tice-Hall,)f(1992)0 1212 y([12])41 b(R.Kessler,)30
b(M.)h(Hill)h(\\Miss)e(Reduction)h(in)g(Large)e(Real-Indexed)h(Cac)n
(hes,")g(T)-7 b(ec)n(hnical)31 b(Rep)r(ort)f(No)h(940,)f(Dpt)i(of)171
1312 y(Computer)27 b(Science,)h(Univ)n(ersit)n(y)e(of)i
(Wisconsin-Madison,)e(June)h(90.)0 1478 y([13])41 b(W.L.)23
b(Lync)n(h,)h(B.K.)e(Bra)n(y)-7 b(,)23 b(M.J.)g(Flynn)g(\\The)g
(E\013ect)g(of)g(P)n(age)f(Allo)r(cations)g(on)h(Cac)n(hes")e(Pro)r
(ceedings)h(of)h(MICR)n(O)171 1577 y(25)j(,)i(Decem)n(b)r(er)g(1992)0
1743 y([14])41 b(S.A.)32 b(Przysb)n(ylski)f(\\P)n(erformance-Directed)e
(Memory)i(Hierarc)n(h)n(y)f(design")i(PhD)g(Thesis,)h(Stanford)f(Univ)n
(ersit)n(y)-7 b(,)171 1843 y(1988)0 2009 y([15])41 b(A.J.)28
b(Smith)i(\\A)e(Comparativ)n(e)f(Study)i(of)f(Set)h(Asso)r(ciativ)n(e)e
(Memory)h(Mapping)g(Algorithms)g(and)g(Their)g(Use)h(for)171
2109 y(Cac)n(he)d(and)i(Main)f(Memory")g(IEEE)f(T)-7
b(ransactions)25 b(on)j(Sofw)n(are)e(Engineering,)g(Marc)n(h)h(1978)0
2275 y([16])41 b(A.J.)27 b(Smith)i(\\Cac)n(he)d(memories")g(A)n(CM)i
(Computing)g(Surv)n(eys,)e(Sept.)i(1982)0 2441 y([17])41
b(A.J.)24 b(Smith)i(\\Line)e(\(blo)r(c)n(k\))h(size)f(c)n(hoice)g(for)h
(CPU)f(cac)n(he)g(memories")f(IEEE)g(T)-7 b(ransactions)23
b(on)i(Computers,)g(Sept.)171 2540 y(1987)0 2707 y([18])41
b(SparcSim)27 b(Man)n(ual,)g(SUN)h(Inc,)g(Dec)g(1989)0
2873 y([19])41 b(\\TMS390Z55)24 b(Cac)n(he)j(Con)n(troller,)f(Data)h
(Sheet",)h(T)-7 b(exas)27 b(Instrumen)n(t,)g(1992)0 3039
y([20])41 b(\\Sk)n(ew)n(ed)26 b(Asso)r(ciativ)n(e)h(Cac)n(hes")f
Fh(same)k(authors)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
